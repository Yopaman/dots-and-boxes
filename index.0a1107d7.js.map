{"mappings":"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","sources":["node_modules/party-js/lib/index.js","node_modules/party-js/lib/scene.js","node_modules/party-js/lib/debug.js","node_modules/party-js/lib/containers.js","node_modules/party-js/lib/settings.js","node_modules/party-js/lib/util/index.js","node_modules/party-js/lib/util/config.js","node_modules/party-js/lib/util/rotation.js","node_modules/party-js/lib/components/index.js","node_modules/party-js/lib/components/circle.js","node_modules/party-js/lib/components/color.js","node_modules/party-js/lib/systems/math.js","node_modules/party-js/lib/components/gradient.js","node_modules/party-js/lib/components/spline.js","node_modules/party-js/lib/components/numericSpline.js","node_modules/party-js/lib/components/rect.js","node_modules/party-js/lib/components/vector.js","node_modules/party-js/lib/util/rules.js","node_modules/party-js/lib/util/lazy.js","node_modules/party-js/lib/particles/emitter.js","node_modules/party-js/lib/systems/variation.js","node_modules/party-js/lib/systems/random.js","node_modules/party-js/lib/particles/options/index.js","node_modules/party-js/lib/particles/options/emitterOptions.js","node_modules/party-js/lib/particles/options/emissionOptions.js","node_modules/party-js/lib/systems/sources.js","node_modules/party-js/lib/particles/options/renderOptions.js","node_modules/party-js/lib/particles/particle.js","node_modules/party-js/lib/particles/renderer.js","node_modules/party-js/lib/systems/shapes.js","node_modules/party-js/lib/templates/index.js","node_modules/party-js/lib/templates/confetti.js","node_modules/party-js/lib/systems/modules.js","node_modules/party-js/lib/templates/sparkles.js","src/Board.ts","src/UI/UI_End.ts","src/UI/UI_Board.ts","src/Game.ts","src/helpers/truncate.ts","src/UI/UI_Infos.ts","src/UI/UI_Creation.ts","src/index.ts"],"sourcesContent":["\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = exports.forceInit = exports.util = exports.math = exports.random = exports.sources = exports.variation = exports.Emitter = exports.Particle = exports.settings = exports.scene = void 0;\r\nvar scene_1 = require(\"./scene\");\r\nvar util_1 = require(\"./util\");\r\n__exportStar(require(\"./components\"), exports);\r\n__exportStar(require(\"./templates\"), exports);\r\n__exportStar(require(\"./systems/shapes\"), exports);\r\n__exportStar(require(\"./systems/modules\"), exports);\r\n// Create the lazy-initializing scene.\r\nexports.scene = new util_1.Lazy(function () {\r\n    // The library requires the use of the DOM, hence it cannot run in non-browser environments.\r\n    if (typeof document === \"undefined\" || typeof window === \"undefined\") {\r\n        throw new Error(\"It seems like you are trying to run party.js in a non-browser-like environment, which is not supported.\");\r\n    }\r\n    return new scene_1.Scene();\r\n});\r\nvar settings_1 = require(\"./settings\");\r\nObject.defineProperty(exports, \"settings\", { enumerable: true, get: function () { return settings_1.settings; } });\r\nvar particle_1 = require(\"./particles/particle\");\r\nObject.defineProperty(exports, \"Particle\", { enumerable: true, get: function () { return particle_1.Particle; } });\r\nvar emitter_1 = require(\"./particles/emitter\");\r\nObject.defineProperty(exports, \"Emitter\", { enumerable: true, get: function () { return emitter_1.Emitter; } });\r\nexports.variation = require(\"./systems/variation\");\r\nexports.sources = require(\"./systems/sources\");\r\nexports.random = require(\"./systems/random\");\r\nexports.math = require(\"./systems/math\");\r\nexports.util = require(\"./util\");\r\n/**\r\n * Forces the initialization of the otherwise lazy scene.\r\n */\r\nfunction forceInit() {\r\n    exports.scene.current;\r\n}\r\nexports.forceInit = forceInit;\r\nexports.default = require(\"./\");\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Scene = void 0;\r\nvar debug_1 = require(\"./debug\");\r\nvar emitter_1 = require(\"./particles/emitter\");\r\nvar renderer_1 = require(\"./particles/renderer\");\r\n/**\r\n * Represents a scene that contains emitters and their particles.\r\n *\r\n * Scenes are responsible for spawning and updating emitters, and\r\n * removing them once they are done.\r\n *\r\n * Scenes are not explicitely present in the DOM as an element, only\r\n * the contained particles are.\r\n */\r\nvar Scene = /** @class */ (function () {\r\n    /**\r\n     * Initializes a new scene and starts the ticking job.\r\n     */\r\n    function Scene() {\r\n        /**\r\n         * The emitters currently present in the scene.\r\n         */\r\n        this.emitters = [];\r\n        /**\r\n         * The debug instance associated with the scene.\r\n         */\r\n        this.debug = new debug_1.Debug(this);\r\n        /**\r\n         * The renderer associated with the scene.\r\n         */\r\n        this.renderer = new renderer_1.Renderer();\r\n        /**\r\n         * The ID of the currently scheduled tick.\r\n         */\r\n        this.scheduledTickId = undefined;\r\n        /**\r\n         * The timestamp of the last tick, used to calculate deltas.\r\n         *\r\n         * @initialValue `performance.now()` (time origin)\r\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMHighResTimeStamp\r\n         */\r\n        this.lastTickTimestamp = performance.now();\r\n        // Ensure the scene context is preserved on the tick.\r\n        this.tick = this.tick.bind(this);\r\n        this.scheduleTick();\r\n    }\r\n    /**\r\n     * Creates and returns a new, default emitter object.\r\n     */\r\n    Scene.prototype.createEmitter = function (options) {\r\n        var emitter = new emitter_1.Emitter(options);\r\n        this.emitters.push(emitter);\r\n        return emitter;\r\n    };\r\n    /**\r\n     * Clears all emitters from the scene.\r\n     *\r\n     * @returns The number of cleared emitters.\r\n     */\r\n    Scene.prototype.clearEmitters = function () {\r\n        return this.emitters.splice(0).length;\r\n    };\r\n    /**\r\n     * Clears the particles from all emitters in the scene.\r\n     * Note that this does not remove the actual emitter objects though.\r\n     *\r\n     * @returns The number of cleared particles.\r\n     */\r\n    Scene.prototype.clearParticles = function () {\r\n        return this.emitters.reduce(function (sum, emitter) { return sum + emitter.clearParticles(); }, 0);\r\n    };\r\n    /**\r\n     * Schedules a tick in the scene.\r\n     */\r\n    Scene.prototype.scheduleTick = function () {\r\n        this.scheduledTickId = window.requestAnimationFrame(this.tick);\r\n    };\r\n    /**\r\n     * Cancels a pending tick operation.\r\n     */\r\n    Scene.prototype.cancelTick = function () {\r\n        window.cancelAnimationFrame(this.scheduledTickId);\r\n    };\r\n    /**\r\n     * Processes a tick cycle, updating all emitters contained in the scene.\r\n     * This is handled as a JS animation frame event, hence the passed timestamp.\r\n     *\r\n     * @remarks\r\n     * The emitter ticking and particle rendering is run using try-catch blocks,\r\n     * to ensure that we can recover from potential errors.\r\n     *\r\n     * @param timestamp The current timestamp of the animation frame.\r\n     */\r\n    Scene.prototype.tick = function (timestamp) {\r\n        // Calculate the elapsed delta and convert it to seconds.\r\n        var delta = (timestamp - this.lastTickTimestamp) / 1000;\r\n        try {\r\n            // Perform ticks for all the emitters in the scene.\r\n            for (var i = 0; i < this.emitters.length; i++) {\r\n                var emitter = this.emitters[i];\r\n                emitter.tick(delta);\r\n                if (emitter.isExpired && emitter.canRemove) {\r\n                    this.emitters.splice(i--, 1);\r\n                }\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(\"An error occurred while updating the scene's emitters:\\n\\\"\" + error + \"\\\"\");\r\n        }\r\n        try {\r\n            // Instruct the renderer to draw the particles of all systems.\r\n            this.renderer.begin();\r\n            for (var _i = 0, _a = this.emitters; _i < _a.length; _i++) {\r\n                var emitter = _a[_i];\r\n                for (var _b = 0, _c = emitter.particles; _b < _c.length; _b++) {\r\n                    var particle = _c[_b];\r\n                    this.renderer.renderParticle(particle, emitter);\r\n                }\r\n            }\r\n            this.renderer.end();\r\n        }\r\n        catch (error) {\r\n            console.error(\"An error occurred while rendering the scene's particles:\\n\\\"\" + error + \"\\\"\");\r\n        }\r\n        // Perform a tick on the debug interface\r\n        this.debug.tick(delta);\r\n        // Save the timestamp as the last tick timestamp and schedule a new tick.\r\n        this.lastTickTimestamp = timestamp;\r\n        this.scheduleTick();\r\n    };\r\n    return Scene;\r\n}());\r\nexports.Scene = Scene;\r\n","\"use strict\";\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Debug = void 0;\r\nvar containers_1 = require(\"./containers\");\r\nvar settings_1 = require(\"./settings\");\r\n/**\r\n * Represents a utility module to view debug information inside the DOM.\r\n * This is disabled by default and needs to manually be enabled by setting\r\n * the '.enabled' field to true.\r\n *\r\n * While disabled, the utility will not fetch stats and update itself.\r\n */\r\nvar Debug = /** @class */ (function () {\r\n    /**\r\n     * Registers a new debug utility that is attached to the given scene.\r\n     *\r\n     * @param scene The scene to attach to.\r\n     */\r\n    function Debug(scene) {\r\n        this.scene = scene;\r\n        /**\r\n         * The rate at which the debug interface should refresh itself (per second).\r\n         */\r\n        this.refreshRate = 8;\r\n        /**\r\n         * The timer counting down to refreshes.\r\n         */\r\n        this.refreshTimer = 1 / this.refreshRate;\r\n    }\r\n    /**\r\n     * Processes a tick event in the interface. This checks if enough has passed to\r\n     * trigger a refresh, and if so, fetches the debug information and updates the DOM.\r\n     *\r\n     * @param delta The time that has elapsed since the last tick.\r\n     */\r\n    Debug.prototype.tick = function (delta) {\r\n        var container = containers_1.debugContainer.current;\r\n        // If the current display style does not match the style inferred from the\r\n        // enabled-state, update it.\r\n        var displayStyle = settings_1.settings.debug ? \"block\" : \"none\";\r\n        if (container.style.display !== displayStyle) {\r\n            container.style.display = displayStyle;\r\n        }\r\n        if (!settings_1.settings.debug) {\r\n            // If the interface is not enabled, don't fetch or update any infos.\r\n            return;\r\n        }\r\n        this.refreshTimer += delta;\r\n        if (this.refreshTimer > 1 / this.refreshRate) {\r\n            this.refreshTimer = 0;\r\n            // Update the container with the fetched information joined on line breaks.\r\n            container.innerHTML = this.getDebugInformation(delta).join(\"<br>\");\r\n        }\r\n    };\r\n    /**\r\n     * Fetches the debug information from the specified delta and the linked scene.\r\n     *\r\n     * @returns An array of debugging information, formatted as HTML.\r\n     */\r\n    Debug.prototype.getDebugInformation = function (delta) {\r\n        // Count emitters and particles.\r\n        var emitters = this.scene.emitters.length;\r\n        var particles = this.scene.emitters.reduce(function (acc, cur) { return acc + cur.particles.length; }, 0);\r\n        var infos = [\r\n            \"<b>party.js Debug</b>\",\r\n            \"--------------\",\r\n            \"FPS: \" + Math.round(1 / delta),\r\n            \"Emitters: \" + emitters,\r\n            \"Particles: \" + particles,\r\n        ];\r\n        // Emitter informations are formatted using their index, internal timer\r\n        // and total particle count.\r\n        var emitterInfos = this.scene.emitters.map(function (emitter) {\r\n            return [\r\n                // Show the current loop and the total loops.\r\n                \"\\u2B6F: \" + (emitter[\"currentLoop\"] + 1) + \"/\" + (emitter.options.loops >= 0 ? emitter.options.loops : \"∞\"),\r\n                // Show the amount of particle contained.\r\n                \"\\u03A3p: \" + emitter.particles.length,\r\n                // Show the internal timer.\r\n                !emitter.isExpired\r\n                    ? \"\\u03A3t: \" + emitter[\"durationTimer\"].toFixed(3) + \"s\"\r\n                    : \"<i>expired</i>\",\r\n            ].join(\", \");\r\n        });\r\n        infos.push.apply(infos, __spreadArray([\"--------------\"], emitterInfos));\r\n        return infos;\r\n    };\r\n    return Debug;\r\n}());\r\nexports.Debug = Debug;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.particleContainer = exports.debugContainer = exports.rootContainer = void 0;\r\nvar settings_1 = require(\"./settings\");\r\nvar util_1 = require(\"./util\");\r\n/**\r\n * The prefix to apply to the containers.\r\n */\r\nvar containerPrefix = \"party-js-\";\r\n/**\r\n * Checks if the specified container is 'active', meaning not undefined and attached to the DOM.\r\n */\r\nfunction isContainerActive(container) {\r\n    return container && container.isConnected;\r\n}\r\n/**\r\n * A generic factory method for creating a DOM container. Prefixes the specified name with the\r\n * container prefix, applies the styles and adds it under the parent.\r\n */\r\nfunction makeContainer(name, styles, parent) {\r\n    var container = document.createElement(\"div\");\r\n    container.id = containerPrefix + name;\r\n    Object.assign(container.style, styles);\r\n    return parent.appendChild(container);\r\n}\r\n/**\r\n * Represents the root container for DOM elements of the library.\r\n */\r\nexports.rootContainer = new util_1.Lazy(function () {\r\n    return makeContainer(\"container\", {\r\n        position: \"fixed\",\r\n        left: \"0\",\r\n        top: \"0\",\r\n        height: \"100vh\",\r\n        width: \"100vw\",\r\n        pointerEvents: \"none\",\r\n        userSelect: \"none\",\r\n        zIndex: settings_1.settings.zIndex.toString(),\r\n    }, document.body);\r\n}, isContainerActive);\r\n/**\r\n * Represents the debugging container of the library, only active if debugging is enabled.\r\n */\r\nexports.debugContainer = new util_1.Lazy(function () {\r\n    return makeContainer(\"debug\", {\r\n        position: \"absolute\",\r\n        top: \"0\",\r\n        left: \"0\",\r\n        margin: \"0.5em\",\r\n        padding: \"0.5em 1em\",\r\n        border: \"2px solid rgb(0, 0, 0, 0.2)\",\r\n        background: \"rgb(0, 0, 0, 0.1)\",\r\n        color: \"#555\",\r\n        fontFamily: \"monospace\",\r\n    }, exports.rootContainer.current);\r\n}, isContainerActive);\r\n/**\r\n * Represents the particle container of the library.\r\n * This is where the particle DOM elements get rendered into.\r\n */\r\nexports.particleContainer = new util_1.Lazy(function () {\r\n    return makeContainer(\"particles\", {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        overflow: \"hidden\",\r\n        perspective: \"1200px\",\r\n    }, exports.rootContainer.current);\r\n}, isContainerActive);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.settings = void 0;\r\nexports.settings = {\r\n    debug: false,\r\n    gravity: 800,\r\n    zIndex: 99999,\r\n    respectReducedMotion: true,\r\n};\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./config\"), exports);\r\n__exportStar(require(\"./rotation\"), exports);\r\n__exportStar(require(\"./rules\"), exports);\r\n__exportStar(require(\"./lazy\"), exports);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.overrideDefaults = void 0;\r\n/**\r\n * Replaces the supplied defaults with the properties specified in the overrides.\r\n * This returns a new object.\r\n */\r\nfunction overrideDefaults(defaults, overrides) {\r\n    return Object.assign({}, defaults, overrides);\r\n}\r\nexports.overrideDefaults = overrideDefaults;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.rotationToNormal = void 0;\r\nvar components_1 = require(\"../components\");\r\nvar math_1 = require(\"../systems/math\");\r\n/**\r\n * Converts the specified euler rotation (in degrees) into the corresponding normal vector.\r\n *\r\n * @remarks\r\n * The normal is calculated by placing a (figurative) plane in a coordinate-system's\r\n * origin, and rotating it by the specified angles. Note that the z-component of the\r\n * rotation is irrelevant for the normal and can be ignored. Then, two vectors\r\n * describing the orientation of the plane are calculated. Their cross product\r\n * denotes the normal vector.\r\n *\r\n * @param rotation The euler rotation angles (in degrees) to calculate the normal for.\r\n */\r\nfunction rotationToNormal(rotation) {\r\n    var alpha = rotation.x * math_1.deg2rad;\r\n    var beta = rotation.y * math_1.deg2rad;\r\n    var a = new components_1.Vector(Math.cos(beta), 0, Math.sin(beta));\r\n    var b = new components_1.Vector(0, Math.cos(alpha), Math.sin(alpha));\r\n    return a.cross(b);\r\n}\r\nexports.rotationToNormal = rotationToNormal;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./circle\"), exports);\r\n__exportStar(require(\"./color\"), exports);\r\n__exportStar(require(\"./gradient\"), exports);\r\n__exportStar(require(\"./numericSpline\"), exports);\r\n__exportStar(require(\"./rect\"), exports);\r\n__exportStar(require(\"./vector\"), exports);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Circle = void 0;\r\n/**\r\n * Represents a circle.\r\n */\r\nvar Circle = /** @class */ (function () {\r\n    /**\r\n     * Creates a new circle at the specified coordinates, with a default radius of 0.\r\n     */\r\n    function Circle(x, y, radius) {\r\n        if (radius === void 0) { radius = 0; }\r\n        this.x = x;\r\n        this.y = y;\r\n        this.radius = radius;\r\n    }\r\n    Circle.zero = new Circle(0, 0);\r\n    return Circle;\r\n}());\r\nexports.Circle = Circle;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Color = void 0;\r\nvar math_1 = require(\"../systems/math\");\r\n/**\r\n * Represents a color consisting of RGB values. The components of it are\r\n * represented as integers in the range 0 to 255.\r\n *\r\n * @example\r\n * ```ts\r\n * const a = new Color(12, 59, 219);\r\n * const b = Color.fromHex(\"#ffa68d\");\r\n * const result = a.mix(b);\r\n * ```\r\n */\r\nvar Color = /** @class */ (function () {\r\n    /**\r\n     * Creates a new color instance from the specified RGB components.\r\n     */\r\n    function Color(r, g, b) {\r\n        this.values = new Float32Array(3);\r\n        this.rgb = [r, g, b];\r\n    }\r\n    Object.defineProperty(Color.prototype, \"r\", {\r\n        /**\r\n         * Returns the r-component of the color.\r\n         */\r\n        get: function () {\r\n            return this.values[0];\r\n        },\r\n        /**\r\n         * Modifies the r-component of the color.\r\n         * Note that this also floors the value.\r\n         */\r\n        set: function (value) {\r\n            this.values[0] = Math.floor(value);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Color.prototype, \"g\", {\r\n        /**\r\n         * Returns the g-component of the color.\r\n         */\r\n        get: function () {\r\n            return this.values[1];\r\n        },\r\n        /**\r\n         * Modifies the g-component of the color.\r\n         * Note that this also floors the value.\r\n         */\r\n        set: function (value) {\r\n            this.values[1] = Math.floor(value);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Color.prototype, \"b\", {\r\n        /**\r\n         * Returns the b-component of the color.\r\n         * Note that this also floors the value.\r\n         */\r\n        get: function () {\r\n            return this.values[2];\r\n        },\r\n        /**\r\n         * Modifies the b-component of the color.\r\n         */\r\n        set: function (value) {\r\n            this.values[2] = Math.floor(value);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Color.prototype, \"rgb\", {\r\n        /**\r\n         * Returns the rgb-components of the color, bundled as a copied array.\r\n         */\r\n        get: function () {\r\n            return [this.r, this.g, this.b];\r\n        },\r\n        /**\r\n         * Simultaneously updates the rgb-components of the color, by passing an array.\r\n         */\r\n        set: function (values) {\r\n            this.r = values[0];\r\n            this.g = values[1];\r\n            this.b = values[2];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Mixes the two color together with an optional mixing weight.\r\n     * This weight is 0.5 by default, perfectly averaging the color.\r\n     */\r\n    Color.prototype.mix = function (color, weight) {\r\n        if (weight === void 0) { weight = 0.5; }\r\n        return new Color(math_1.lerp(this.r, color.r, weight), math_1.lerp(this.g, color.g, weight), math_1.lerp(this.b, color.b, weight));\r\n    };\r\n    /**\r\n     * Returns the hexadecimal representation of the color, prefixed by '#'.\r\n     */\r\n    Color.prototype.toHex = function () {\r\n        var hex = function (v) { return v.toString(16).padStart(2, \"0\"); };\r\n        return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\r\n    };\r\n    /**\r\n     * Returns a formatted representation of the color.\r\n     */\r\n    Color.prototype.toString = function () {\r\n        return \"rgb(\" + this.values.join(\", \") + \")\";\r\n    };\r\n    /**\r\n     * Creates a color from the specified hexadecimal string.\r\n     * This string can optionally be prefixed by '#'.\r\n     */\r\n    Color.fromHex = function (hex) {\r\n        if (hex.startsWith(\"#\")) {\r\n            hex = hex.substr(1);\r\n        }\r\n        return new Color(parseInt(hex.substr(0, 2), 16), parseInt(hex.substr(2, 2), 16), parseInt(hex.substr(4, 2), 16));\r\n    };\r\n    /**\r\n     * Creates a color from the specified HSL components.\r\n     *\r\n     * @see https://stackoverflow.com/a/9493060/5507624\r\n     */\r\n    Color.fromHsl = function (h, s, l) {\r\n        h /= 360;\r\n        s /= 100;\r\n        l /= 100;\r\n        if (s === 0) {\r\n            return new Color(l, l, l);\r\n        }\r\n        else {\r\n            var hue2rgb = function (p, q, t) {\r\n                if (t < 0)\r\n                    t += 1;\r\n                if (t > 1)\r\n                    t -= 1;\r\n                if (t < 1 / 6)\r\n                    return p + (q - p) * 6 * t;\r\n                if (t < 1 / 2)\r\n                    return q;\r\n                if (t < 2 / 3)\r\n                    return p + (q - p) * (2 / 3 - t) * 6;\r\n                return p;\r\n            };\r\n            var to255 = function (v) { return Math.min(255, 256 * v); };\r\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n            var p = 2 * l - q;\r\n            return new Color(to255(hue2rgb(p, q, h + 1 / 3)), to255(hue2rgb(p, q, h)), to255(hue2rgb(p, q, h - 1 / 3)));\r\n        }\r\n    };\r\n    /**\r\n     * Returns (1, 1, 1).\r\n     */\r\n    Color.white = new Color(255, 255, 255);\r\n    /**\r\n     * Returns (0, 0, 0).\r\n     */\r\n    Color.black = new Color(0, 0, 0);\r\n    return Color;\r\n}());\r\nexports.Color = Color;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.approximately = exports.clamp = exports.invlerp = exports.slerp = exports.lerp = exports.epsilon = exports.rad2deg = exports.deg2rad = void 0;\r\n/**\r\n * Constant coefficient to convert degrees to radians.\r\n */\r\nexports.deg2rad = Math.PI / 180;\r\n/**\r\n * Constant coefficient to convert radians to degrees.\r\n */\r\nexports.rad2deg = 180 / Math.PI;\r\n/**\r\n * A small value to approximately compare values.\r\n */\r\nexports.epsilon = 0.000001;\r\n/**\r\n * Linearly interpolates between a and b by t.\r\n */\r\nfunction lerp(a, b, t) {\r\n    return (1 - t) * a + t * b;\r\n}\r\nexports.lerp = lerp;\r\n/**\r\n * Smoothly interpolates between a and b by t (using cosine interpolation).\r\n */\r\nfunction slerp(a, b, t) {\r\n    return lerp(a, b, (1 - Math.cos(t * Math.PI)) / 2);\r\n}\r\nexports.slerp = slerp;\r\n/**\r\n * Inversely lerps v between a and b to find t.\r\n */\r\nfunction invlerp(a, b, v) {\r\n    return (v - a) / (b - a);\r\n}\r\nexports.invlerp = invlerp;\r\n/**\r\n * Clamps the specified value between a minimum and a maximum.\r\n */\r\nfunction clamp(value, min, max) {\r\n    return Math.min(max, Math.max(min, value));\r\n}\r\nexports.clamp = clamp;\r\n/**\r\n * Checks if a is approximately equal to b.\r\n */\r\nfunction approximately(a, b) {\r\n    return Math.abs(a - b) < exports.epsilon;\r\n}\r\nexports.approximately = approximately;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Gradient = void 0;\r\nvar spline_1 = require(\"./spline\");\r\n/**\r\n * Represents a gradient that can be used to interpolate between multiple color.\r\n */\r\nvar Gradient = /** @class */ (function (_super) {\r\n    __extends(Gradient, _super);\r\n    function Gradient() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Interpolates between two color on the gradient.\r\n     */\r\n    Gradient.prototype.interpolate = function (a, b, t) {\r\n        return a.mix(b, t);\r\n    };\r\n    /**\r\n     * Returns a solid gradient from the given color.\r\n     */\r\n    Gradient.solid = function (color) {\r\n        return new Gradient({ value: color, time: 0.5 });\r\n    };\r\n    /**\r\n     * Returns a gradient with evenly spaced keys from the given colors.\r\n     */\r\n    Gradient.simple = function () {\r\n        var colors = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            colors[_i] = arguments[_i];\r\n        }\r\n        var step = 1 / (colors.length - 1);\r\n        return new (Gradient.bind.apply(Gradient, __spreadArray([void 0], colors.map(function (color, index) { return ({\r\n            value: color,\r\n            time: index * step,\r\n        }); }))))();\r\n    };\r\n    return Gradient;\r\n}(spline_1.Spline));\r\nexports.Gradient = Gradient;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Spline = void 0;\r\nvar math_1 = require(\"../systems/math\");\r\n/**\r\n * Represents a spline that can be used to continueously evaluate a function\r\n * between keys. The base implementation is kept generic, so the functionality\r\n * can easily be implemented for similar constructs, such as gradients.\r\n */\r\nvar Spline = /** @class */ (function () {\r\n    /**\r\n     * Creates a new spline instance, using the specified keys.\r\n     * Note that you have to pass at least one key.\r\n     */\r\n    function Spline() {\r\n        var keys = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            keys[_i] = arguments[_i];\r\n        }\r\n        if (keys.length === 0) {\r\n            throw new Error(\"Splines require at least one key.\");\r\n        }\r\n        if (Array.isArray(keys[0])) {\r\n            throw new Error(\"You are trying to pass an array to the spline constructor, which is not supported. \" +\r\n                \"Try to spread the array into the constructor instead.\");\r\n        }\r\n        this.keys = keys;\r\n    }\r\n    /**\r\n     * Evaluates the spline at the given time.\r\n     */\r\n    Spline.prototype.evaluate = function (time) {\r\n        if (this.keys.length === 0) {\r\n            throw new Error(\"Attempt to evaluate a spline with no keys.\");\r\n        }\r\n        if (this.keys.length === 1) {\r\n            // The spline only contains one key, therefore is constant.\r\n            return this.keys[0].value;\r\n        }\r\n        // Sort the keys and figure out the first key above the passed time.\r\n        var ascendingKeys = this.keys.sort(function (a, b) { return a.time - b.time; });\r\n        var upperKeyIndex = ascendingKeys.findIndex(function (g) { return g.time > time; });\r\n        // If the found index is either 0 or -1, the specified time falls out\r\n        // of the range of the supplied keys. In that case, the value of the\r\n        // nearest applicant key is returned.\r\n        if (upperKeyIndex === 0) {\r\n            return ascendingKeys[0].value;\r\n        }\r\n        if (upperKeyIndex === -1) {\r\n            return ascendingKeys[ascendingKeys.length - 1].value;\r\n        }\r\n        // Otherwise, find the bounding keys, and extrapolate the time between\r\n        // the two. This is then used to interpolate between the two keys,\r\n        // using the provided implementation.\r\n        var lowerKey = ascendingKeys[upperKeyIndex - 1];\r\n        var upperKey = ascendingKeys[upperKeyIndex];\r\n        var containedTime = math_1.invlerp(lowerKey.time, upperKey.time, time);\r\n        return this.interpolate(lowerKey.value, upperKey.value, containedTime);\r\n    };\r\n    return Spline;\r\n}());\r\nexports.Spline = Spline;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NumericSpline = void 0;\r\nvar math_1 = require(\"../systems/math\");\r\nvar spline_1 = require(\"./spline\");\r\n/**\r\n * Represents a spline that can take numeric values.\r\n */\r\nvar NumericSpline = /** @class */ (function (_super) {\r\n    __extends(NumericSpline, _super);\r\n    function NumericSpline() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Smoothly interpolates between two keys on the spline.\r\n     */\r\n    NumericSpline.prototype.interpolate = function (a, b, t) {\r\n        return math_1.slerp(a, b, t);\r\n    };\r\n    return NumericSpline;\r\n}(spline_1.Spline));\r\nexports.NumericSpline = NumericSpline;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Rect = void 0;\r\n/**\r\n * Represents a rectangle with an origin and size.\r\n */\r\nvar Rect = /** @class */ (function () {\r\n    function Rect(x, y, width, height) {\r\n        if (width === void 0) { width = 0; }\r\n        if (height === void 0) { height = 0; }\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n    /**\r\n     * Returns a new document-space rectangle from the viewport's bounds.\r\n     */\r\n    Rect.fromScreen = function () {\r\n        return new Rect(window.scrollX, window.scrollY, window.innerWidth, window.innerHeight);\r\n    };\r\n    /**\r\n     * Returns a new document-space rectangle from the specified element.\r\n     */\r\n    Rect.fromElement = function (element) {\r\n        var r = element.getBoundingClientRect();\r\n        return new Rect(window.scrollX + r.x, window.scrollY + r.y, r.width, r.height);\r\n    };\r\n    Rect.zero = new Rect(0, 0);\r\n    return Rect;\r\n}());\r\nexports.Rect = Rect;\r\n","\"use strict\";\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Vector = void 0;\r\nvar math_1 = require(\"../systems/math\");\r\n/**\r\n * Represents a structure used to process vectors.\r\n *\r\n * @remarks\r\n * Note that the operations in this class will **not** modify the original vector,\r\n * except for the property assignments. This is to ensure that vectors are not\r\n * unintentionally modified.\r\n *\r\n * @example\r\n * ```ts\r\n * const vectorA = new Vector(1, 3, 5);\r\n * const vectorB = new Vector(2, 3, 1);\r\n * const vectorC = vectorA.add(vectorB); // (3, 6, 6)\r\n * ```\r\n */\r\nvar Vector = /** @class */ (function () {\r\n    /**\r\n     * Creates a new vector with optional x-, y-, and z-components.\r\n     * Omitted components are defaulted to 0.\r\n     */\r\n    function Vector(x, y, z) {\r\n        if (x === void 0) { x = 0; }\r\n        if (y === void 0) { y = 0; }\r\n        if (z === void 0) { z = 0; }\r\n        this.values = new Float32Array(3);\r\n        this.xyz = [x, y, z];\r\n    }\r\n    Object.defineProperty(Vector.prototype, \"x\", {\r\n        /**\r\n         * Returns the x-component of the vector.\r\n         */\r\n        get: function () {\r\n            return this.values[0];\r\n        },\r\n        /**\r\n         * Modifies the x-component of the vector.\r\n         */\r\n        set: function (value) {\r\n            this.values[0] = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Vector.prototype, \"y\", {\r\n        /**\r\n         * Returns the y-component of the vector.\r\n         */\r\n        get: function () {\r\n            return this.values[1];\r\n        },\r\n        /**\r\n         * Modifies the y-component of the vector.\r\n         */\r\n        set: function (value) {\r\n            this.values[1] = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Vector.prototype, \"z\", {\r\n        /**\r\n         * Returns the z-component of the vector.\r\n         */\r\n        get: function () {\r\n            return this.values[2];\r\n        },\r\n        /**\r\n         * Modifies the z-component of the vector.\r\n         */\r\n        set: function (value) {\r\n            this.values[2] = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Vector.prototype, \"xyz\", {\r\n        /**\r\n         * Returns the xyz-components of the vector, bundled as a copied array.\r\n         */\r\n        get: function () {\r\n            return [this.x, this.y, this.z];\r\n        },\r\n        /**\r\n         * Simultaneously updates the xyz-components of the vector, by passing an array.\r\n         */\r\n        set: function (values) {\r\n            this.values[0] = values[0];\r\n            this.values[1] = values[1];\r\n            this.values[2] = values[2];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the length of the vector.\r\n     */\r\n    Vector.prototype.magnitude = function () {\r\n        return Math.sqrt(this.sqrMagnitude());\r\n    };\r\n    /**\r\n     * Returns the squared length of the vector.\r\n     */\r\n    Vector.prototype.sqrMagnitude = function () {\r\n        return this.x * this.x + this.y * this.y + this.z * this.z;\r\n    };\r\n    /**\r\n     * Adds the two vectors together, component-wise.\r\n     */\r\n    Vector.prototype.add = function (vector) {\r\n        return new Vector(this.x + vector.x, this.y + vector.y, this.z + vector.z);\r\n    };\r\n    /**\r\n     * Subtracts the right vector from the left one, component-wise.\r\n     */\r\n    Vector.prototype.subtract = function (vector) {\r\n        return new Vector(this.x - vector.x, this.y - vector.y, this.z - vector.z);\r\n    };\r\n    /**\r\n     * Scales the lefthand vector by another vector or by a number.\r\n     */\r\n    Vector.prototype.scale = function (scalar) {\r\n        if (typeof scalar === \"number\") {\r\n            return new Vector(this.x * scalar, this.y * scalar, this.z * scalar);\r\n        }\r\n        else {\r\n            return new Vector(this.x * scalar.x, this.y * scalar.y, this.z * scalar.z);\r\n        }\r\n    };\r\n    /**\r\n     * Normalizes the vector to a length of 1. If the length was previously zero,\r\n     * then a zero-length vector will be returned.\r\n     */\r\n    Vector.prototype.normalized = function () {\r\n        var magnitude = this.magnitude();\r\n        if (magnitude !== 0) {\r\n            return this.scale(1 / magnitude);\r\n        }\r\n        return new (Vector.bind.apply(Vector, __spreadArray([void 0], this.xyz)))();\r\n    };\r\n    /**\r\n     * Returns the angle between two vectors, in degrees.\r\n     */\r\n    Vector.prototype.angle = function (vector) {\r\n        return (math_1.rad2deg *\r\n            Math.acos((this.x * vector.x + this.y * vector.y + this.z * vector.z) /\r\n                (this.magnitude() * vector.magnitude())));\r\n    };\r\n    /**\r\n     * Returns the cross-product of two vectors.\r\n     */\r\n    Vector.prototype.cross = function (vector) {\r\n        return new Vector(this.y * vector.z - this.z * vector.y, this.z * vector.x - this.x * vector.z, this.x * vector.y - this.y * vector.x);\r\n    };\r\n    /**\r\n     * returns the dot-product of two vectors.\r\n     */\r\n    Vector.prototype.dot = function (vector) {\r\n        return (this.magnitude() *\r\n            vector.magnitude() *\r\n            Math.cos(math_1.deg2rad * this.angle(vector)));\r\n    };\r\n    /**\r\n     * Returns a formatted representation of the vector.\r\n     */\r\n    Vector.prototype.toString = function () {\r\n        return \"Vector(\" + this.values.join(\", \") + \")\";\r\n    };\r\n    /**\r\n     * Creates a new vector from an angle, in degrees. Note that the z-component will be zero.\r\n     */\r\n    Vector.from2dAngle = function (angle) {\r\n        return new Vector(Math.cos(angle * math_1.deg2rad), Math.sin(angle * math_1.deg2rad));\r\n    };\r\n    /**\r\n     * Returns (0, 0, 0).\r\n     */\r\n    Vector.zero = new Vector(0, 0, 0);\r\n    /**\r\n     * Returns (1, 1, 1).\r\n     */\r\n    Vector.one = new Vector(1, 1, 1);\r\n    /**\r\n     * Returns (1, 0, 0).\r\n     */\r\n    Vector.right = new Vector(1, 0, 0);\r\n    /**\r\n     * Returns (0, 1, 0).\r\n     */\r\n    Vector.up = new Vector(0, 1, 0);\r\n    /**\r\n     * Returns (0, 0, 1).\r\n     */\r\n    Vector.forward = new Vector(0, 0, 1);\r\n    return Vector;\r\n}());\r\nexports.Vector = Vector;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.despawningRules = void 0;\r\n/**\r\n * Contains a set of pre-defined particle despawning rules.\r\n */\r\nexports.despawningRules = {\r\n    /**\r\n     * A rule that despawns a particle once its lifetime is over.\r\n     */\r\n    lifetime: function (particle) {\r\n        return particle.lifetime <= 0;\r\n    },\r\n    /**\r\n     * A rule that despawns a particle once its y-coordinate is outside of the document.\r\n     */\r\n    bounds: function (particle) {\r\n        // Get document height: https://stackoverflow.com/a/44077777/5507624\r\n        var height = document.documentElement.scrollHeight;\r\n        return particle.location.y > height;\r\n    },\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Lazy = void 0;\r\n/**\r\n * A wrapper class to lazily initialize a value.\r\n * Supports custom factory and predicate methods.\r\n */\r\nvar Lazy = /** @class */ (function () {\r\n    function Lazy(factory, exists) {\r\n        if (exists === void 0) { exists = Lazy.defaultExists; }\r\n        this.factory = factory;\r\n        this.exists = exists;\r\n    }\r\n    Object.defineProperty(Lazy.prototype, \"current\", {\r\n        /**\r\n         * The current value of the lazy object. Will be initialized, if the 'exists'\r\n         * predicate doesn't match.\r\n         */\r\n        get: function () {\r\n            if (!this.exists(this.value)) {\r\n                this.value = this.factory();\r\n            }\r\n            return this.value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Lazy.defaultExists = function (value) {\r\n        return typeof value !== \"undefined\";\r\n    };\r\n    return Lazy;\r\n}());\r\nexports.Lazy = Lazy;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Emitter = void 0;\r\nvar vector_1 = require(\"../components/vector\");\r\nvar settings_1 = require(\"../settings\");\r\nvar variation_1 = require(\"../systems/variation\");\r\nvar config_1 = require(\"../util/config\");\r\nvar options_1 = require(\"./options\");\r\nvar particle_1 = require(\"./particle\");\r\n/**\r\n * Represents an emitter that is responsible for spawning and updating particles.\r\n *\r\n * Particles themselves are just data-holders, with the system acting upon them and\r\n * modifying them. The modifications are done mainly via modules, that use the\r\n * particle's data together with some function to apply temporal transitions.\r\n *\r\n * @see Particle\r\n * @see ParticleModifierModule\r\n */\r\nvar Emitter = /** @class */ (function () {\r\n    /**\r\n     * Creates a new emitter, using default options.\r\n     */\r\n    function Emitter(options) {\r\n        /**\r\n         * The particles currently contained within the system.\r\n         */\r\n        this.particles = [];\r\n        this.currentLoop = 0; // The current loop index.\r\n        this.durationTimer = 0; // Measures the current runtime duration, to allow loops to reset.\r\n        this.emissionTimer = 0; // Measures the current emission timer, to allow spawning particles in intervals.\r\n        this.attemptedBurstIndices = []; // The indices of the particle bursts that were attempted this loop.\r\n        this.options = config_1.overrideDefaults(options_1.getDefaultEmitterOptions(), options === null || options === void 0 ? void 0 : options.emitterOptions);\r\n        this.emission = config_1.overrideDefaults(options_1.getDefaultEmissionOptions(), options === null || options === void 0 ? void 0 : options.emissionOptions);\r\n        this.renderer = config_1.overrideDefaults(options_1.getDefaultRendererOptions(), options === null || options === void 0 ? void 0 : options.rendererOptions);\r\n    }\r\n    Object.defineProperty(Emitter.prototype, \"isExpired\", {\r\n        /**\r\n         * Checks if the emitter is already expired and can be removed.\r\n         * Expired emitters do not emit new particles.\r\n         */\r\n        get: function () {\r\n            return (this.options.loops >= 0 && this.currentLoop >= this.options.loops);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Emitter.prototype, \"canRemove\", {\r\n        /**\r\n         * Checks if the emitter can safely be removed.\r\n         * This is true if no more particles are active.\r\n         */\r\n        get: function () {\r\n            return this.particles.length === 0;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Clears all particles inside the emitter.\r\n     *\r\n     * @returns The number of cleared particles.\r\n     */\r\n    Emitter.prototype.clearParticles = function () {\r\n        return this.particles.splice(0).length;\r\n    };\r\n    /**\r\n     * Processes a tick of the emitter, using the elapsed time.\r\n     *\r\n     * @remarks\r\n     * This handles a few things, namely:\r\n     * - Incrementing the duration timer and potentially incrementing the loop.\r\n     * - Handling particle bursts & emissions.\r\n     * - Despawning particles conditionally.\r\n     *\r\n     * @param delta The time, in seconds, passed since the last tick.\r\n     */\r\n    Emitter.prototype.tick = function (delta) {\r\n        if (!this.isExpired) {\r\n            this.durationTimer += delta;\r\n            if (this.durationTimer >= this.options.duration) {\r\n                this.currentLoop++;\r\n                // To start a new loop, the duration timer and attempted bursts are reset.\r\n                this.durationTimer = 0;\r\n                this.attemptedBurstIndices = [];\r\n            }\r\n            // We need to check the expiry again, in case the added loop or duration changed something.\r\n            if (!this.isExpired) {\r\n                // Iterate over the bursts, attempting to execute them if the time is ready.\r\n                var burstIndex = 0;\r\n                for (var _i = 0, _a = this.emission.bursts; _i < _a.length; _i++) {\r\n                    var burst = _a[_i];\r\n                    if (burst.time <= this.durationTimer) {\r\n                        // Has the burst already been attempted? If not ...\r\n                        if (!this.attemptedBurstIndices.includes(burstIndex)) {\r\n                            // Perform the burst, emitting a variable amount of particles.\r\n                            var count = variation_1.evaluateVariation(burst.count);\r\n                            for (var i = 0; i < count; i++) {\r\n                                this.emitParticle();\r\n                            }\r\n                            // Mark the burst as attempted.\r\n                            this.attemptedBurstIndices.push(burstIndex);\r\n                        }\r\n                    }\r\n                    burstIndex++;\r\n                }\r\n                // Handle the 'emission over time'. By using a while-loop instead of a simple\r\n                // if-condition, we take high deltas into account, and ensure that the correct\r\n                // number of particles will consistently be emitted.\r\n                this.emissionTimer += delta;\r\n                var delay = 1 / this.emission.rate;\r\n                while (this.emissionTimer > delay) {\r\n                    this.emissionTimer -= delay;\r\n                    this.emitParticle();\r\n                }\r\n            }\r\n        }\r\n        var _loop_1 = function (i) {\r\n            var particle = this_1.particles[i];\r\n            this_1.tickParticle(particle, delta);\r\n            // Particles should be despawned (i.e. removed from the collection) if any of\r\n            // the despawning rules apply to them.\r\n            if (this_1.options.despawningRules.some(function (rule) { return rule(particle); })) {\r\n                this_1.particles.splice(i, 1);\r\n            }\r\n        };\r\n        var this_1 = this;\r\n        for (var i = this.particles.length - 1; i >= 0; i--) {\r\n            _loop_1(i);\r\n        }\r\n    };\r\n    /**\r\n     * Performs an internal tick for the particle.\r\n     *\r\n     * @remarks\r\n     * This method controls the particle's lifetime, location and velocity, according\r\n     * to the elapsed delta and the configuration. Additionally, each of the emitter's\r\n     * modules is applied to the particle.\r\n     *\r\n     * @param particle The particle to apply the tick for.\r\n     * @param delta The time, in seconds, passed since the last tick.\r\n     */\r\n    Emitter.prototype.tickParticle = function (particle, delta) {\r\n        particle.lifetime -= delta;\r\n        if (this.options.useGravity) {\r\n            // Apply gravitational acceleration to the particle.\r\n            particle.velocity = particle.velocity.add(vector_1.Vector.up.scale(settings_1.settings.gravity * delta));\r\n        }\r\n        // Apply the particle's velocity to its location.\r\n        particle.location = particle.location.add(particle.velocity.scale(delta));\r\n        // Apply the modules to the particle.\r\n        for (var _i = 0, _a = this.options.modules; _i < _a.length; _i++) {\r\n            var moduleFunction = _a[_i];\r\n            moduleFunction(particle);\r\n        }\r\n    };\r\n    /**\r\n     * Emits a particle using the registered settings.\r\n     * Also may despawn a particle if the maximum number of particles is exceeded.\r\n     */\r\n    Emitter.prototype.emitParticle = function () {\r\n        var particle = new particle_1.Particle({\r\n            location: this.emission.sourceSampler(),\r\n            lifetime: variation_1.evaluateVariation(this.emission.initialLifetime),\r\n            velocity: vector_1.Vector.from2dAngle(variation_1.evaluateVariation(this.emission.angle)).scale(variation_1.evaluateVariation(this.emission.initialSpeed)),\r\n            size: variation_1.evaluateVariation(this.emission.initialSize),\r\n            rotation: variation_1.evaluateVariation(this.emission.initialRotation),\r\n            color: variation_1.evaluateVariation(this.emission.initialColor),\r\n        });\r\n        this.particles.push(particle);\r\n        // Ensure that no more particles than 'maxParticles' can exist.\r\n        if (this.particles.length > this.options.maxParticles) {\r\n            this.particles.shift();\r\n        }\r\n        return particle;\r\n    };\r\n    return Emitter;\r\n}());\r\nexports.Emitter = Emitter;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.gradientSample = exports.splineSample = exports.skewRelative = exports.skew = exports.range = exports.evaluateVariation = void 0;\r\nvar random_1 = require(\"./random\");\r\n/**\r\n * Returns a value instance of a variation.\r\n */\r\nfunction evaluateVariation(variation) {\r\n    if (Array.isArray(variation))\r\n        return random_1.pick(variation);\r\n    if (typeof variation === \"function\")\r\n        return variation();\r\n    return variation;\r\n}\r\nexports.evaluateVariation = evaluateVariation;\r\n/**\r\n * Creates a variation function that returns a random number from min to max.\r\n */\r\nfunction range(min, max) {\r\n    return function () { return random_1.randomRange(min, max); };\r\n}\r\nexports.range = range;\r\n/**\r\n * Creates a variation function that skews the specified value by a specified, absolute\r\n * amount. This means that instead of the value itself, a random number that deviates\r\n * at most by the specified amount is returned.\r\n *\r\n * @remarks\r\n * If you want to skew by a percentage instead, use `skewRelative`.\r\n */\r\nfunction skew(value, amount) {\r\n    return function () { return value + random_1.randomRange(-amount, amount); };\r\n}\r\nexports.skew = skew;\r\n/**\r\n * Creates a variation function that skews the specified value by a specified percentage.\r\n * This means that instead of the value itself, a random number that deviates by a maximum\r\n * of the specified percentage is returned.\r\n */\r\nfunction skewRelative(value, percentage) {\r\n    return function () { return value * (1 + random_1.randomRange(-percentage, percentage)); };\r\n}\r\nexports.skewRelative = skewRelative;\r\n/**\r\n * Creates a variation function that returns a random sample from the given spline.\r\n *\r\n * @param spline The spline to sample from.\r\n */\r\nfunction splineSample(spline) {\r\n    return function () { return spline.evaluate(Math.random()); };\r\n}\r\nexports.splineSample = splineSample;\r\n/**\r\n * Creates a variation function that returns a random sample from the given gradient.\r\n *\r\n * @remarks\r\n * This function is an alias for the spline variation, since a gradient is just\r\n * a spline under the hood.\r\n *\r\n * @param gradient The gradient to sample from.\r\n */\r\nfunction gradientSample(gradient) {\r\n    return splineSample(gradient);\r\n}\r\nexports.gradientSample = gradientSample;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.randomInsideCircle = exports.randomInsideRect = exports.randomUnitVector = exports.pick = exports.randomRange = void 0;\r\nvar components_1 = require(\"../components\");\r\nvar math_1 = require(\"./math\");\r\n/**\r\n * Returns a random value from min to max.\r\n */\r\nfunction randomRange(min, max) {\r\n    if (min === void 0) { min = 0; }\r\n    if (max === void 0) { max = 1; }\r\n    return math_1.lerp(min, max, Math.random());\r\n}\r\nexports.randomRange = randomRange;\r\n/**\r\n * Picks a random element from the specified array. Returns undefined if the array is empty.\r\n */\r\nfunction pick(arr) {\r\n    return arr.length === 0\r\n        ? undefined\r\n        : arr[Math.floor(Math.random() * arr.length)];\r\n}\r\nexports.pick = pick;\r\n/**\r\n * Returns a random unit vector.\r\n */\r\nfunction randomUnitVector() {\r\n    var theta = randomRange(0, 2 * Math.PI);\r\n    var z = randomRange(-1, 1);\r\n    return new components_1.Vector(Math.sqrt(1 - z * z) * Math.cos(theta), Math.sqrt(1 - z * z) * Math.sin(theta), z);\r\n}\r\nexports.randomUnitVector = randomUnitVector;\r\n/**\r\n * Returns a random point inside the given rect.\r\n */\r\nfunction randomInsideRect(rect) {\r\n    return new components_1.Vector(rect.x + randomRange(0, rect.width), rect.y + randomRange(0, rect.height));\r\n}\r\nexports.randomInsideRect = randomInsideRect;\r\nfunction randomInsideCircle(circle) {\r\n    var theta = randomRange(0, 2 * Math.PI);\r\n    var radius = randomRange(0, circle.radius);\r\n    return new components_1.Vector(circle.x + Math.cos(theta) * radius, circle.y + Math.sin(theta) * radius);\r\n}\r\nexports.randomInsideCircle = randomInsideCircle;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./emitterOptions\"), exports);\r\n__exportStar(require(\"./emissionOptions\"), exports);\r\n__exportStar(require(\"./renderOptions\"), exports);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getDefaultEmitterOptions = void 0;\r\nvar rules_1 = require(\"../../util/rules\");\r\n/**\r\n * Returns the default set of emitter options.\r\n */\r\nfunction getDefaultEmitterOptions() {\r\n    return {\r\n        duration: 5,\r\n        loops: 1,\r\n        useGravity: true,\r\n        maxParticles: 300,\r\n        despawningRules: [rules_1.despawningRules.lifetime, rules_1.despawningRules.bounds],\r\n        modules: [],\r\n    };\r\n}\r\nexports.getDefaultEmitterOptions = getDefaultEmitterOptions;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getDefaultEmissionOptions = void 0;\r\nvar components_1 = require(\"../../components\");\r\nvar sources_1 = require(\"../../systems/sources\");\r\n/**\r\n * Returns the default set of emission options.\r\n */\r\nfunction getDefaultEmissionOptions() {\r\n    return {\r\n        rate: 10,\r\n        angle: 0,\r\n        bursts: [],\r\n        sourceSampler: sources_1.rectSource(components_1.Rect.zero),\r\n        initialLifetime: 5,\r\n        initialSpeed: 5,\r\n        initialSize: 1,\r\n        initialRotation: components_1.Vector.zero,\r\n        initialColor: components_1.Color.white,\r\n    };\r\n}\r\nexports.getDefaultEmissionOptions = getDefaultEmissionOptions;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.circleSource = exports.rectSource = exports.mouseSource = exports.elementSource = exports.dynamicSource = void 0;\r\nvar components_1 = require(\"../components\");\r\nvar random_1 = require(\"./random\");\r\n/**\r\n * Dynamically infers a source sampler for the specified source type.\r\n */\r\nfunction dynamicSource(source) {\r\n    if (source instanceof HTMLElement) {\r\n        return elementSource(source);\r\n    }\r\n    if (source instanceof components_1.Circle) {\r\n        return circleSource(source);\r\n    }\r\n    if (source instanceof components_1.Rect) {\r\n        return rectSource(source);\r\n    }\r\n    if (source instanceof MouseEvent) {\r\n        return mouseSource(source);\r\n    }\r\n    throw new Error(\"Cannot infer the source type of '\" + source + \"'.\");\r\n}\r\nexports.dynamicSource = dynamicSource;\r\n/**\r\n * Creates a sampler to retrieve random points inside a specified HTMLElement.\r\n */\r\nfunction elementSource(source) {\r\n    return function () { return random_1.randomInsideRect(components_1.Rect.fromElement(source)); };\r\n}\r\nexports.elementSource = elementSource;\r\n/**\r\n * Creates a sampler to retrieve the position of a mouse event.\r\n */\r\nfunction mouseSource(source) {\r\n    return function () {\r\n        return new components_1.Vector(window.scrollX + source.clientX, window.scrollY + source.clientY);\r\n    };\r\n}\r\nexports.mouseSource = mouseSource;\r\n/**\r\n * Creates a sampler to retrieve random points inside a specified rectangle.\r\n */\r\nfunction rectSource(source) {\r\n    return function () { return random_1.randomInsideRect(source); };\r\n}\r\nexports.rectSource = rectSource;\r\n/**\r\n * Creates a sampler to retrieve random points inside a specified circle.\r\n */\r\nfunction circleSource(source) {\r\n    return function () { return random_1.randomInsideCircle(source); };\r\n}\r\nexports.circleSource = circleSource;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getDefaultRendererOptions = void 0;\r\n/**\r\n * Returns the default set of renderer options.\r\n */\r\nfunction getDefaultRendererOptions() {\r\n    return {\r\n        shapeFactory: \"square\",\r\n        applyColor: defaultApplyColor,\r\n        applyOpacity: defaultApplyOpacity,\r\n        applyLighting: defaultApplyLighting,\r\n        applyTransform: defaultApplyTransform,\r\n    };\r\n}\r\nexports.getDefaultRendererOptions = getDefaultRendererOptions;\r\n/**\r\n * Applies the specified color to the element.\r\n *\r\n * @remarks\r\n * This function is aware of the element's node type:\r\n * - `div` elements have their `background` set.\r\n * - `svg` elements have their `fill` and `color` set.\r\n * - Other elements have their `color` set.\r\n */\r\nfunction defaultApplyColor(color, element) {\r\n    var hex = color.toHex();\r\n    // Note that by default, HTML node names are uppercase.\r\n    switch (element.nodeName.toLowerCase()) {\r\n        case \"div\":\r\n            element.style.background = hex;\r\n            break;\r\n        case \"svg\":\r\n            element.style.fill = element.style.color = hex;\r\n            break;\r\n        default:\r\n            element.style.color = hex;\r\n            break;\r\n    }\r\n}\r\n/**\r\n * Applies the specified opacity to the element.\r\n */\r\nfunction defaultApplyOpacity(opacity, element) {\r\n    element.style.opacity = opacity.toString();\r\n}\r\n/**\r\n * Applies the specified lighting to the element as a brightness filter.\r\n *\r\n * @remarks\r\n * This function assumes an ambient light with intensity 0.5, and that the\r\n * particle should be lit from both sides. The brightness filter can exceed 1,\r\n * to give the particles a \"glossy\" feel.\r\n */\r\nfunction defaultApplyLighting(lighting, element) {\r\n    element.style.filter = \"brightness(\" + (0.5 + Math.abs(lighting)) + \")\";\r\n}\r\n/**\r\n * Applies the specified transform to the element as a 3D CSS transform.\r\n * Also takes into account the current window scroll, to make sure that particles are\r\n * rendered inside of the fixed container.\r\n */\r\nfunction defaultApplyTransform(particle, element) {\r\n    element.style.transform =\r\n        // Make sure to take window scrolling into account.\r\n        \"translateX(\" + (particle.location.x - window.scrollX).toFixed(3) + \"px) \" +\r\n            (\"translateY(\" + (particle.location.y - window.scrollY).toFixed(3) + \"px) \") +\r\n            (\"translateZ(\" + particle.location.z.toFixed(3) + \"px) \") +\r\n            (\"rotateX(\" + particle.rotation.x.toFixed(3) + \"deg) \") +\r\n            (\"rotateY(\" + particle.rotation.y.toFixed(3) + \"deg) \") +\r\n            (\"rotateZ(\" + particle.rotation.z.toFixed(3) + \"deg) \") +\r\n            (\"scale(\" + particle.size.toFixed(3) + \")\");\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Particle = void 0;\r\nvar components_1 = require(\"../components\");\r\nvar config_1 = require(\"../util/config\");\r\n/**\r\n * Represents an emitted particle.\r\n */\r\nvar Particle = /** @class */ (function () {\r\n    /**\r\n     * Creates a new particle instance through the specified options.\r\n     */\r\n    function Particle(options) {\r\n        var populatedOptions = config_1.overrideDefaults({\r\n            lifetime: 0,\r\n            size: 1,\r\n            location: components_1.Vector.zero,\r\n            rotation: components_1.Vector.zero,\r\n            velocity: components_1.Vector.zero,\r\n            color: components_1.Color.white,\r\n            opacity: 1,\r\n        }, options);\r\n        // Generate a symbolic ID.\r\n        this.id = Symbol();\r\n        // Assign various properties, together with some initials for later reference.\r\n        this.size = this.initialSize = populatedOptions.size;\r\n        this.lifetime = this.initialLifetime = populatedOptions.lifetime;\r\n        this.rotation = this.initialRotation = populatedOptions.rotation;\r\n        this.location = populatedOptions.location;\r\n        this.velocity = populatedOptions.velocity;\r\n        this.color = populatedOptions.color;\r\n        this.opacity = populatedOptions.opacity;\r\n    }\r\n    return Particle;\r\n}());\r\nexports.Particle = Particle;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Renderer = void 0;\r\nvar __1 = require(\"..\");\r\nvar vector_1 = require(\"../components/vector\");\r\nvar containers_1 = require(\"../containers\");\r\nvar shapes_1 = require(\"../systems/shapes\");\r\nvar util_1 = require(\"../util\");\r\n/**\r\n * Represents a renderer used to draw particles to the DOM via HTML\r\n * elements. Additionally, it is responsible for purging the elements\r\n * of destroyed particles from the DOM.\r\n */\r\nvar Renderer = /** @class */ (function () {\r\n    function Renderer() {\r\n        /**\r\n         * The lookup of elements currently handled by the renderer, with the\r\n         * particle ID as key and a HTMLElement as the value.\r\n         */\r\n        this.elements = new Map();\r\n        /**\r\n         * The normalized direction the light comes from.\r\n         */\r\n        this.light = new vector_1.Vector(0, 0, 1);\r\n        /**\r\n         * Whether or not the renderer should actually draw particles.\r\n         */\r\n        this.enabled = true;\r\n        // Respect that users might prefer reduced motion.\r\n        // See: https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion\r\n        this.enabled =\r\n            !__1.settings.respectReducedMotion ||\r\n                !window.matchMedia(\"(prefers-reduced-motion)\").matches;\r\n    }\r\n    /**\r\n     * Begins a new render block. During the rendering phase, a list of rendered particles\r\n     * is tracked, so that stale particles can be removed later.\r\n     */\r\n    Renderer.prototype.begin = function () {\r\n        this.renderedParticles = [];\r\n    };\r\n    /**\r\n     * Terminates an existing render block. This checks which particles were rendered\r\n     * during the block and purges all unused HTMLElements from the DOM.\r\n     *\r\n     * @returns The amount of particles that were rendered.\r\n     */\r\n    Renderer.prototype.end = function () {\r\n        var it = this.elements.keys();\r\n        var result = it.next();\r\n        while (!result.done) {\r\n            var id = result.value;\r\n            if (!this.renderedParticles.includes(id)) {\r\n                this.elements.get(id).remove();\r\n                this.elements.delete(id);\r\n            }\r\n            result = it.next();\r\n        }\r\n        return this.renderedParticles.length;\r\n    };\r\n    /**\r\n     * Renders an individual particle to the DOM. If the particle is rendered for the first\r\n     * time, a HTMLElement will be created using the emitter's render settings.\r\n     *\r\n     * @param particle The particle to be rendered.\r\n     * @param emitter The system containing the particle.\r\n     */\r\n    Renderer.prototype.renderParticle = function (particle, emitter) {\r\n        if (!this.enabled)\r\n            return;\r\n        var options = emitter.renderer;\r\n        // Ensure that an element for the particle exists.\r\n        var element = this.elements.has(particle.id)\r\n            ? this.elements.get(particle.id)\r\n            : this.createParticleElement(particle, options);\r\n        if (options.applyColor) {\r\n            // If the options offer a coloring method, apply it.\r\n            options.applyColor(particle.color, element);\r\n        }\r\n        if (options.applyOpacity) {\r\n            // If the options offer an opacity modifying method, apply it.\r\n            options.applyOpacity(particle.opacity, element);\r\n        }\r\n        if (options.applyLighting) {\r\n            // If the options offer a lighting method, apply it.\r\n            // Lighting is calculated as a combination of the particle's normal\r\n            // direction and the lighting direction.\r\n            var normal = util_1.rotationToNormal(particle.rotation);\r\n            var lightingCoefficient = normal.dot(this.light);\r\n            options.applyLighting(lightingCoefficient, element);\r\n        }\r\n        if (options.applyTransform) {\r\n            // If the options offer a transformation method, apply it.\r\n            // This ensures the particle is rendered at the correct position with the correct rotation.\r\n            options.applyTransform(particle, element);\r\n        }\r\n        // Mark the particle as rendered.\r\n        this.renderedParticles.push(particle.id);\r\n    };\r\n    /**\r\n     * Creates the HTMLElement for a particle that does not have one already.\r\n     */\r\n    Renderer.prototype.createParticleElement = function (particle, options) {\r\n        // Resolve the element returned from the factory.\r\n        var resolved = shapes_1.resolveShapeFactory(options.shapeFactory);\r\n        // Clone the node to ensure we do not break existing elements.\r\n        var element = resolved.cloneNode(true);\r\n        // Ensure that the elements can be \"stacked\" ontop of eachother.\r\n        element.style.position = \"absolute\";\r\n        // Register the new element in the map, while appending the new element to the DOM.\r\n        this.elements.set(particle.id, containers_1.particleContainer.current.appendChild(element));\r\n        return element;\r\n    };\r\n    return Renderer;\r\n}());\r\nexports.Renderer = Renderer;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.resolveShapeFactory = exports.resolvableShapes = void 0;\r\nvar variation_1 = require(\"./variation\");\r\n/**\r\n * Represents the lookup that maps resolveable element keys to their HTML strings.\r\n *\r\n * @remarks\r\n * The default shapes are made to fit inside a dimension of 10x10 pixels, except\r\n * the 'star' shape, which exceeds it slightly.\r\n */\r\nexports.resolvableShapes = {\r\n    square: \"<div style=\\\"height: 10px; width: 10px;\\\"></div>\",\r\n    rectangle: \"<div style=\\\"height: 6px; width: 10px;\\\"></div>\",\r\n    circle: \"<svg viewBox=\\\"0 0 2 2\\\" width=\\\"10\\\" height=\\\"10\\\"><circle cx=\\\"1\\\" cy=\\\"1\\\" r=\\\"1\\\" fill=\\\"currentColor\\\"/></svg>\",\r\n    roundedSquare: \"<div style=\\\"height: 10px; width: 10px; border-radius: 3px;\\\"></div>\",\r\n    roundedRectangle: \"<div style=\\\"height: 6px; width: 10px; border-radius: 3px;\\\"></div>\",\r\n    star: \"<svg viewBox=\\\"0 0 512 512\\\" width=\\\"15\\\" height=\\\"15\\\"><polygon fill=\\\"currentColor\\\" points=\\\"512,197.816 325.961,185.585 255.898,9.569 185.835,185.585 0,197.816 142.534,318.842 95.762,502.431 255.898,401.21 416.035,502.431 369.263,318.842\\\"/></svg>\",\r\n};\r\n/**\r\n * Resolves the specified element factory using the resolvable elements, if needed.\r\n */\r\nfunction resolveShapeFactory(factory) {\r\n    // Retrieve the unresolved element from the factory.\r\n    var shape = variation_1.evaluateVariation(factory);\r\n    // If a string is returned, we need to resolve the element. This means\r\n    // looking up the string in the resolver lookup. If the key was not\r\n    // resolvable, we throw an error.\r\n    if (typeof shape === \"string\") {\r\n        var resolved = exports.resolvableShapes[shape];\r\n        if (!resolved) {\r\n            throw new Error(\"Failed to resolve shape key '\" + shape + \"'. Did you forget to add it to the 'resolvableShapes' lookup?\");\r\n        }\r\n        // We're in luck, we can resolve the element! We create a dummy <div> element\r\n        // to set the innerHTML of, and return the first element child.\r\n        var dummy = document.createElement(\"div\");\r\n        dummy.innerHTML = resolved;\r\n        return dummy.firstElementChild;\r\n    }\r\n    return shape;\r\n}\r\nexports.resolveShapeFactory = resolveShapeFactory;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./confetti\"), exports);\r\n__exportStar(require(\"./sparkles\"), exports);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.confetti = void 0;\r\nvar __1 = require(\"../\");\r\nvar components_1 = require(\"../components\");\r\nvar modules_1 = require(\"../systems/modules\");\r\nvar random = require(\"../systems/random\");\r\nvar sources = require(\"../systems/sources\");\r\nvar variation = require(\"../systems/variation\");\r\nvar util = require(\"../util\");\r\n/**\r\n * The standard confetti template.\r\n *\r\n * @param source The source to emit the confetti from.\r\n * @param options The (optional) configuration overrides.\r\n */\r\nfunction confetti(source, options) {\r\n    var populated = util.overrideDefaults({\r\n        count: variation.range(20, 40),\r\n        spread: variation.range(35, 45),\r\n        speed: variation.range(300, 600),\r\n        size: variation.skew(1, 0.2),\r\n        rotation: function () { return random.randomUnitVector().scale(180); },\r\n        color: function () { return components_1.Color.fromHsl(random.randomRange(0, 360), 100, 70); },\r\n        modules: [\r\n            new modules_1.ModuleBuilder()\r\n                .drive(\"size\")\r\n                .by(function (t) { return Math.min(1, t * 3); })\r\n                .relative()\r\n                .build(),\r\n            new modules_1.ModuleBuilder()\r\n                .drive(\"rotation\")\r\n                .by(function (t) { return new components_1.Vector(140, 200, 260).scale(t); })\r\n                .relative()\r\n                .build(),\r\n        ],\r\n        shapes: [\"square\", \"circle\"],\r\n    }, options);\r\n    var emitter = __1.scene.current.createEmitter({\r\n        emitterOptions: {\r\n            loops: 1,\r\n            duration: 8,\r\n            modules: populated.modules,\r\n        },\r\n        emissionOptions: {\r\n            rate: 0,\r\n            bursts: [{ time: 0, count: populated.count }],\r\n            sourceSampler: sources.dynamicSource(source),\r\n            angle: variation.skew(-90, variation.evaluateVariation(populated.spread)),\r\n            initialLifetime: 8,\r\n            initialSpeed: populated.speed,\r\n            initialSize: populated.size,\r\n            initialRotation: populated.rotation,\r\n            initialColor: populated.color,\r\n        },\r\n        rendererOptions: {\r\n            shapeFactory: populated.shapes,\r\n        },\r\n    });\r\n    return emitter;\r\n}\r\nexports.confetti = confetti;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ModuleBuilder = void 0;\r\nvar components_1 = require(\"../components\");\r\n/**\r\n * Represents a builder for particle modules. Returns an evaluatable module\r\n * function, that can be consumed by emitters.\r\n *\r\n * @remarks\r\n * Not all properties can be driven. TypeScript will validate this at compile time,\r\n * but no internal validation is performed due to performance reasons. Also, note\r\n * that the driving factor is \"lifetime\" by default.\r\n *\r\n * @example\r\n * ```ts\r\n * new ModuleBuilder()\r\n *     .drive(\"size\")\r\n *     .by((t) => t * 2)\r\n *     .through(\"lifetime\")\r\n *     .build();\r\n * ```\r\n */\r\nvar ModuleBuilder = /** @class */ (function () {\r\n    function ModuleBuilder() {\r\n        /**\r\n         * The factor driving the built function.\r\n         *\r\n         * @defaultValue \"lifetime\"\r\n         */\r\n        this.factor = \"lifetime\";\r\n        this.isRelative = false;\r\n    }\r\n    /**\r\n     * Specifies the key in the particle that should be driven.\r\n     *\r\n     * @remarks\r\n     * Note that not all of a particle's properties are drivable through modules. If you\r\n     * need full control of a particle inside of a module, you can use a module function directly.\r\n     *\r\n     * @returns The chained builder instance.\r\n     */\r\n    ModuleBuilder.prototype.drive = function (key) {\r\n        this.driverKey = key;\r\n        return this;\r\n    };\r\n    /**\r\n     * Specifies the factor to drive the evaluated value by. Supports \"lifetime\" and \"size\".\r\n     *\r\n     * @returns The chained builder instance.\r\n     */\r\n    ModuleBuilder.prototype.through = function (factor) {\r\n        this.factor = factor;\r\n        return this;\r\n    };\r\n    /**\r\n     * Specifies the value to drive the module behaviour by. This can be a constant,\r\n     * a spline or an evaluable function. Note that in the last case, the driving\r\n     * factor is passed as a parameter.\r\n     *\r\n     * @returns The chained builder instance.\r\n     */\r\n    ModuleBuilder.prototype.by = function (driver) {\r\n        this.driverValue = driver;\r\n        return this;\r\n    };\r\n    /**\r\n     * Specifies that the module function is supposed to act relative to the\r\n     * properties initial value.\r\n     *\r\n     * @remarks\r\n     * Note that this is only possible if an \"initial*\" property exists on the\r\n     * particle object. The operation applied to the initial and new value\r\n     * is dependant on their type:\r\n     * - `Vector`: Both vectors are added.\r\n     * - `number`: Both numbers are multiplied.\r\n     *\r\n     * For more advanced relative customizations, consider using the particle\r\n     * object in the driver value function instead, like:\r\n     * ```ts\r\n     * .by((t, p) => p.initialSize + t * 2);\r\n     * ```\r\n     */\r\n    ModuleBuilder.prototype.relative = function (isRelative) {\r\n        if (isRelative === void 0) { isRelative = true; }\r\n        this.isRelative = isRelative;\r\n        return this;\r\n    };\r\n    /**\r\n     * Consumes the builder and returns an evaluatable module function.\r\n     *\r\n     * @remarks\r\n     * Note that you need to specify the driving key and value, otherwise an error\r\n     * will be thrown.\r\n     */\r\n    ModuleBuilder.prototype.build = function () {\r\n        var _this = this;\r\n        if (typeof this.driverKey === \"undefined\") {\r\n            throw new Error(\"No driving key was provided in the module builder. Did you forget a '.drive()' call?\");\r\n        }\r\n        if (typeof this.driverValue === \"undefined\") {\r\n            throw new Error(\"No driving value was provided in the module builder. Did you forget a '.through()' call?\");\r\n        }\r\n        return function (particle) {\r\n            updateDrivenProperty(particle, _this.driverKey, evaluateModuleDriver(_this.driverValue, calculateModuleFactor(_this.factor, particle), particle), _this.isRelative);\r\n        };\r\n    };\r\n    return ModuleBuilder;\r\n}());\r\nexports.ModuleBuilder = ModuleBuilder;\r\n/**\r\n * Evaluates the module driver using a specified factor.\r\n */\r\nfunction evaluateModuleDriver(driver, factor, particle) {\r\n    if (typeof driver === \"object\" && \"evaluate\" in driver) {\r\n        return driver.evaluate(factor);\r\n    }\r\n    if (typeof driver === \"function\") {\r\n        return driver(factor, particle);\r\n    }\r\n    return driver;\r\n}\r\n/**\r\n * Calculates a module factor using a specified particle as context.\r\n */\r\nfunction calculateModuleFactor(factor, particle) {\r\n    switch (factor) {\r\n        case \"lifetime\":\r\n            return particle.initialLifetime - particle.lifetime;\r\n        case \"relativeLifetime\":\r\n            return ((particle.initialLifetime - particle.lifetime) /\r\n                particle.initialLifetime);\r\n        case \"size\":\r\n            return particle.size;\r\n        default:\r\n            throw new Error(\"Invalid driving factor '\" + factor + \"'.\");\r\n    }\r\n}\r\n/**\r\n * Updates a driven property of a particle using the specified value.\r\n *\r\n * @remarks\r\n * If the operation is marked as relative, the function infers the new value\r\n * through the value's type. Note that relative properties must have a\r\n * corresponding \"initial*\" value in the particle's properties.\r\n */\r\nfunction updateDrivenProperty(particle, key, value, relative) {\r\n    if (relative === void 0) { relative = false; }\r\n    if (!relative) {\r\n        particle[key] = value;\r\n    }\r\n    else {\r\n        var initial = particle[\"initial\" + key[0].toUpperCase() + key.substr(1)];\r\n        if (typeof initial === \"undefined\") {\r\n            throw new Error(\"Unable to use relative chaining with key '\" + key + \"'; no initial value exists.\");\r\n        }\r\n        if (value instanceof components_1.Vector) {\r\n            updateDrivenProperty(particle, key, initial.add(value));\r\n        }\r\n        else if (typeof value === \"number\") {\r\n            updateDrivenProperty(particle, key, initial * value);\r\n        }\r\n        else {\r\n            throw new Error(\"Unable to use relative chaining with particle key '\" + key + \"'; no relative operation for '\" + value + \"' could be inferred.\");\r\n        }\r\n    }\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.sparkles = void 0;\r\nvar __1 = require(\"..\");\r\nvar components_1 = require(\"../components\");\r\nvar modules_1 = require(\"../systems/modules\");\r\nvar random = require(\"../systems/random\");\r\nvar sources = require(\"../systems/sources\");\r\nvar variation = require(\"../systems/variation\");\r\nvar util = require(\"../util\");\r\n/**\r\n * The standard sparkles template.\r\n *\r\n * @param source The source to emit the sparkles from.\r\n * @param options The (optional) configuration overrides.\r\n */\r\nfunction sparkles(source, options) {\r\n    var populated = util.overrideDefaults({\r\n        lifetime: variation.range(1, 2),\r\n        count: variation.range(10, 20),\r\n        speed: variation.range(100, 200),\r\n        size: variation.range(0.8, 1.8),\r\n        rotation: function () { return new components_1.Vector(0, 0, random.randomRange(0, 360)); },\r\n        color: function () { return components_1.Color.fromHsl(50, 100, random.randomRange(55, 85)); },\r\n        modules: [\r\n            new modules_1.ModuleBuilder()\r\n                .drive(\"rotation\")\r\n                .by(function (t) { return new components_1.Vector(0, 0, 200).scale(t); })\r\n                .relative()\r\n                .build(),\r\n            new modules_1.ModuleBuilder()\r\n                .drive(\"size\")\r\n                .by(new components_1.NumericSpline({ time: 0, value: 0 }, { time: 0.3, value: 1 }, { time: 0.7, value: 1 }, { time: 1, value: 0 }))\r\n                .through(\"relativeLifetime\")\r\n                .relative()\r\n                .build(),\r\n            new modules_1.ModuleBuilder()\r\n                .drive(\"opacity\")\r\n                .by(new components_1.NumericSpline({ time: 0, value: 1 }, { time: 0.5, value: 1 }, { time: 1, value: 0 }))\r\n                .through(\"relativeLifetime\")\r\n                .build(),\r\n        ],\r\n        shapes: \"star\",\r\n    }, options);\r\n    var emitter = __1.scene.current.createEmitter({\r\n        emitterOptions: {\r\n            loops: 1,\r\n            duration: 3,\r\n            useGravity: false,\r\n            modules: populated.modules,\r\n        },\r\n        emissionOptions: {\r\n            rate: 0,\r\n            bursts: [{ time: 0, count: populated.count }],\r\n            sourceSampler: sources.dynamicSource(source),\r\n            angle: variation.range(0, 360),\r\n            initialLifetime: populated.lifetime,\r\n            initialSpeed: populated.speed,\r\n            initialSize: populated.size,\r\n            initialRotation: populated.rotation,\r\n            initialColor: populated.color,\r\n        },\r\n        rendererOptions: {\r\n            applyLighting: undefined,\r\n            shapeFactory: populated.shapes,\r\n        },\r\n    });\r\n    return emitter;\r\n}\r\nexports.sparkles = sparkles;\r\n","export interface Square {\r\n    owner: string | null,\r\n    linesOwners : {\r\n        top: string | null,\r\n        left: string | null,\r\n        right: string | null,\r\n        bottom: string | null\r\n    }\r\n}\r\n\r\nexport class Board {\r\n    board: Array<Array<Square>>\r\n    height: number\r\n    width: number\r\n\r\n    constructor(width: number, height: number) {\r\n        this.board = []\r\n        this.height = height\r\n        this.width = width\r\n        for (let i = 0; i < height; i++) {\r\n            let line: Array<Square> = []\r\n            for (let j = 0; j < width; j++) {\r\n                line.push({\r\n                    owner: null,\r\n                    linesOwners : {\r\n                        top: null,\r\n                        left: null,\r\n                        right: null,\r\n                        bottom: null\r\n                    }\r\n                })\r\n            }\r\n            this.board.push(line)\r\n        }\r\n    }\r\n\r\n    setSquareOwner(x: number, y: number, name: string) {\r\n        this.board[y][x].owner = name\r\n    }\r\n\r\n    setLineOwner(x: number, y: number, direction: string, name: string) {\r\n        switch (direction) {\r\n            case \"right\":\r\n                this.board[y][x].linesOwners.right = name\r\n                if (x < this.width - 1) this.board[y][x+1].linesOwners.left = name\r\n                break\r\n            case \"left\":\r\n                this.board[y][x].linesOwners.left = name\r\n                if (x > 0) this.board[y][x-1].linesOwners.right = name\r\n                break\r\n            case \"top\":\r\n                this.board[y][x].linesOwners.top = name\r\n                if (y > 0) this.board[y-1][x].linesOwners.bottom = name\r\n                break\r\n            case \"bottom\":\r\n                this.board[y][x].linesOwners.bottom = name\r\n                if (y < this.height - 1) this.board[y+1][x].linesOwners.top = name\r\n                break\r\n        }\r\n    }\r\n\r\n    printBoard() {\r\n        let str = \"\"\r\n        for (let i = 0; i < this.height; i++) {\r\n            for (let j = 0; j < this.width; j++) {\r\n                if (j == 0) {\r\n                    str += \"□ \"\r\n                } else {\r\n                    str += \" □ \"\r\n                }\r\n            }\r\n            str += \"\\n\"\r\n        }\r\n        console.log(str)\r\n    }\r\n}","import party from \"party-js\"\r\n\r\nexport default class UI_End extends HTMLElement {\r\n\r\n    connectedCallback() {\r\n        const replayButton: HTMLButtonElement | null = document.querySelector(\".replay-button\")\r\n        replayButton!.addEventListener(\"click\", () => {\r\n            this.replay()\r\n        })\r\n        party.confetti(replayButton!, {\r\n            count: party.variation.range(20, 40),\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        const overlay = document.createElement(\"div\")\r\n        overlay.classList.add(\"overlay\")\r\n\r\n        // Tailwind\r\n        overlay.classList.add(\r\n            \"absolute\",\r\n            \"top-0\",\r\n            \"left-0\",\r\n            \"flex\",\r\n            \"h-screen\",\r\n            \"w-screen\",\r\n            \"bg-black\",\r\n            \"bg-opacity-50\",\r\n            \"backdrop-blur-lg\",\r\n            \"z-0\"\r\n        )\r\n\r\n        const container = document.createElement(\"div\")\r\n        container.classList.add(\"form-container\")\r\n\r\n        // Tailwind\r\n        container.classList.add(\r\n            \"container\",\r\n            \"relative\",\r\n            \"flex\",\r\n            \"flex-col\",\r\n            \"justify-center\",\r\n            \"items-center\",\r\n            \"m-auto\",\r\n            \"w-full\",\r\n            \"sm:w-1/4\",\r\n            \"h-fit\",\r\n            \"sm:h-fit\",\r\n            \"p-5\",\r\n            \"bg-white\",\r\n            \"shadow-sm\",\r\n            \"rounded-md\"\r\n        )\r\n\r\n        const endText = document.createElement(\"h1\")\r\n        endText.classList.add(\"end-text\")\r\n\r\n        const replayButton = document.createElement(\"button\")\r\n        replayButton.classList.add(\"replay-button\")\r\n        replayButton.appendChild(document.createTextNode(\"Rejouer\"))\r\n\r\n         // Tailwind\r\n         replayButton.classList.add(\r\n            \"h-10\",\r\n            \"w-2/4\",\r\n            \"mt-5\",\r\n            \"bg-blue-600\",\r\n            \"text-white\",\r\n            \"rounded-md\",\r\n            \"hover:bg-blue-700\",\r\n            \"active:bg-blue-800\",\r\n            \"shadow-md\",\r\n            \"hover:shadow-lg\"\r\n        )\r\n\r\n        container.appendChild(endText)\r\n        container.appendChild(replayButton)\r\n\r\n        overlay.appendChild(container)\r\n        this.appendChild(overlay)\r\n    }\r\n\r\n    setWinner(name: string | null) {\r\n        const endText = document.querySelector(\".end-text\")\r\n        if (name == null) {\r\n            endText!.appendChild(document.createTextNode(\"Égalité\"))\r\n        } else {\r\n            endText!.appendChild(document.createTextNode(\"Victoire de \" + name))\r\n        }\r\n    }\r\n\r\n    replay() {\r\n        window.location.reload()\r\n    }\r\n\r\n}","import {Game} from \"../Game\"\r\nimport UI_Infos from \"./UI_Infos\"\r\nimport UI_End from \"./UI_End\"\r\n\r\nexport default class UI_Board extends HTMLElement {\r\n    game: Game\r\n\r\n    get board_height() {\r\n        if (this.hasAttribute(\"board-height\")) {\r\n            return parseInt(this.getAttribute(\"board-height\")!)\r\n        } else {\r\n            return 10;\r\n        }\r\n    }\r\n\r\n    get board_width() {\r\n        if (this.hasAttribute(\"board-width\")) {\r\n            return parseInt(this.getAttribute(\"board-width\")!)\r\n        } else {\r\n            return 10;\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        const boxes = document.getElementsByTagName(\"td\") \r\n        for (let i = 0; i < boxes.length; i++) {\r\n            [\"left\", \"right\", \"top\", \"bottom\"].forEach(dir => {\r\n                const hitbox = boxes[i].querySelector(\".hitbox-\" + dir) \r\n                hitbox!.addEventListener(\"mouseenter\", () => {\r\n                    this.interractLine(Array.from(boxes[i].parentNode!.children).indexOf(boxes[i]), Array.from(boxes[i].parentNode!.parentNode!.children).indexOf(boxes[i].parentElement!), dir, \"select\", this.game.players[this.game.currentPlayer].color)\r\n                })\r\n                hitbox!.addEventListener(\"mouseleave\", () => {\r\n                    this.interractLine(Array.from(boxes[i].parentNode!.children).indexOf(boxes[i]), Array.from(boxes[i].parentNode!.parentNode!.children).indexOf(boxes[i].parentElement!), dir, \"reset\")\r\n                })\r\n                hitbox!.addEventListener(\"click\", () => {\r\n                    const x = Array.from(boxes[i].parentNode!.children).indexOf(boxes[i])\r\n                    const y = Array.from(boxes[i].parentNode!.parentNode!.children).indexOf(boxes[i].parentElement!)\r\n                    const currentPlayer = this.game.players[this.game.currentPlayer]\r\n                    this.interractLine(x, y, dir, \"click\", currentPlayer.color)\r\n                    const xy = this.game.playTurn(x, y, dir)\r\n                    \r\n                    const infos: UI_Infos | null = document.querySelector(\"game-infos\")\r\n                    infos!.updateScore()\r\n                    if (xy != []) {\r\n                        for (let k = 0; k < xy.length; k++) {\r\n                            this.setBgColor(xy[k][0], xy[k][1], currentPlayer.color)\r\n                        }\r\n                    }\r\n\r\n                    if (this.game.isGameFinished()) {\r\n                        const endScreen = document.createElement(\"end-screen\")\r\n                        document.querySelector(\".app\")!.appendChild(endScreen)\r\n                        customElements.define(\"end-screen\", UI_End)\r\n                        UI_End.prototype.setWinner(this.game.getWinner())\r\n                    }\r\n                    \r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        const body = document.createElement(\"tbody\")\r\n        for (let i = 0; i < this.board_height; i++) {\r\n            const line = document.createElement(\"tr\");\r\n            for (let j = 0; j < this.board_width; j++) {\r\n\r\n                // Create dot elements\r\n                const dot_top_right = document.createElement(\"span\")\r\n                dot_top_right.className = \"dot dot-top-right\"\r\n                const dot_top_left = document.createElement(\"span\")\r\n                dot_top_left.className = \" dot dot-top-left\"\r\n                const dot_bottom_right = document.createElement(\"span\")\r\n                dot_bottom_right.className = \"dot dot-bottom-right\"\r\n                const dot_bottom_left = document.createElement(\"span\")\r\n                dot_bottom_left.className = \"dot dot-bottom-left\"\r\n                \r\n                const square = document.createElement(\"td\")\r\n                square.className = \"square\"\r\n\r\n                // Append dot elements\r\n                square.appendChild(dot_top_left)\r\n                if (j == this.board_width - 1) {\r\n                    square.appendChild(dot_top_right)\r\n                }\r\n                if (i == this.board_height - 1) {\r\n                    square.appendChild(dot_bottom_left)\r\n                }\r\n                if ((i == this.board_height - 1) && (j == this.board_width - 1)) {\r\n                    square.appendChild(dot_bottom_right)\r\n                }\r\n\r\n                [\"left\", \"right\", \"top\", \"bottom\"].forEach(dir => {\r\n                    const hitbox = document.createElement(\"span\")\r\n                    hitbox.className = \"hitbox hitbox-\" + dir\r\n                    square.appendChild(hitbox)\r\n                })\r\n\r\n                line.appendChild(square)\r\n            }\r\n            body.appendChild(line)\r\n        }\r\n        const table = document.createElement(\"table\")\r\n        table.appendChild(body)\r\n        this.appendChild(table)\r\n    }\r\n\r\n    interractLine(x: number, y: number, direction: string, interractionType: string = \"select\", color: string = \"none\") {\r\n        const typeString = interractionType == \"select\" ? \"selected\" : \"clicked\"\r\n        const table: HTMLTableElement = this.getElementsByTagName(\"table\")[0]\r\n        const box = table.rows[y].cells[x]\r\n\r\n        if (interractionType == \"click\" && box.className.includes(\"selected-\" + direction)) {\r\n            box.classList.remove(\"selected-\" + direction)\r\n        }\r\n\r\n        if (!box.className.includes(\"clicked-\" + direction)) {\r\n            switch (direction) {\r\n                case \"right\":\r\n                    if ((x < this.board_width-1)) {\r\n                        const neighborBox = table.rows[y].cells[x+1]\r\n\r\n                        if (interractionType == \"click\" && neighborBox.className.includes(\"selected-left\")) {\r\n                            neighborBox.classList.remove(\"selected-left\")\r\n                        }\r\n\r\n                        interractionType == \"reset\" ? [\"selected\"].forEach(c => neighborBox.classList.remove(c + \"-left\")) :\r\n                        neighborBox.classList.add(typeString + \"-left\") \r\n\r\n                        if (interractionType == \"click\") {\r\n                            neighborBox.classList.add(color + \"-left\")\r\n                        }\r\n                    }\r\n                    interractionType == \"reset\" ? [\"selected\"].forEach(c => box.classList.remove(c + \"-right\")) :\r\n                    box.classList.add(typeString + \"-right\")\r\n                    break\r\n                case \"left\":\r\n                    if ((x > 0)) {\r\n                        const neighborBox = table.rows[y].cells[x-1]\r\n\r\n                        if (interractionType == \"click\" && neighborBox.className.includes(\"selected-right\")) {\r\n                            neighborBox.classList.remove(\"selected-right\")\r\n                        }\r\n\r\n                        interractionType == \"reset\" ? [\"selected\"].forEach(c => neighborBox.classList.remove(c + \"-right\")) :\r\n                        neighborBox.classList.add(typeString + \"-right\")\r\n\r\n                        if (interractionType == \"click\") {\r\n                            neighborBox.classList.add(color + \"-right\")\r\n                        }\r\n                    }\r\n                    interractionType == \"reset\" ? [\"selected\"].forEach(c => box.classList.remove(c + \"-left\")) :\r\n                    box.classList.add(typeString + \"-left\")\r\n                    break\r\n                case \"top\":\r\n                    if ((y > 0)) {\r\n                        const neighborBox = table.rows[y-1].cells[x]\r\n\r\n                        if (interractionType == \"click\" && neighborBox.className.includes(\"selected-bottom\")) {\r\n                            neighborBox.classList.remove(\"selected-bottom\")\r\n                        }\r\n\r\n                        interractionType == \"reset\" ? [\"selected\"].forEach(c => neighborBox.classList.remove(c + \"-bottom\")) :\r\n                        neighborBox.classList.add(typeString + \"-bottom\")\r\n\r\n                        if (interractionType == \"click\") {\r\n                            neighborBox.classList.add(color + \"-bottom\")\r\n                        }\r\n                    }\r\n                    interractionType == \"reset\" ? [\"selected\"].forEach(c => box.classList.remove(c + \"-top\")) :\r\n                    box.classList.add(typeString + \"-top\")\r\n                    break\r\n                case \"bottom\":\r\n                    if ((y < this.board_height-1)) {\r\n                        const neighborBox = table.rows[y+1].cells[x]\r\n\r\n                        if (interractionType == \"click\" && neighborBox.className.includes(\"selected-\")) {\r\n                            neighborBox.classList.remove(\"selected-top\")\r\n                        }\r\n\r\n                        interractionType == \"reset\" ? [\"selected\"].forEach(c => neighborBox.classList.remove(c + \"-top\")) :\r\n                        neighborBox.classList.add(typeString + \"-top\")\r\n\r\n                        if (interractionType == \"click\") {\r\n                            neighborBox.classList.add(color + \"-top\")\r\n                        }\r\n                    }\r\n                    interractionType == \"reset\" ? [\"selected\"].forEach(c => box.classList.remove(c + \"-bottom\")) :\r\n                    box.classList.add(typeString + \"-bottom\")\r\n                    break\r\n            }\r\n            if (interractionType == \"click\") {\r\n                box.classList.add(color + \"-\" + direction)\r\n            }\r\n        }\r\n    }\r\n\r\n    setBgColor(x: number, y: number, color: string) {\r\n        const table: HTMLTableElement = this.getElementsByTagName(\"table\")[0]\r\n        const box = table.rows[y].cells[x]\r\n        box.classList.add(\"background-\" + color)\r\n    }\r\n}\r\n\r\n","import { Board, Square } from \"./Board\";\r\n\r\nexport interface Player {\r\n    name: string,\r\n    score: number,\r\n    color: string\r\n}\r\n\r\nexport class Game {\r\n    board: Board\r\n    players: Array<Player>\r\n    currentPlayer: number\r\n\r\n    constructor(board: Board, ...players: string[]) {\r\n        this.board = board;\r\n        const colors = [\"blue\", \"red\"]\r\n        this.players = []\r\n        let i = 0\r\n        players.map(playerName => {\r\n            this.players.push({name: playerName, score: 0, color: colors[i]})\r\n            i++\r\n        })\r\n        this.currentPlayer = 0\r\n    }\r\n\r\n    isLinePlayed(x: number, y: number, direction: string) {\r\n        return this.board.board[y][x].linesOwners[direction] != null\r\n    }\r\n\r\n    playLine(x: number, y: number, direction: string, name: string) {\r\n        this.board.setLineOwner(x,y,direction,name)\r\n    }\r\n\r\n    nextPlayer() {\r\n        this.currentPlayer != this.players.length - 1 ? this.currentPlayer++ : this.currentPlayer = 0\r\n    }\r\n\r\n    isSquareFull(square: Square): boolean {\r\n        return ((square.linesOwners.left != null) &&\r\n        (square.linesOwners.top != null) &&\r\n        (square.linesOwners.right != null) &&\r\n        (square.linesOwners.bottom != null))\r\n    }\r\n\r\n    isGameFinished() {\r\n        const boxesCount = this.board.width * this.board.height\r\n        let filledBoxesCount = 0\r\n        for (let y = 0; y < this.board.height; y++) {\r\n            for (let x = 0; x < this.board.width; x++) {\r\n                if (this.board.board[y][x].owner != null) {\r\n                    filledBoxesCount++\r\n                } else {\r\n                    return false\r\n                }\r\n            }\r\n        }\r\n        return filledBoxesCount == boxesCount\r\n    }\r\n\r\n    getWinner(): string | null {\r\n        if (this.players[0].score > this.players[1].score) {\r\n            return this.players[0].name\r\n        } else if (this.players[1].score > this.players[0].score) {\r\n            return this.players[1].name\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    calculateBoxes() {\r\n        let turnScore = 0\r\n        let xy_arr = []\r\n        for (let y = 0; y < this.board.height; y++) {\r\n            for (let x = 0; x < this.board.width; x++) {\r\n                if (this.board.board[y][x].owner == null) {\r\n                    if (this.isSquareFull(this.board.board[y][x])) {\r\n                        this.board.board[y][x].owner = this.players[this.currentPlayer].name\r\n                        turnScore++\r\n                        xy_arr.push([x,y])\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return {score: turnScore, xy: xy_arr}\r\n    }\r\n\r\n    playTurn(x: number, y: number, direction: string) {\r\n        if (!this.isLinePlayed(x,y,direction)) {\r\n            this.playLine(x, y, direction, this.players[this.currentPlayer].name)\r\n            let calculation = this.calculateBoxes()\r\n            let turnScore: number = calculation.score\r\n            if (turnScore <= 0) {\r\n                this.nextPlayer()\r\n            } else {\r\n                this.players[this.currentPlayer].score += turnScore\r\n            }\r\n            return calculation.xy\r\n        } else {\r\n            return []\r\n        }\r\n        \r\n    }\r\n}","export const truncate = (input: string, length: number) => input.length > length ? `${input.substring(0, length)}...` : input;","import {Game, Player} from \"../Game\"\r\nimport { truncate } from \"../helpers/truncate\"\r\n\r\nexport default class UI_Infos extends HTMLElement {\r\n    game: Game\r\n\r\n    constructor() {\r\n        super()\r\n        const container = document.createElement(\"div\")\r\n        container.classList.add(\"game-infos-container\")\r\n\r\n        //Tailwind\r\n        container.classList.add(\r\n            \"container\",\r\n            \"relative\",\r\n            \"sm:w-fit\",\r\n            \"w-full\",\r\n            \"p-5\",\r\n            \"pt-0\",\r\n            \"flex\",\r\n            \"flex-col\",\r\n            \"content-top\",\r\n            \"items-center\",\r\n            \"mx-auto\",\r\n            \"mt-10\",\r\n            \"bg-slate-200\",\r\n            \"rounded-md\"\r\n        )\r\n\r\n        const title = document.createElement(\"h1\")\r\n        title.classList.add(\"infos-title\")\r\n        title.appendChild(document.createTextNode(\"Score :\"))\r\n\r\n        //Tailwind\r\n        title.classList.add(\r\n            \"text-2xl\",\r\n            \"font-bold\",\r\n            \"mt-3\",\r\n            \"mb-3\"\r\n        )\r\n\r\n        const score1 = document.createElement(\"span\")\r\n        const score2 = document.createElement(\"span\")\r\n        score1.classList.add(\"score-1\")\r\n        score2.classList.add(\"score-2\")\r\n\r\n        // Tailwind\r\n        const attributes = [\r\n            \"mx-2\"\r\n        ]\r\n        score1.classList.add(...attributes)\r\n        score2.classList.add(...attributes)\r\n\r\n        score1.innerHTML = \"<strong>\" + truncate(this.game.players[0].name, 8) + \"</strong>\" + \" : \" + this.game.players[0].score.toString()\r\n        score2.innerHTML = \"<strong>\" + truncate(this.game.players[1].name, 8) + \"</strong>\" + \" : \" + this.game.players[1].score.toString()\r\n\r\n        container.appendChild(title)\r\n\r\n        const scoreDiv = document.createElement(\"div\")\r\n        scoreDiv.classList.add(\"scores\")\r\n\r\n        // Tailwind\r\n        scoreDiv.classList.add(\r\n            \"w-3/4\",\r\n            \"sm:w-fit\",\r\n            \"flex\",\r\n            \"justify-between\",\r\n            \"mb-2\"\r\n        )\r\n\r\n        scoreDiv.appendChild(score1)\r\n        scoreDiv.appendChild(score2)\r\n        container.appendChild(scoreDiv)\r\n\r\n        const currentPlayer = document.createElement(\"span\")\r\n        currentPlayer.classList.add(\"current-player\")\r\n        currentPlayer.innerHTML = \"Au tour de \" + \"<strong>\" + truncate(this.game.players[this.game.currentPlayer].name, 8) + \"</strong>\" + \" de jouer\"\r\n        container.appendChild(currentPlayer)\r\n\r\n        this.appendChild(container)\r\n    }\r\n\r\n    updateScore() {\r\n        const score1: HTMLSpanElement | null = document.querySelector(\".score-1\")\r\n        const score2: HTMLSpanElement | null = document.querySelector(\".score-2\")\r\n        const currentPlayer: HTMLSpanElement | null = document.querySelector(\".current-player\")\r\n\r\n        score1!.innerHTML = \"<strong>\" + truncate(this.game.players[0].name, 8) + \"</strong>\" + \" : \" + this.game.players[0].score.toString()\r\n        score2!.innerHTML = \"<strong>\" + truncate(this.game.players[1].name, 8) + \"</strong>\" + \" : \" + this.game.players[1].score.toString()\r\n        currentPlayer!.innerHTML = \"Au tour de \" + \"<strong>\" + truncate(this.game.players[this.game.currentPlayer].name, 8) + \"</strong>\" + \" de jouer\"\r\n    }\r\n}","import {Board} from \"../Board\";\r\nimport UI_Board from \"./UI_Board\";\r\nimport {Game} from \"../Game\";\r\nimport UI_Infos from \"./UI_Infos\";\r\n\r\nexport default class UI_Creation extends HTMLElement {\r\n\r\n    connectedCallback() {\r\n        const submitButton = document.querySelector(\".validate-button\")\r\n        submitButton!.addEventListener(\"click\", () => {\r\n            this.createGame()\r\n        })\r\n    }\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        const overlay = document.createElement(\"div\")\r\n        overlay.classList.add(\"overlay\")\r\n\r\n        // Tailwind\r\n        overlay.classList.add(\r\n            \"flex\",\r\n            \"h-screen\",\r\n            \"w-screen\",\r\n            \"bg-black\",\r\n            \"bg-opacity-50\",\r\n            \"backdrop-blur-lg\",\r\n            \"z-0\"\r\n        )\r\n\r\n        const container = document.createElement(\"div\")\r\n        container.classList.add(\"form-container\")\r\n\r\n        // Tailwind\r\n        container.classList.add(\r\n            \"container\",\r\n            \"relative\",\r\n            \"flex\",\r\n            \"flex-col\",\r\n            \"justify-center\",\r\n            \"items-center\",\r\n            \"m-auto\",\r\n            \"w-full\",\r\n            \"sm:w-1/2\",\r\n            \"h-2/5\",\r\n            \"sm:h-1/2\",\r\n            \"bg-white\",\r\n            \"shadow-sm\",\r\n            \"rounded-md\"\r\n        )\r\n\r\n        const title = document.createElement(\"h1\")\r\n        title.classList.add(\"creation-title\")\r\n        title.appendChild(document.createTextNode(\"Créer une partie\"))\r\n\r\n        //Tailwind\r\n        title.classList.add(\r\n            \"text-3xl\",\r\n            \"font-bold\",\r\n            \"absolute\",\r\n            \"top-3\"\r\n        )\r\n\r\n        const player1Input = document.createElement(\"input\")\r\n        player1Input.classList.add(\"player1-input\")\r\n        player1Input.setAttribute(\"value\", \"Joueur 1\")\r\n\r\n        // Tailwind\r\n        player1Input.classList.add(\r\n            \"pl-1\",\r\n            \"border\",\r\n            \"rounded-md\",\r\n            \"text-slate-600\",\r\n            \"border-slate-300\",\r\n            \"h-10\",\r\n            \"shadow-sm\",\r\n            \"w-1/2\",\r\n            \"mr-2\"\r\n        )\r\n\r\n        const player2Input = document.createElement(\"input\")\r\n        player2Input.classList.add(\"player2-input\")\r\n        player2Input.setAttribute(\"value\", \"Joueur 2\")\r\n\r\n        // Tailwind\r\n        player2Input.classList.add(\r\n            \"pl-1\",\r\n            \"border\",\r\n            \"rounded-md\",\r\n            \"text-slate-600\",\r\n            \"border-slate-300\",\r\n            \"h-10\",\r\n            \"shadow-sm\",\r\n            \"w-1/2\",\r\n            \"ml-2\"\r\n        )\r\n\r\n        const validateButton = document.createElement(\"button\")\r\n        validateButton.classList.add(\"validate-button\")\r\n        validateButton.appendChild(document.createTextNode(\"Valider\"))\r\n\r\n        // Tailwind\r\n        validateButton.classList.add(\r\n            \"absolute\",\r\n            \"bottom-5\",\r\n            \"h-10\",\r\n            \"w-2/4\",\r\n            \"bg-blue-600\",\r\n            \"text-white\",\r\n            \"rounded-md\",\r\n            \"hover:bg-blue-700\",\r\n            \"active:bg-blue-800\",\r\n            \"shadow-md\",\r\n            \"hover:shadow-lg\"\r\n        )\r\n        \r\n        const inputsContainer = document.createElement(\"div\")\r\n        inputsContainer.classList.add(\"inputs-container\")\r\n        inputsContainer.appendChild(player1Input)\r\n        inputsContainer.appendChild(player2Input)\r\n\r\n        // Tailwind\r\n        inputsContainer.classList.add(\r\n            \"w-3/4\",\r\n            \"mb-5\",\r\n            \"flex\",\r\n            \"flex-row\",\r\n            \"justify-between\"\r\n        )\r\n\r\n        const sizeLabel = document.createElement(\"label\")\r\n        sizeLabel.appendChild(document.createTextNode(\"Taille de la grille :\"))\r\n        const sizeInput = document.createElement(\"input\")\r\n        sizeInput.classList.add(\"size-input\")\r\n        sizeInput.setAttribute(\"type\", \"number\")\r\n        sizeInput.setAttribute(\"value\", \"5\")\r\n        sizeInput.setAttribute(\"min\", \"4\")\r\n        sizeInput.setAttribute(\"max\", \"20\")\r\n\r\n        // Tailwind\r\n        sizeInput.classList.add(\r\n            \"h-10\",\r\n            \"w-1/4\",\r\n            \"border\",\r\n            \"rounded-md\",\r\n            \"border-slate-300\",\r\n            \"pl-1\",\r\n            \"text-slate-600\",\r\n            \"mb-5\"\r\n        )\r\n\r\n        container.appendChild(title)\r\n        container.appendChild(inputsContainer)\r\n        container.appendChild(sizeLabel)\r\n        container.appendChild(sizeInput)\r\n        container.appendChild(validateButton)\r\n\r\n\r\n        overlay.appendChild(container)\r\n        this.appendChild(overlay)\r\n    }\r\n\r\n    createGame() {\r\n        const sizeInput: HTMLInputElement | null = document.querySelector(\".size-input\")\r\n        const boardSize = parseInt(sizeInput!.value)\r\n        const board = new Board(boardSize, boardSize)\r\n\r\n        const player1: HTMLInputElement | null = document.querySelector(\".player1-input\")\r\n        const p1_name = player1!.value\r\n        const player2: HTMLInputElement | null = document.querySelector(\".player2-input\")\r\n        const p2_name = player2!.value\r\n\r\n        const overlay: HTMLDivElement | null = document.querySelector(\".overlay\")\r\n        overlay!.style.display = \"none\"\r\n\r\n        const ui_board = document.createElement(\"game-board\")\r\n        ui_board.setAttribute(\"board-width\", boardSize.toString())\r\n        ui_board.setAttribute(\"board-height\", boardSize.toString())\r\n        document.querySelector(\".app\")!.appendChild(ui_board)\r\n        customElements.define(\"game-board\", UI_Board)\r\n\r\n        const game = new Game(board, p1_name, p2_name);\r\n        UI_Board.prototype.game = game;\r\n\r\n        UI_Infos.prototype.game = game;\r\n\r\n        const ui_infos = document.createElement(\"game-infos\")\r\n        customElements.define(\"game-infos\", UI_Infos)\r\n        document.querySelector(\".app\")!.appendChild(ui_infos)\r\n        \r\n    }\r\n}","import UI_Creation from \"./UI/UI_Creation\"\r\n\r\ncustomElements.define(\"game-creation\", UI_Creation)\r\n"],"names":["$4100499228b73440$var$__createBinding","module","exports","__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","$4100499228b73440$var$__exportStar","__exportStar","p","prototype","hasOwnProperty","call","value","default","forceInit","util","math","random","sources","variation","Emitter","Particle","settings","scene","parcelRequire","Lazy","document","window","Error","$7FS7F","Scene","$giDX8","$9504u","$hTpvv","current","$59665861aa1d0693$var$Scene","Scene1","this","emitters","debug","$3PydK","Debug","renderer","$d06HG","Renderer","scheduledTickId","lastTickTimestamp","performance","now","tick","bind","scheduleTick","createEmitter","options","push","emitter","clearEmitters","splice","length","clearParticles","reduce","sum","requestAnimationFrame","cancelTick","$2ca0ae0984c6786e$var$__spreadArray","__spreadArray","to","from","i","il","j","$2ca0ae0984c6786e$var$Debug","Debug1","refreshRate","refreshTimer","delta","container","$76ES7","debugContainer","displayStyle","style","display","innerHTML","getDebugInformation","join","particles","acc","cur","infos","Math","round","particleContainer","rootContainer","$52c8cc455d9a1421$var$isContainerActive","isConnected","$52c8cc455d9a1421$var$makeContainer","name","styles","parent","createElement","id","assign","appendChild","$31LFg","position","left","top","height","width","pointerEvents","userSelect","zIndex","toString","body","margin","padding","border","background","color","gravity","respectReducedMotion","$23467044ab2a9467$var$__createBinding","$23467044ab2a9467$var$__exportStar","overrideDefaults","defaults","overrides","rotationToNormal","$9ee6e9c93953c218$var$__createBinding","$9ee6e9c93953c218$var$__exportStar","Circle","$4c94a3349ae67d31$var$Circle","Circle1","x","y","radius","Color","$dd0c17c4cb33c479$var$Color","Color1","r","g","b","values","Float32Array","rgb","set","floor","configurable","mix","weight","$gVTF6","lerp","toHex","hex","v","padStart","$c53d2583437e0e83$var$lerp","a","t","approximately","clamp","invlerp","slerp","epsilon","rad2deg","deg2rad","PI","cos","extendStatics","$f709e09850e5d397$var$__extends","__extends","d1","b1","setPrototypeOf","__proto__","Array","d","TypeError","String","__","constructor","$f709e09850e5d397$var$__spreadArray","Gradient","$f709e09850e5d397$var$Gradient","_super","Gradient1","apply","arguments","interpolate","solid","time","simple","_i","colors","step","map","index","Spline","$c6f863968dd45636$var$Spline","Spline1","keys","isArray","evaluate","ascendingKeys","sort","upperKeyIndex","findIndex","$15804dea62bf2069$var$__extends","NumericSpline","$15804dea62bf2069$var$NumericSpline","NumericSpline1","Rect","$a785f6424194afe4$var$Rect","Rect1","fromScreen","scrollX","scrollY","innerWidth","innerHeight","fromElement","element","getBoundingClientRect","$4bb49d90a8b2319a$var$__spreadArray","Vector","Vector1","z","xyz","magnitude","sqrt","sqrMagnitude","add","vector","despawningRules","lifetime","particle","$178cf851533c414e$var$Lazy","Lazy1","factory","exists","defaultExists","$d06b5bef59a40ddc$var$Emitter","Emitter1","currentLoop","durationTimer","emissionTimer","attemptedBurstIndices","$2OsQY","$6LEXJ","getDefaultEmitterOptions","emitterOptions","emission","getDefaultEmissionOptions","emissionOptions","getDefaultRendererOptions","rendererOptions","loops","duration","isExpired","burstIndex","_a","bursts","burst","includes","count","$gZIWH","evaluateVariation","emitParticle","delay","rate","_loop_1","this_1","tickParticle","some","rule","gradientSample","splineSample","skewRelative","skew","range","$eiIs5","pick","min","max","randomRange","amount","percentage","randomInsideCircle","randomInsideRect","randomUnitVector","$a6953a64e32074a1$var$randomRange","arr","theta","$dDPyP","sin","rect","$4ed6e82ace476e2e$var$__createBinding","$4ed6e82ace476e2e$var$__exportStar","useGravity","$aKD1R","bounds","modules","angle","sourceSampler","$6GJU0","rectSource","zero","initialLifetime","initialSpeed","initialSize","initialRotation","initialColor","white","circleSource","mouseSource","elementSource","dynamicSource","$4dea45958129f6aa$var$elementSource","source","$4dea45958129f6aa$var$mouseSource","clientX","clientY","$4dea45958129f6aa$var$rectSource","HTMLElement","$4dea45958129f6aa$var$circleSource","MouseEvent","$90ce1f33ee1cbbda$var$defaultApplyColor","nodeName","toLowerCase","fill","shapeFactory","applyColor","applyOpacity","$90ce1f33ee1cbbda$var$defaultApplyOpacity","applyLighting","$90ce1f33ee1cbbda$var$defaultApplyLighting","applyTransform","$90ce1f33ee1cbbda$var$defaultApplyTransform","$69c4a2d9f14bd1f7$var$Particle","populatedOptions","size","location","rotation","velocity","opacity","Symbol","$977079a1043e4fec$var$Renderer","Renderer1","elements","Map","light","$6uYGk","enabled","$5zZXT","matchMedia","matches","begin","renderedParticles","end","it","result","next","done","remove","delete","renderParticle","has","createParticleElement","resolveShapeFactory","resolvableShapes","square","rectangle","circle","roundedSquare","roundedRectangle","star","shape","resolved","$4fa9b802d88e7434$var$__createBinding","$4fa9b802d88e7434$var$__exportStar","confetti","populated","speed","scale","fromHsl","$8PzjS","ModuleBuilder","drive","by","relative","build","shapes","spread","$66de7be0e80844ee$var$ModuleBuilder","ModuleBuilder1","factor","isRelative","key","driverKey","through","driver","driverValue","sparkles","$bcd369778f872d1f$export$dc537a3a3893548e","board","line","owner","linesOwners","right","bottom","setSquareOwner","setLineOwner","direction","printBoard","str","console","log","$06eff6019c405e82$export$2e2bcd8739ae039","connectedCallback","replayButton","querySelector","addEventListener","replay","$parcel$interopDefault","super","overlay","classList","endText","createTextNode","setWinner","reload","$d759c8766534d048$export$2e2bcd8739ae039","board_height","hasAttribute","parseInt","getAttribute","board_width","boxes","getElementsByTagName","forEach","dir","hitbox","interractLine","parentNode","children","indexOf","parentElement","game","players","currentPlayer","xy","playTurn","updateScore","setBgColor","isGameFinished","endScreen","customElements","define","getWinner","dot_top_right","className","dot_top_left","dot_bottom_right","dot_bottom_left","table","interractionType","typeString","box","rows","cells","neighborBox","c","$7b066675d1aa79fa$export$985739bfa5723e08","playerName","score","isLinePlayed","playLine","nextPlayer","isSquareFull","boxesCount","filledBoxesCount","calculateBoxes","turnScore","xy_arr","calculation","$9143b7e8b13c84ea$export$6a506b36fdea397d","input","substring","$e90b79a595231448$export$2e2bcd8739ae039","title","score1","score2","attributes","scoreDiv","$7e78193218ebb0a2$export$2e2bcd8739ae039","createGame","player1Input","setAttribute","player2Input","validateButton","inputsContainer","sizeLabel","sizeInput","boardSize","p1_name","p2_name","ui_board","ui_infos"],"version":3,"file":"index.0a1107d7.js.map"}