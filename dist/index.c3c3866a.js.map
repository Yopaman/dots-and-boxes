{"mappings":"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","sources":["node_modules/party-js/lib/index.js","node_modules/party-js/lib/scene.js","node_modules/party-js/lib/debug.js","node_modules/party-js/lib/containers.js","node_modules/party-js/lib/settings.js","node_modules/party-js/lib/util/index.js","node_modules/party-js/lib/util/config.js","node_modules/party-js/lib/util/rotation.js","node_modules/party-js/lib/components/index.js","node_modules/party-js/lib/components/circle.js","node_modules/party-js/lib/components/color.js","node_modules/party-js/lib/systems/math.js","node_modules/party-js/lib/components/gradient.js","node_modules/party-js/lib/components/spline.js","node_modules/party-js/lib/components/numericSpline.js","node_modules/party-js/lib/components/rect.js","node_modules/party-js/lib/components/vector.js","node_modules/party-js/lib/util/rules.js","node_modules/party-js/lib/util/lazy.js","node_modules/party-js/lib/particles/emitter.js","node_modules/party-js/lib/systems/variation.js","node_modules/party-js/lib/systems/random.js","node_modules/party-js/lib/particles/options/index.js","node_modules/party-js/lib/particles/options/emitterOptions.js","node_modules/party-js/lib/particles/options/emissionOptions.js","node_modules/party-js/lib/systems/sources.js","node_modules/party-js/lib/particles/options/renderOptions.js","node_modules/party-js/lib/particles/particle.js","node_modules/party-js/lib/particles/renderer.js","node_modules/party-js/lib/systems/shapes.js","node_modules/party-js/lib/templates/index.js","node_modules/party-js/lib/templates/confetti.js","node_modules/party-js/lib/systems/modules.js","node_modules/party-js/lib/templates/sparkles.js","src/Board.ts","src/UI/UI_End.ts","src/UI/UI_Board.ts","src/Game.ts","src/helpers/truncate.ts","src/UI/UI_Infos.ts","src/UI/UI_Creation.ts","src/index.ts"],"sourcesContent":["\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = exports.forceInit = exports.util = exports.math = exports.random = exports.sources = exports.variation = exports.Emitter = exports.Particle = exports.settings = exports.scene = void 0;\r\nvar scene_1 = require(\"./scene\");\r\nvar util_1 = require(\"./util\");\r\n__exportStar(require(\"./components\"), exports);\r\n__exportStar(require(\"./templates\"), exports);\r\n__exportStar(require(\"./systems/shapes\"), exports);\r\n__exportStar(require(\"./systems/modules\"), exports);\r\n// Create the lazy-initializing scene.\r\nexports.scene = new util_1.Lazy(function () {\r\n    // The library requires the use of the DOM, hence it cannot run in non-browser environments.\r\n    if (typeof document === \"undefined\" || typeof window === \"undefined\") {\r\n        throw new Error(\"It seems like you are trying to run party.js in a non-browser-like environment, which is not supported.\");\r\n    }\r\n    return new scene_1.Scene();\r\n});\r\nvar settings_1 = require(\"./settings\");\r\nObject.defineProperty(exports, \"settings\", { enumerable: true, get: function () { return settings_1.settings; } });\r\nvar particle_1 = require(\"./particles/particle\");\r\nObject.defineProperty(exports, \"Particle\", { enumerable: true, get: function () { return particle_1.Particle; } });\r\nvar emitter_1 = require(\"./particles/emitter\");\r\nObject.defineProperty(exports, \"Emitter\", { enumerable: true, get: function () { return emitter_1.Emitter; } });\r\nexports.variation = require(\"./systems/variation\");\r\nexports.sources = require(\"./systems/sources\");\r\nexports.random = require(\"./systems/random\");\r\nexports.math = require(\"./systems/math\");\r\nexports.util = require(\"./util\");\r\n/**\r\n * Forces the initialization of the otherwise lazy scene.\r\n */\r\nfunction forceInit() {\r\n    exports.scene.current;\r\n}\r\nexports.forceInit = forceInit;\r\nexports.default = require(\"./\");\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Scene = void 0;\r\nvar debug_1 = require(\"./debug\");\r\nvar emitter_1 = require(\"./particles/emitter\");\r\nvar renderer_1 = require(\"./particles/renderer\");\r\n/**\r\n * Represents a scene that contains emitters and their particles.\r\n *\r\n * Scenes are responsible for spawning and updating emitters, and\r\n * removing them once they are done.\r\n *\r\n * Scenes are not explicitely present in the DOM as an element, only\r\n * the contained particles are.\r\n */\r\nvar Scene = /** @class */ (function () {\r\n    /**\r\n     * Initializes a new scene and starts the ticking job.\r\n     */\r\n    function Scene() {\r\n        /**\r\n         * The emitters currently present in the scene.\r\n         */\r\n        this.emitters = [];\r\n        /**\r\n         * The debug instance associated with the scene.\r\n         */\r\n        this.debug = new debug_1.Debug(this);\r\n        /**\r\n         * The renderer associated with the scene.\r\n         */\r\n        this.renderer = new renderer_1.Renderer();\r\n        /**\r\n         * The ID of the currently scheduled tick.\r\n         */\r\n        this.scheduledTickId = undefined;\r\n        /**\r\n         * The timestamp of the last tick, used to calculate deltas.\r\n         *\r\n         * @initialValue `performance.now()` (time origin)\r\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMHighResTimeStamp\r\n         */\r\n        this.lastTickTimestamp = performance.now();\r\n        // Ensure the scene context is preserved on the tick.\r\n        this.tick = this.tick.bind(this);\r\n        this.scheduleTick();\r\n    }\r\n    /**\r\n     * Creates and returns a new, default emitter object.\r\n     */\r\n    Scene.prototype.createEmitter = function (options) {\r\n        var emitter = new emitter_1.Emitter(options);\r\n        this.emitters.push(emitter);\r\n        return emitter;\r\n    };\r\n    /**\r\n     * Clears all emitters from the scene.\r\n     *\r\n     * @returns The number of cleared emitters.\r\n     */\r\n    Scene.prototype.clearEmitters = function () {\r\n        return this.emitters.splice(0).length;\r\n    };\r\n    /**\r\n     * Clears the particles from all emitters in the scene.\r\n     * Note that this does not remove the actual emitter objects though.\r\n     *\r\n     * @returns The number of cleared particles.\r\n     */\r\n    Scene.prototype.clearParticles = function () {\r\n        return this.emitters.reduce(function (sum, emitter) { return sum + emitter.clearParticles(); }, 0);\r\n    };\r\n    /**\r\n     * Schedules a tick in the scene.\r\n     */\r\n    Scene.prototype.scheduleTick = function () {\r\n        this.scheduledTickId = window.requestAnimationFrame(this.tick);\r\n    };\r\n    /**\r\n     * Cancels a pending tick operation.\r\n     */\r\n    Scene.prototype.cancelTick = function () {\r\n        window.cancelAnimationFrame(this.scheduledTickId);\r\n    };\r\n    /**\r\n     * Processes a tick cycle, updating all emitters contained in the scene.\r\n     * This is handled as a JS animation frame event, hence the passed timestamp.\r\n     *\r\n     * @remarks\r\n     * The emitter ticking and particle rendering is run using try-catch blocks,\r\n     * to ensure that we can recover from potential errors.\r\n     *\r\n     * @param timestamp The current timestamp of the animation frame.\r\n     */\r\n    Scene.prototype.tick = function (timestamp) {\r\n        // Calculate the elapsed delta and convert it to seconds.\r\n        var delta = (timestamp - this.lastTickTimestamp) / 1000;\r\n        try {\r\n            // Perform ticks for all the emitters in the scene.\r\n            for (var i = 0; i < this.emitters.length; i++) {\r\n                var emitter = this.emitters[i];\r\n                emitter.tick(delta);\r\n                if (emitter.isExpired && emitter.canRemove) {\r\n                    this.emitters.splice(i--, 1);\r\n                }\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(\"An error occurred while updating the scene's emitters:\\n\\\"\" + error + \"\\\"\");\r\n        }\r\n        try {\r\n            // Instruct the renderer to draw the particles of all systems.\r\n            this.renderer.begin();\r\n            for (var _i = 0, _a = this.emitters; _i < _a.length; _i++) {\r\n                var emitter = _a[_i];\r\n                for (var _b = 0, _c = emitter.particles; _b < _c.length; _b++) {\r\n                    var particle = _c[_b];\r\n                    this.renderer.renderParticle(particle, emitter);\r\n                }\r\n            }\r\n            this.renderer.end();\r\n        }\r\n        catch (error) {\r\n            console.error(\"An error occurred while rendering the scene's particles:\\n\\\"\" + error + \"\\\"\");\r\n        }\r\n        // Perform a tick on the debug interface\r\n        this.debug.tick(delta);\r\n        // Save the timestamp as the last tick timestamp and schedule a new tick.\r\n        this.lastTickTimestamp = timestamp;\r\n        this.scheduleTick();\r\n    };\r\n    return Scene;\r\n}());\r\nexports.Scene = Scene;\r\n","\"use strict\";\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Debug = void 0;\r\nvar containers_1 = require(\"./containers\");\r\nvar settings_1 = require(\"./settings\");\r\n/**\r\n * Represents a utility module to view debug information inside the DOM.\r\n * This is disabled by default and needs to manually be enabled by setting\r\n * the '.enabled' field to true.\r\n *\r\n * While disabled, the utility will not fetch stats and update itself.\r\n */\r\nvar Debug = /** @class */ (function () {\r\n    /**\r\n     * Registers a new debug utility that is attached to the given scene.\r\n     *\r\n     * @param scene The scene to attach to.\r\n     */\r\n    function Debug(scene) {\r\n        this.scene = scene;\r\n        /**\r\n         * The rate at which the debug interface should refresh itself (per second).\r\n         */\r\n        this.refreshRate = 8;\r\n        /**\r\n         * The timer counting down to refreshes.\r\n         */\r\n        this.refreshTimer = 1 / this.refreshRate;\r\n    }\r\n    /**\r\n     * Processes a tick event in the interface. This checks if enough has passed to\r\n     * trigger a refresh, and if so, fetches the debug information and updates the DOM.\r\n     *\r\n     * @param delta The time that has elapsed since the last tick.\r\n     */\r\n    Debug.prototype.tick = function (delta) {\r\n        var container = containers_1.debugContainer.current;\r\n        // If the current display style does not match the style inferred from the\r\n        // enabled-state, update it.\r\n        var displayStyle = settings_1.settings.debug ? \"block\" : \"none\";\r\n        if (container.style.display !== displayStyle) {\r\n            container.style.display = displayStyle;\r\n        }\r\n        if (!settings_1.settings.debug) {\r\n            // If the interface is not enabled, don't fetch or update any infos.\r\n            return;\r\n        }\r\n        this.refreshTimer += delta;\r\n        if (this.refreshTimer > 1 / this.refreshRate) {\r\n            this.refreshTimer = 0;\r\n            // Update the container with the fetched information joined on line breaks.\r\n            container.innerHTML = this.getDebugInformation(delta).join(\"<br>\");\r\n        }\r\n    };\r\n    /**\r\n     * Fetches the debug information from the specified delta and the linked scene.\r\n     *\r\n     * @returns An array of debugging information, formatted as HTML.\r\n     */\r\n    Debug.prototype.getDebugInformation = function (delta) {\r\n        // Count emitters and particles.\r\n        var emitters = this.scene.emitters.length;\r\n        var particles = this.scene.emitters.reduce(function (acc, cur) { return acc + cur.particles.length; }, 0);\r\n        var infos = [\r\n            \"<b>party.js Debug</b>\",\r\n            \"--------------\",\r\n            \"FPS: \" + Math.round(1 / delta),\r\n            \"Emitters: \" + emitters,\r\n            \"Particles: \" + particles,\r\n        ];\r\n        // Emitter informations are formatted using their index, internal timer\r\n        // and total particle count.\r\n        var emitterInfos = this.scene.emitters.map(function (emitter) {\r\n            return [\r\n                // Show the current loop and the total loops.\r\n                \"\\u2B6F: \" + (emitter[\"currentLoop\"] + 1) + \"/\" + (emitter.options.loops >= 0 ? emitter.options.loops : \"∞\"),\r\n                // Show the amount of particle contained.\r\n                \"\\u03A3p: \" + emitter.particles.length,\r\n                // Show the internal timer.\r\n                !emitter.isExpired\r\n                    ? \"\\u03A3t: \" + emitter[\"durationTimer\"].toFixed(3) + \"s\"\r\n                    : \"<i>expired</i>\",\r\n            ].join(\", \");\r\n        });\r\n        infos.push.apply(infos, __spreadArray([\"--------------\"], emitterInfos));\r\n        return infos;\r\n    };\r\n    return Debug;\r\n}());\r\nexports.Debug = Debug;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.particleContainer = exports.debugContainer = exports.rootContainer = void 0;\r\nvar settings_1 = require(\"./settings\");\r\nvar util_1 = require(\"./util\");\r\n/**\r\n * The prefix to apply to the containers.\r\n */\r\nvar containerPrefix = \"party-js-\";\r\n/**\r\n * Checks if the specified container is 'active', meaning not undefined and attached to the DOM.\r\n */\r\nfunction isContainerActive(container) {\r\n    return container && container.isConnected;\r\n}\r\n/**\r\n * A generic factory method for creating a DOM container. Prefixes the specified name with the\r\n * container prefix, applies the styles and adds it under the parent.\r\n */\r\nfunction makeContainer(name, styles, parent) {\r\n    var container = document.createElement(\"div\");\r\n    container.id = containerPrefix + name;\r\n    Object.assign(container.style, styles);\r\n    return parent.appendChild(container);\r\n}\r\n/**\r\n * Represents the root container for DOM elements of the library.\r\n */\r\nexports.rootContainer = new util_1.Lazy(function () {\r\n    return makeContainer(\"container\", {\r\n        position: \"fixed\",\r\n        left: \"0\",\r\n        top: \"0\",\r\n        height: \"100vh\",\r\n        width: \"100vw\",\r\n        pointerEvents: \"none\",\r\n        userSelect: \"none\",\r\n        zIndex: settings_1.settings.zIndex.toString(),\r\n    }, document.body);\r\n}, isContainerActive);\r\n/**\r\n * Represents the debugging container of the library, only active if debugging is enabled.\r\n */\r\nexports.debugContainer = new util_1.Lazy(function () {\r\n    return makeContainer(\"debug\", {\r\n        position: \"absolute\",\r\n        top: \"0\",\r\n        left: \"0\",\r\n        margin: \"0.5em\",\r\n        padding: \"0.5em 1em\",\r\n        border: \"2px solid rgb(0, 0, 0, 0.2)\",\r\n        background: \"rgb(0, 0, 0, 0.1)\",\r\n        color: \"#555\",\r\n        fontFamily: \"monospace\",\r\n    }, exports.rootContainer.current);\r\n}, isContainerActive);\r\n/**\r\n * Represents the particle container of the library.\r\n * This is where the particle DOM elements get rendered into.\r\n */\r\nexports.particleContainer = new util_1.Lazy(function () {\r\n    return makeContainer(\"particles\", {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        overflow: \"hidden\",\r\n        perspective: \"1200px\",\r\n    }, exports.rootContainer.current);\r\n}, isContainerActive);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.settings = void 0;\r\nexports.settings = {\r\n    debug: false,\r\n    gravity: 800,\r\n    zIndex: 99999,\r\n    respectReducedMotion: true,\r\n};\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./config\"), exports);\r\n__exportStar(require(\"./rotation\"), exports);\r\n__exportStar(require(\"./rules\"), exports);\r\n__exportStar(require(\"./lazy\"), exports);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.overrideDefaults = void 0;\r\n/**\r\n * Replaces the supplied defaults with the properties specified in the overrides.\r\n * This returns a new object.\r\n */\r\nfunction overrideDefaults(defaults, overrides) {\r\n    return Object.assign({}, defaults, overrides);\r\n}\r\nexports.overrideDefaults = overrideDefaults;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.rotationToNormal = void 0;\r\nvar components_1 = require(\"../components\");\r\nvar math_1 = require(\"../systems/math\");\r\n/**\r\n * Converts the specified euler rotation (in degrees) into the corresponding normal vector.\r\n *\r\n * @remarks\r\n * The normal is calculated by placing a (figurative) plane in a coordinate-system's\r\n * origin, and rotating it by the specified angles. Note that the z-component of the\r\n * rotation is irrelevant for the normal and can be ignored. Then, two vectors\r\n * describing the orientation of the plane are calculated. Their cross product\r\n * denotes the normal vector.\r\n *\r\n * @param rotation The euler rotation angles (in degrees) to calculate the normal for.\r\n */\r\nfunction rotationToNormal(rotation) {\r\n    var alpha = rotation.x * math_1.deg2rad;\r\n    var beta = rotation.y * math_1.deg2rad;\r\n    var a = new components_1.Vector(Math.cos(beta), 0, Math.sin(beta));\r\n    var b = new components_1.Vector(0, Math.cos(alpha), Math.sin(alpha));\r\n    return a.cross(b);\r\n}\r\nexports.rotationToNormal = rotationToNormal;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./circle\"), exports);\r\n__exportStar(require(\"./color\"), exports);\r\n__exportStar(require(\"./gradient\"), exports);\r\n__exportStar(require(\"./numericSpline\"), exports);\r\n__exportStar(require(\"./rect\"), exports);\r\n__exportStar(require(\"./vector\"), exports);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Circle = void 0;\r\n/**\r\n * Represents a circle.\r\n */\r\nvar Circle = /** @class */ (function () {\r\n    /**\r\n     * Creates a new circle at the specified coordinates, with a default radius of 0.\r\n     */\r\n    function Circle(x, y, radius) {\r\n        if (radius === void 0) { radius = 0; }\r\n        this.x = x;\r\n        this.y = y;\r\n        this.radius = radius;\r\n    }\r\n    Circle.zero = new Circle(0, 0);\r\n    return Circle;\r\n}());\r\nexports.Circle = Circle;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Color = void 0;\r\nvar math_1 = require(\"../systems/math\");\r\n/**\r\n * Represents a color consisting of RGB values. The components of it are\r\n * represented as integers in the range 0 to 255.\r\n *\r\n * @example\r\n * ```ts\r\n * const a = new Color(12, 59, 219);\r\n * const b = Color.fromHex(\"#ffa68d\");\r\n * const result = a.mix(b);\r\n * ```\r\n */\r\nvar Color = /** @class */ (function () {\r\n    /**\r\n     * Creates a new color instance from the specified RGB components.\r\n     */\r\n    function Color(r, g, b) {\r\n        this.values = new Float32Array(3);\r\n        this.rgb = [r, g, b];\r\n    }\r\n    Object.defineProperty(Color.prototype, \"r\", {\r\n        /**\r\n         * Returns the r-component of the color.\r\n         */\r\n        get: function () {\r\n            return this.values[0];\r\n        },\r\n        /**\r\n         * Modifies the r-component of the color.\r\n         * Note that this also floors the value.\r\n         */\r\n        set: function (value) {\r\n            this.values[0] = Math.floor(value);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Color.prototype, \"g\", {\r\n        /**\r\n         * Returns the g-component of the color.\r\n         */\r\n        get: function () {\r\n            return this.values[1];\r\n        },\r\n        /**\r\n         * Modifies the g-component of the color.\r\n         * Note that this also floors the value.\r\n         */\r\n        set: function (value) {\r\n            this.values[1] = Math.floor(value);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Color.prototype, \"b\", {\r\n        /**\r\n         * Returns the b-component of the color.\r\n         * Note that this also floors the value.\r\n         */\r\n        get: function () {\r\n            return this.values[2];\r\n        },\r\n        /**\r\n         * Modifies the b-component of the color.\r\n         */\r\n        set: function (value) {\r\n            this.values[2] = Math.floor(value);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Color.prototype, \"rgb\", {\r\n        /**\r\n         * Returns the rgb-components of the color, bundled as a copied array.\r\n         */\r\n        get: function () {\r\n            return [this.r, this.g, this.b];\r\n        },\r\n        /**\r\n         * Simultaneously updates the rgb-components of the color, by passing an array.\r\n         */\r\n        set: function (values) {\r\n            this.r = values[0];\r\n            this.g = values[1];\r\n            this.b = values[2];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Mixes the two color together with an optional mixing weight.\r\n     * This weight is 0.5 by default, perfectly averaging the color.\r\n     */\r\n    Color.prototype.mix = function (color, weight) {\r\n        if (weight === void 0) { weight = 0.5; }\r\n        return new Color(math_1.lerp(this.r, color.r, weight), math_1.lerp(this.g, color.g, weight), math_1.lerp(this.b, color.b, weight));\r\n    };\r\n    /**\r\n     * Returns the hexadecimal representation of the color, prefixed by '#'.\r\n     */\r\n    Color.prototype.toHex = function () {\r\n        var hex = function (v) { return v.toString(16).padStart(2, \"0\"); };\r\n        return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\r\n    };\r\n    /**\r\n     * Returns a formatted representation of the color.\r\n     */\r\n    Color.prototype.toString = function () {\r\n        return \"rgb(\" + this.values.join(\", \") + \")\";\r\n    };\r\n    /**\r\n     * Creates a color from the specified hexadecimal string.\r\n     * This string can optionally be prefixed by '#'.\r\n     */\r\n    Color.fromHex = function (hex) {\r\n        if (hex.startsWith(\"#\")) {\r\n            hex = hex.substr(1);\r\n        }\r\n        return new Color(parseInt(hex.substr(0, 2), 16), parseInt(hex.substr(2, 2), 16), parseInt(hex.substr(4, 2), 16));\r\n    };\r\n    /**\r\n     * Creates a color from the specified HSL components.\r\n     *\r\n     * @see https://stackoverflow.com/a/9493060/5507624\r\n     */\r\n    Color.fromHsl = function (h, s, l) {\r\n        h /= 360;\r\n        s /= 100;\r\n        l /= 100;\r\n        if (s === 0) {\r\n            return new Color(l, l, l);\r\n        }\r\n        else {\r\n            var hue2rgb = function (p, q, t) {\r\n                if (t < 0)\r\n                    t += 1;\r\n                if (t > 1)\r\n                    t -= 1;\r\n                if (t < 1 / 6)\r\n                    return p + (q - p) * 6 * t;\r\n                if (t < 1 / 2)\r\n                    return q;\r\n                if (t < 2 / 3)\r\n                    return p + (q - p) * (2 / 3 - t) * 6;\r\n                return p;\r\n            };\r\n            var to255 = function (v) { return Math.min(255, 256 * v); };\r\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n            var p = 2 * l - q;\r\n            return new Color(to255(hue2rgb(p, q, h + 1 / 3)), to255(hue2rgb(p, q, h)), to255(hue2rgb(p, q, h - 1 / 3)));\r\n        }\r\n    };\r\n    /**\r\n     * Returns (1, 1, 1).\r\n     */\r\n    Color.white = new Color(255, 255, 255);\r\n    /**\r\n     * Returns (0, 0, 0).\r\n     */\r\n    Color.black = new Color(0, 0, 0);\r\n    return Color;\r\n}());\r\nexports.Color = Color;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.approximately = exports.clamp = exports.invlerp = exports.slerp = exports.lerp = exports.epsilon = exports.rad2deg = exports.deg2rad = void 0;\r\n/**\r\n * Constant coefficient to convert degrees to radians.\r\n */\r\nexports.deg2rad = Math.PI / 180;\r\n/**\r\n * Constant coefficient to convert radians to degrees.\r\n */\r\nexports.rad2deg = 180 / Math.PI;\r\n/**\r\n * A small value to approximately compare values.\r\n */\r\nexports.epsilon = 0.000001;\r\n/**\r\n * Linearly interpolates between a and b by t.\r\n */\r\nfunction lerp(a, b, t) {\r\n    return (1 - t) * a + t * b;\r\n}\r\nexports.lerp = lerp;\r\n/**\r\n * Smoothly interpolates between a and b by t (using cosine interpolation).\r\n */\r\nfunction slerp(a, b, t) {\r\n    return lerp(a, b, (1 - Math.cos(t * Math.PI)) / 2);\r\n}\r\nexports.slerp = slerp;\r\n/**\r\n * Inversely lerps v between a and b to find t.\r\n */\r\nfunction invlerp(a, b, v) {\r\n    return (v - a) / (b - a);\r\n}\r\nexports.invlerp = invlerp;\r\n/**\r\n * Clamps the specified value between a minimum and a maximum.\r\n */\r\nfunction clamp(value, min, max) {\r\n    return Math.min(max, Math.max(min, value));\r\n}\r\nexports.clamp = clamp;\r\n/**\r\n * Checks if a is approximately equal to b.\r\n */\r\nfunction approximately(a, b) {\r\n    return Math.abs(a - b) < exports.epsilon;\r\n}\r\nexports.approximately = approximately;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Gradient = void 0;\r\nvar spline_1 = require(\"./spline\");\r\n/**\r\n * Represents a gradient that can be used to interpolate between multiple color.\r\n */\r\nvar Gradient = /** @class */ (function (_super) {\r\n    __extends(Gradient, _super);\r\n    function Gradient() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Interpolates between two color on the gradient.\r\n     */\r\n    Gradient.prototype.interpolate = function (a, b, t) {\r\n        return a.mix(b, t);\r\n    };\r\n    /**\r\n     * Returns a solid gradient from the given color.\r\n     */\r\n    Gradient.solid = function (color) {\r\n        return new Gradient({ value: color, time: 0.5 });\r\n    };\r\n    /**\r\n     * Returns a gradient with evenly spaced keys from the given colors.\r\n     */\r\n    Gradient.simple = function () {\r\n        var colors = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            colors[_i] = arguments[_i];\r\n        }\r\n        var step = 1 / (colors.length - 1);\r\n        return new (Gradient.bind.apply(Gradient, __spreadArray([void 0], colors.map(function (color, index) { return ({\r\n            value: color,\r\n            time: index * step,\r\n        }); }))))();\r\n    };\r\n    return Gradient;\r\n}(spline_1.Spline));\r\nexports.Gradient = Gradient;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Spline = void 0;\r\nvar math_1 = require(\"../systems/math\");\r\n/**\r\n * Represents a spline that can be used to continueously evaluate a function\r\n * between keys. The base implementation is kept generic, so the functionality\r\n * can easily be implemented for similar constructs, such as gradients.\r\n */\r\nvar Spline = /** @class */ (function () {\r\n    /**\r\n     * Creates a new spline instance, using the specified keys.\r\n     * Note that you have to pass at least one key.\r\n     */\r\n    function Spline() {\r\n        var keys = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            keys[_i] = arguments[_i];\r\n        }\r\n        if (keys.length === 0) {\r\n            throw new Error(\"Splines require at least one key.\");\r\n        }\r\n        if (Array.isArray(keys[0])) {\r\n            throw new Error(\"You are trying to pass an array to the spline constructor, which is not supported. \" +\r\n                \"Try to spread the array into the constructor instead.\");\r\n        }\r\n        this.keys = keys;\r\n    }\r\n    /**\r\n     * Evaluates the spline at the given time.\r\n     */\r\n    Spline.prototype.evaluate = function (time) {\r\n        if (this.keys.length === 0) {\r\n            throw new Error(\"Attempt to evaluate a spline with no keys.\");\r\n        }\r\n        if (this.keys.length === 1) {\r\n            // The spline only contains one key, therefore is constant.\r\n            return this.keys[0].value;\r\n        }\r\n        // Sort the keys and figure out the first key above the passed time.\r\n        var ascendingKeys = this.keys.sort(function (a, b) { return a.time - b.time; });\r\n        var upperKeyIndex = ascendingKeys.findIndex(function (g) { return g.time > time; });\r\n        // If the found index is either 0 or -1, the specified time falls out\r\n        // of the range of the supplied keys. In that case, the value of the\r\n        // nearest applicant key is returned.\r\n        if (upperKeyIndex === 0) {\r\n            return ascendingKeys[0].value;\r\n        }\r\n        if (upperKeyIndex === -1) {\r\n            return ascendingKeys[ascendingKeys.length - 1].value;\r\n        }\r\n        // Otherwise, find the bounding keys, and extrapolate the time between\r\n        // the two. This is then used to interpolate between the two keys,\r\n        // using the provided implementation.\r\n        var lowerKey = ascendingKeys[upperKeyIndex - 1];\r\n        var upperKey = ascendingKeys[upperKeyIndex];\r\n        var containedTime = math_1.invlerp(lowerKey.time, upperKey.time, time);\r\n        return this.interpolate(lowerKey.value, upperKey.value, containedTime);\r\n    };\r\n    return Spline;\r\n}());\r\nexports.Spline = Spline;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NumericSpline = void 0;\r\nvar math_1 = require(\"../systems/math\");\r\nvar spline_1 = require(\"./spline\");\r\n/**\r\n * Represents a spline that can take numeric values.\r\n */\r\nvar NumericSpline = /** @class */ (function (_super) {\r\n    __extends(NumericSpline, _super);\r\n    function NumericSpline() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Smoothly interpolates between two keys on the spline.\r\n     */\r\n    NumericSpline.prototype.interpolate = function (a, b, t) {\r\n        return math_1.slerp(a, b, t);\r\n    };\r\n    return NumericSpline;\r\n}(spline_1.Spline));\r\nexports.NumericSpline = NumericSpline;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Rect = void 0;\r\n/**\r\n * Represents a rectangle with an origin and size.\r\n */\r\nvar Rect = /** @class */ (function () {\r\n    function Rect(x, y, width, height) {\r\n        if (width === void 0) { width = 0; }\r\n        if (height === void 0) { height = 0; }\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n    /**\r\n     * Returns a new document-space rectangle from the viewport's bounds.\r\n     */\r\n    Rect.fromScreen = function () {\r\n        return new Rect(window.scrollX, window.scrollY, window.innerWidth, window.innerHeight);\r\n    };\r\n    /**\r\n     * Returns a new document-space rectangle from the specified element.\r\n     */\r\n    Rect.fromElement = function (element) {\r\n        var r = element.getBoundingClientRect();\r\n        return new Rect(window.scrollX + r.x, window.scrollY + r.y, r.width, r.height);\r\n    };\r\n    Rect.zero = new Rect(0, 0);\r\n    return Rect;\r\n}());\r\nexports.Rect = Rect;\r\n","\"use strict\";\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Vector = void 0;\r\nvar math_1 = require(\"../systems/math\");\r\n/**\r\n * Represents a structure used to process vectors.\r\n *\r\n * @remarks\r\n * Note that the operations in this class will **not** modify the original vector,\r\n * except for the property assignments. This is to ensure that vectors are not\r\n * unintentionally modified.\r\n *\r\n * @example\r\n * ```ts\r\n * const vectorA = new Vector(1, 3, 5);\r\n * const vectorB = new Vector(2, 3, 1);\r\n * const vectorC = vectorA.add(vectorB); // (3, 6, 6)\r\n * ```\r\n */\r\nvar Vector = /** @class */ (function () {\r\n    /**\r\n     * Creates a new vector with optional x-, y-, and z-components.\r\n     * Omitted components are defaulted to 0.\r\n     */\r\n    function Vector(x, y, z) {\r\n        if (x === void 0) { x = 0; }\r\n        if (y === void 0) { y = 0; }\r\n        if (z === void 0) { z = 0; }\r\n        this.values = new Float32Array(3);\r\n        this.xyz = [x, y, z];\r\n    }\r\n    Object.defineProperty(Vector.prototype, \"x\", {\r\n        /**\r\n         * Returns the x-component of the vector.\r\n         */\r\n        get: function () {\r\n            return this.values[0];\r\n        },\r\n        /**\r\n         * Modifies the x-component of the vector.\r\n         */\r\n        set: function (value) {\r\n            this.values[0] = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Vector.prototype, \"y\", {\r\n        /**\r\n         * Returns the y-component of the vector.\r\n         */\r\n        get: function () {\r\n            return this.values[1];\r\n        },\r\n        /**\r\n         * Modifies the y-component of the vector.\r\n         */\r\n        set: function (value) {\r\n            this.values[1] = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Vector.prototype, \"z\", {\r\n        /**\r\n         * Returns the z-component of the vector.\r\n         */\r\n        get: function () {\r\n            return this.values[2];\r\n        },\r\n        /**\r\n         * Modifies the z-component of the vector.\r\n         */\r\n        set: function (value) {\r\n            this.values[2] = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Vector.prototype, \"xyz\", {\r\n        /**\r\n         * Returns the xyz-components of the vector, bundled as a copied array.\r\n         */\r\n        get: function () {\r\n            return [this.x, this.y, this.z];\r\n        },\r\n        /**\r\n         * Simultaneously updates the xyz-components of the vector, by passing an array.\r\n         */\r\n        set: function (values) {\r\n            this.values[0] = values[0];\r\n            this.values[1] = values[1];\r\n            this.values[2] = values[2];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the length of the vector.\r\n     */\r\n    Vector.prototype.magnitude = function () {\r\n        return Math.sqrt(this.sqrMagnitude());\r\n    };\r\n    /**\r\n     * Returns the squared length of the vector.\r\n     */\r\n    Vector.prototype.sqrMagnitude = function () {\r\n        return this.x * this.x + this.y * this.y + this.z * this.z;\r\n    };\r\n    /**\r\n     * Adds the two vectors together, component-wise.\r\n     */\r\n    Vector.prototype.add = function (vector) {\r\n        return new Vector(this.x + vector.x, this.y + vector.y, this.z + vector.z);\r\n    };\r\n    /**\r\n     * Subtracts the right vector from the left one, component-wise.\r\n     */\r\n    Vector.prototype.subtract = function (vector) {\r\n        return new Vector(this.x - vector.x, this.y - vector.y, this.z - vector.z);\r\n    };\r\n    /**\r\n     * Scales the lefthand vector by another vector or by a number.\r\n     */\r\n    Vector.prototype.scale = function (scalar) {\r\n        if (typeof scalar === \"number\") {\r\n            return new Vector(this.x * scalar, this.y * scalar, this.z * scalar);\r\n        }\r\n        else {\r\n            return new Vector(this.x * scalar.x, this.y * scalar.y, this.z * scalar.z);\r\n        }\r\n    };\r\n    /**\r\n     * Normalizes the vector to a length of 1. If the length was previously zero,\r\n     * then a zero-length vector will be returned.\r\n     */\r\n    Vector.prototype.normalized = function () {\r\n        var magnitude = this.magnitude();\r\n        if (magnitude !== 0) {\r\n            return this.scale(1 / magnitude);\r\n        }\r\n        return new (Vector.bind.apply(Vector, __spreadArray([void 0], this.xyz)))();\r\n    };\r\n    /**\r\n     * Returns the angle between two vectors, in degrees.\r\n     */\r\n    Vector.prototype.angle = function (vector) {\r\n        return (math_1.rad2deg *\r\n            Math.acos((this.x * vector.x + this.y * vector.y + this.z * vector.z) /\r\n                (this.magnitude() * vector.magnitude())));\r\n    };\r\n    /**\r\n     * Returns the cross-product of two vectors.\r\n     */\r\n    Vector.prototype.cross = function (vector) {\r\n        return new Vector(this.y * vector.z - this.z * vector.y, this.z * vector.x - this.x * vector.z, this.x * vector.y - this.y * vector.x);\r\n    };\r\n    /**\r\n     * returns the dot-product of two vectors.\r\n     */\r\n    Vector.prototype.dot = function (vector) {\r\n        return (this.magnitude() *\r\n            vector.magnitude() *\r\n            Math.cos(math_1.deg2rad * this.angle(vector)));\r\n    };\r\n    /**\r\n     * Returns a formatted representation of the vector.\r\n     */\r\n    Vector.prototype.toString = function () {\r\n        return \"Vector(\" + this.values.join(\", \") + \")\";\r\n    };\r\n    /**\r\n     * Creates a new vector from an angle, in degrees. Note that the z-component will be zero.\r\n     */\r\n    Vector.from2dAngle = function (angle) {\r\n        return new Vector(Math.cos(angle * math_1.deg2rad), Math.sin(angle * math_1.deg2rad));\r\n    };\r\n    /**\r\n     * Returns (0, 0, 0).\r\n     */\r\n    Vector.zero = new Vector(0, 0, 0);\r\n    /**\r\n     * Returns (1, 1, 1).\r\n     */\r\n    Vector.one = new Vector(1, 1, 1);\r\n    /**\r\n     * Returns (1, 0, 0).\r\n     */\r\n    Vector.right = new Vector(1, 0, 0);\r\n    /**\r\n     * Returns (0, 1, 0).\r\n     */\r\n    Vector.up = new Vector(0, 1, 0);\r\n    /**\r\n     * Returns (0, 0, 1).\r\n     */\r\n    Vector.forward = new Vector(0, 0, 1);\r\n    return Vector;\r\n}());\r\nexports.Vector = Vector;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.despawningRules = void 0;\r\n/**\r\n * Contains a set of pre-defined particle despawning rules.\r\n */\r\nexports.despawningRules = {\r\n    /**\r\n     * A rule that despawns a particle once its lifetime is over.\r\n     */\r\n    lifetime: function (particle) {\r\n        return particle.lifetime <= 0;\r\n    },\r\n    /**\r\n     * A rule that despawns a particle once its y-coordinate is outside of the document.\r\n     */\r\n    bounds: function (particle) {\r\n        // Get document height: https://stackoverflow.com/a/44077777/5507624\r\n        var height = document.documentElement.scrollHeight;\r\n        return particle.location.y > height;\r\n    },\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Lazy = void 0;\r\n/**\r\n * A wrapper class to lazily initialize a value.\r\n * Supports custom factory and predicate methods.\r\n */\r\nvar Lazy = /** @class */ (function () {\r\n    function Lazy(factory, exists) {\r\n        if (exists === void 0) { exists = Lazy.defaultExists; }\r\n        this.factory = factory;\r\n        this.exists = exists;\r\n    }\r\n    Object.defineProperty(Lazy.prototype, \"current\", {\r\n        /**\r\n         * The current value of the lazy object. Will be initialized, if the 'exists'\r\n         * predicate doesn't match.\r\n         */\r\n        get: function () {\r\n            if (!this.exists(this.value)) {\r\n                this.value = this.factory();\r\n            }\r\n            return this.value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Lazy.defaultExists = function (value) {\r\n        return typeof value !== \"undefined\";\r\n    };\r\n    return Lazy;\r\n}());\r\nexports.Lazy = Lazy;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Emitter = void 0;\r\nvar vector_1 = require(\"../components/vector\");\r\nvar settings_1 = require(\"../settings\");\r\nvar variation_1 = require(\"../systems/variation\");\r\nvar config_1 = require(\"../util/config\");\r\nvar options_1 = require(\"./options\");\r\nvar particle_1 = require(\"./particle\");\r\n/**\r\n * Represents an emitter that is responsible for spawning and updating particles.\r\n *\r\n * Particles themselves are just data-holders, with the system acting upon them and\r\n * modifying them. The modifications are done mainly via modules, that use the\r\n * particle's data together with some function to apply temporal transitions.\r\n *\r\n * @see Particle\r\n * @see ParticleModifierModule\r\n */\r\nvar Emitter = /** @class */ (function () {\r\n    /**\r\n     * Creates a new emitter, using default options.\r\n     */\r\n    function Emitter(options) {\r\n        /**\r\n         * The particles currently contained within the system.\r\n         */\r\n        this.particles = [];\r\n        this.currentLoop = 0; // The current loop index.\r\n        this.durationTimer = 0; // Measures the current runtime duration, to allow loops to reset.\r\n        this.emissionTimer = 0; // Measures the current emission timer, to allow spawning particles in intervals.\r\n        this.attemptedBurstIndices = []; // The indices of the particle bursts that were attempted this loop.\r\n        this.options = config_1.overrideDefaults(options_1.getDefaultEmitterOptions(), options === null || options === void 0 ? void 0 : options.emitterOptions);\r\n        this.emission = config_1.overrideDefaults(options_1.getDefaultEmissionOptions(), options === null || options === void 0 ? void 0 : options.emissionOptions);\r\n        this.renderer = config_1.overrideDefaults(options_1.getDefaultRendererOptions(), options === null || options === void 0 ? void 0 : options.rendererOptions);\r\n    }\r\n    Object.defineProperty(Emitter.prototype, \"isExpired\", {\r\n        /**\r\n         * Checks if the emitter is already expired and can be removed.\r\n         * Expired emitters do not emit new particles.\r\n         */\r\n        get: function () {\r\n            return (this.options.loops >= 0 && this.currentLoop >= this.options.loops);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Emitter.prototype, \"canRemove\", {\r\n        /**\r\n         * Checks if the emitter can safely be removed.\r\n         * This is true if no more particles are active.\r\n         */\r\n        get: function () {\r\n            return this.particles.length === 0;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Clears all particles inside the emitter.\r\n     *\r\n     * @returns The number of cleared particles.\r\n     */\r\n    Emitter.prototype.clearParticles = function () {\r\n        return this.particles.splice(0).length;\r\n    };\r\n    /**\r\n     * Processes a tick of the emitter, using the elapsed time.\r\n     *\r\n     * @remarks\r\n     * This handles a few things, namely:\r\n     * - Incrementing the duration timer and potentially incrementing the loop.\r\n     * - Handling particle bursts & emissions.\r\n     * - Despawning particles conditionally.\r\n     *\r\n     * @param delta The time, in seconds, passed since the last tick.\r\n     */\r\n    Emitter.prototype.tick = function (delta) {\r\n        if (!this.isExpired) {\r\n            this.durationTimer += delta;\r\n            if (this.durationTimer >= this.options.duration) {\r\n                this.currentLoop++;\r\n                // To start a new loop, the duration timer and attempted bursts are reset.\r\n                this.durationTimer = 0;\r\n                this.attemptedBurstIndices = [];\r\n            }\r\n            // We need to check the expiry again, in case the added loop or duration changed something.\r\n            if (!this.isExpired) {\r\n                // Iterate over the bursts, attempting to execute them if the time is ready.\r\n                var burstIndex = 0;\r\n                for (var _i = 0, _a = this.emission.bursts; _i < _a.length; _i++) {\r\n                    var burst = _a[_i];\r\n                    if (burst.time <= this.durationTimer) {\r\n                        // Has the burst already been attempted? If not ...\r\n                        if (!this.attemptedBurstIndices.includes(burstIndex)) {\r\n                            // Perform the burst, emitting a variable amount of particles.\r\n                            var count = variation_1.evaluateVariation(burst.count);\r\n                            for (var i = 0; i < count; i++) {\r\n                                this.emitParticle();\r\n                            }\r\n                            // Mark the burst as attempted.\r\n                            this.attemptedBurstIndices.push(burstIndex);\r\n                        }\r\n                    }\r\n                    burstIndex++;\r\n                }\r\n                // Handle the 'emission over time'. By using a while-loop instead of a simple\r\n                // if-condition, we take high deltas into account, and ensure that the correct\r\n                // number of particles will consistently be emitted.\r\n                this.emissionTimer += delta;\r\n                var delay = 1 / this.emission.rate;\r\n                while (this.emissionTimer > delay) {\r\n                    this.emissionTimer -= delay;\r\n                    this.emitParticle();\r\n                }\r\n            }\r\n        }\r\n        var _loop_1 = function (i) {\r\n            var particle = this_1.particles[i];\r\n            this_1.tickParticle(particle, delta);\r\n            // Particles should be despawned (i.e. removed from the collection) if any of\r\n            // the despawning rules apply to them.\r\n            if (this_1.options.despawningRules.some(function (rule) { return rule(particle); })) {\r\n                this_1.particles.splice(i, 1);\r\n            }\r\n        };\r\n        var this_1 = this;\r\n        for (var i = this.particles.length - 1; i >= 0; i--) {\r\n            _loop_1(i);\r\n        }\r\n    };\r\n    /**\r\n     * Performs an internal tick for the particle.\r\n     *\r\n     * @remarks\r\n     * This method controls the particle's lifetime, location and velocity, according\r\n     * to the elapsed delta and the configuration. Additionally, each of the emitter's\r\n     * modules is applied to the particle.\r\n     *\r\n     * @param particle The particle to apply the tick for.\r\n     * @param delta The time, in seconds, passed since the last tick.\r\n     */\r\n    Emitter.prototype.tickParticle = function (particle, delta) {\r\n        particle.lifetime -= delta;\r\n        if (this.options.useGravity) {\r\n            // Apply gravitational acceleration to the particle.\r\n            particle.velocity = particle.velocity.add(vector_1.Vector.up.scale(settings_1.settings.gravity * delta));\r\n        }\r\n        // Apply the particle's velocity to its location.\r\n        particle.location = particle.location.add(particle.velocity.scale(delta));\r\n        // Apply the modules to the particle.\r\n        for (var _i = 0, _a = this.options.modules; _i < _a.length; _i++) {\r\n            var moduleFunction = _a[_i];\r\n            moduleFunction(particle);\r\n        }\r\n    };\r\n    /**\r\n     * Emits a particle using the registered settings.\r\n     * Also may despawn a particle if the maximum number of particles is exceeded.\r\n     */\r\n    Emitter.prototype.emitParticle = function () {\r\n        var particle = new particle_1.Particle({\r\n            location: this.emission.sourceSampler(),\r\n            lifetime: variation_1.evaluateVariation(this.emission.initialLifetime),\r\n            velocity: vector_1.Vector.from2dAngle(variation_1.evaluateVariation(this.emission.angle)).scale(variation_1.evaluateVariation(this.emission.initialSpeed)),\r\n            size: variation_1.evaluateVariation(this.emission.initialSize),\r\n            rotation: variation_1.evaluateVariation(this.emission.initialRotation),\r\n            color: variation_1.evaluateVariation(this.emission.initialColor),\r\n        });\r\n        this.particles.push(particle);\r\n        // Ensure that no more particles than 'maxParticles' can exist.\r\n        if (this.particles.length > this.options.maxParticles) {\r\n            this.particles.shift();\r\n        }\r\n        return particle;\r\n    };\r\n    return Emitter;\r\n}());\r\nexports.Emitter = Emitter;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.gradientSample = exports.splineSample = exports.skewRelative = exports.skew = exports.range = exports.evaluateVariation = void 0;\r\nvar random_1 = require(\"./random\");\r\n/**\r\n * Returns a value instance of a variation.\r\n */\r\nfunction evaluateVariation(variation) {\r\n    if (Array.isArray(variation))\r\n        return random_1.pick(variation);\r\n    if (typeof variation === \"function\")\r\n        return variation();\r\n    return variation;\r\n}\r\nexports.evaluateVariation = evaluateVariation;\r\n/**\r\n * Creates a variation function that returns a random number from min to max.\r\n */\r\nfunction range(min, max) {\r\n    return function () { return random_1.randomRange(min, max); };\r\n}\r\nexports.range = range;\r\n/**\r\n * Creates a variation function that skews the specified value by a specified, absolute\r\n * amount. This means that instead of the value itself, a random number that deviates\r\n * at most by the specified amount is returned.\r\n *\r\n * @remarks\r\n * If you want to skew by a percentage instead, use `skewRelative`.\r\n */\r\nfunction skew(value, amount) {\r\n    return function () { return value + random_1.randomRange(-amount, amount); };\r\n}\r\nexports.skew = skew;\r\n/**\r\n * Creates a variation function that skews the specified value by a specified percentage.\r\n * This means that instead of the value itself, a random number that deviates by a maximum\r\n * of the specified percentage is returned.\r\n */\r\nfunction skewRelative(value, percentage) {\r\n    return function () { return value * (1 + random_1.randomRange(-percentage, percentage)); };\r\n}\r\nexports.skewRelative = skewRelative;\r\n/**\r\n * Creates a variation function that returns a random sample from the given spline.\r\n *\r\n * @param spline The spline to sample from.\r\n */\r\nfunction splineSample(spline) {\r\n    return function () { return spline.evaluate(Math.random()); };\r\n}\r\nexports.splineSample = splineSample;\r\n/**\r\n * Creates a variation function that returns a random sample from the given gradient.\r\n *\r\n * @remarks\r\n * This function is an alias for the spline variation, since a gradient is just\r\n * a spline under the hood.\r\n *\r\n * @param gradient The gradient to sample from.\r\n */\r\nfunction gradientSample(gradient) {\r\n    return splineSample(gradient);\r\n}\r\nexports.gradientSample = gradientSample;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.randomInsideCircle = exports.randomInsideRect = exports.randomUnitVector = exports.pick = exports.randomRange = void 0;\r\nvar components_1 = require(\"../components\");\r\nvar math_1 = require(\"./math\");\r\n/**\r\n * Returns a random value from min to max.\r\n */\r\nfunction randomRange(min, max) {\r\n    if (min === void 0) { min = 0; }\r\n    if (max === void 0) { max = 1; }\r\n    return math_1.lerp(min, max, Math.random());\r\n}\r\nexports.randomRange = randomRange;\r\n/**\r\n * Picks a random element from the specified array. Returns undefined if the array is empty.\r\n */\r\nfunction pick(arr) {\r\n    return arr.length === 0\r\n        ? undefined\r\n        : arr[Math.floor(Math.random() * arr.length)];\r\n}\r\nexports.pick = pick;\r\n/**\r\n * Returns a random unit vector.\r\n */\r\nfunction randomUnitVector() {\r\n    var theta = randomRange(0, 2 * Math.PI);\r\n    var z = randomRange(-1, 1);\r\n    return new components_1.Vector(Math.sqrt(1 - z * z) * Math.cos(theta), Math.sqrt(1 - z * z) * Math.sin(theta), z);\r\n}\r\nexports.randomUnitVector = randomUnitVector;\r\n/**\r\n * Returns a random point inside the given rect.\r\n */\r\nfunction randomInsideRect(rect) {\r\n    return new components_1.Vector(rect.x + randomRange(0, rect.width), rect.y + randomRange(0, rect.height));\r\n}\r\nexports.randomInsideRect = randomInsideRect;\r\nfunction randomInsideCircle(circle) {\r\n    var theta = randomRange(0, 2 * Math.PI);\r\n    var radius = randomRange(0, circle.radius);\r\n    return new components_1.Vector(circle.x + Math.cos(theta) * radius, circle.y + Math.sin(theta) * radius);\r\n}\r\nexports.randomInsideCircle = randomInsideCircle;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./emitterOptions\"), exports);\r\n__exportStar(require(\"./emissionOptions\"), exports);\r\n__exportStar(require(\"./renderOptions\"), exports);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getDefaultEmitterOptions = void 0;\r\nvar rules_1 = require(\"../../util/rules\");\r\n/**\r\n * Returns the default set of emitter options.\r\n */\r\nfunction getDefaultEmitterOptions() {\r\n    return {\r\n        duration: 5,\r\n        loops: 1,\r\n        useGravity: true,\r\n        maxParticles: 300,\r\n        despawningRules: [rules_1.despawningRules.lifetime, rules_1.despawningRules.bounds],\r\n        modules: [],\r\n    };\r\n}\r\nexports.getDefaultEmitterOptions = getDefaultEmitterOptions;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getDefaultEmissionOptions = void 0;\r\nvar components_1 = require(\"../../components\");\r\nvar sources_1 = require(\"../../systems/sources\");\r\n/**\r\n * Returns the default set of emission options.\r\n */\r\nfunction getDefaultEmissionOptions() {\r\n    return {\r\n        rate: 10,\r\n        angle: 0,\r\n        bursts: [],\r\n        sourceSampler: sources_1.rectSource(components_1.Rect.zero),\r\n        initialLifetime: 5,\r\n        initialSpeed: 5,\r\n        initialSize: 1,\r\n        initialRotation: components_1.Vector.zero,\r\n        initialColor: components_1.Color.white,\r\n    };\r\n}\r\nexports.getDefaultEmissionOptions = getDefaultEmissionOptions;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.circleSource = exports.rectSource = exports.mouseSource = exports.elementSource = exports.dynamicSource = void 0;\r\nvar components_1 = require(\"../components\");\r\nvar random_1 = require(\"./random\");\r\n/**\r\n * Dynamically infers a source sampler for the specified source type.\r\n */\r\nfunction dynamicSource(source) {\r\n    if (source instanceof HTMLElement) {\r\n        return elementSource(source);\r\n    }\r\n    if (source instanceof components_1.Circle) {\r\n        return circleSource(source);\r\n    }\r\n    if (source instanceof components_1.Rect) {\r\n        return rectSource(source);\r\n    }\r\n    if (source instanceof MouseEvent) {\r\n        return mouseSource(source);\r\n    }\r\n    throw new Error(\"Cannot infer the source type of '\" + source + \"'.\");\r\n}\r\nexports.dynamicSource = dynamicSource;\r\n/**\r\n * Creates a sampler to retrieve random points inside a specified HTMLElement.\r\n */\r\nfunction elementSource(source) {\r\n    return function () { return random_1.randomInsideRect(components_1.Rect.fromElement(source)); };\r\n}\r\nexports.elementSource = elementSource;\r\n/**\r\n * Creates a sampler to retrieve the position of a mouse event.\r\n */\r\nfunction mouseSource(source) {\r\n    return function () {\r\n        return new components_1.Vector(window.scrollX + source.clientX, window.scrollY + source.clientY);\r\n    };\r\n}\r\nexports.mouseSource = mouseSource;\r\n/**\r\n * Creates a sampler to retrieve random points inside a specified rectangle.\r\n */\r\nfunction rectSource(source) {\r\n    return function () { return random_1.randomInsideRect(source); };\r\n}\r\nexports.rectSource = rectSource;\r\n/**\r\n * Creates a sampler to retrieve random points inside a specified circle.\r\n */\r\nfunction circleSource(source) {\r\n    return function () { return random_1.randomInsideCircle(source); };\r\n}\r\nexports.circleSource = circleSource;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getDefaultRendererOptions = void 0;\r\n/**\r\n * Returns the default set of renderer options.\r\n */\r\nfunction getDefaultRendererOptions() {\r\n    return {\r\n        shapeFactory: \"square\",\r\n        applyColor: defaultApplyColor,\r\n        applyOpacity: defaultApplyOpacity,\r\n        applyLighting: defaultApplyLighting,\r\n        applyTransform: defaultApplyTransform,\r\n    };\r\n}\r\nexports.getDefaultRendererOptions = getDefaultRendererOptions;\r\n/**\r\n * Applies the specified color to the element.\r\n *\r\n * @remarks\r\n * This function is aware of the element's node type:\r\n * - `div` elements have their `background` set.\r\n * - `svg` elements have their `fill` and `color` set.\r\n * - Other elements have their `color` set.\r\n */\r\nfunction defaultApplyColor(color, element) {\r\n    var hex = color.toHex();\r\n    // Note that by default, HTML node names are uppercase.\r\n    switch (element.nodeName.toLowerCase()) {\r\n        case \"div\":\r\n            element.style.background = hex;\r\n            break;\r\n        case \"svg\":\r\n            element.style.fill = element.style.color = hex;\r\n            break;\r\n        default:\r\n            element.style.color = hex;\r\n            break;\r\n    }\r\n}\r\n/**\r\n * Applies the specified opacity to the element.\r\n */\r\nfunction defaultApplyOpacity(opacity, element) {\r\n    element.style.opacity = opacity.toString();\r\n}\r\n/**\r\n * Applies the specified lighting to the element as a brightness filter.\r\n *\r\n * @remarks\r\n * This function assumes an ambient light with intensity 0.5, and that the\r\n * particle should be lit from both sides. The brightness filter can exceed 1,\r\n * to give the particles a \"glossy\" feel.\r\n */\r\nfunction defaultApplyLighting(lighting, element) {\r\n    element.style.filter = \"brightness(\" + (0.5 + Math.abs(lighting)) + \")\";\r\n}\r\n/**\r\n * Applies the specified transform to the element as a 3D CSS transform.\r\n * Also takes into account the current window scroll, to make sure that particles are\r\n * rendered inside of the fixed container.\r\n */\r\nfunction defaultApplyTransform(particle, element) {\r\n    element.style.transform =\r\n        // Make sure to take window scrolling into account.\r\n        \"translateX(\" + (particle.location.x - window.scrollX).toFixed(3) + \"px) \" +\r\n            (\"translateY(\" + (particle.location.y - window.scrollY).toFixed(3) + \"px) \") +\r\n            (\"translateZ(\" + particle.location.z.toFixed(3) + \"px) \") +\r\n            (\"rotateX(\" + particle.rotation.x.toFixed(3) + \"deg) \") +\r\n            (\"rotateY(\" + particle.rotation.y.toFixed(3) + \"deg) \") +\r\n            (\"rotateZ(\" + particle.rotation.z.toFixed(3) + \"deg) \") +\r\n            (\"scale(\" + particle.size.toFixed(3) + \")\");\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Particle = void 0;\r\nvar components_1 = require(\"../components\");\r\nvar config_1 = require(\"../util/config\");\r\n/**\r\n * Represents an emitted particle.\r\n */\r\nvar Particle = /** @class */ (function () {\r\n    /**\r\n     * Creates a new particle instance through the specified options.\r\n     */\r\n    function Particle(options) {\r\n        var populatedOptions = config_1.overrideDefaults({\r\n            lifetime: 0,\r\n            size: 1,\r\n            location: components_1.Vector.zero,\r\n            rotation: components_1.Vector.zero,\r\n            velocity: components_1.Vector.zero,\r\n            color: components_1.Color.white,\r\n            opacity: 1,\r\n        }, options);\r\n        // Generate a symbolic ID.\r\n        this.id = Symbol();\r\n        // Assign various properties, together with some initials for later reference.\r\n        this.size = this.initialSize = populatedOptions.size;\r\n        this.lifetime = this.initialLifetime = populatedOptions.lifetime;\r\n        this.rotation = this.initialRotation = populatedOptions.rotation;\r\n        this.location = populatedOptions.location;\r\n        this.velocity = populatedOptions.velocity;\r\n        this.color = populatedOptions.color;\r\n        this.opacity = populatedOptions.opacity;\r\n    }\r\n    return Particle;\r\n}());\r\nexports.Particle = Particle;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Renderer = void 0;\r\nvar __1 = require(\"..\");\r\nvar vector_1 = require(\"../components/vector\");\r\nvar containers_1 = require(\"../containers\");\r\nvar shapes_1 = require(\"../systems/shapes\");\r\nvar util_1 = require(\"../util\");\r\n/**\r\n * Represents a renderer used to draw particles to the DOM via HTML\r\n * elements. Additionally, it is responsible for purging the elements\r\n * of destroyed particles from the DOM.\r\n */\r\nvar Renderer = /** @class */ (function () {\r\n    function Renderer() {\r\n        /**\r\n         * The lookup of elements currently handled by the renderer, with the\r\n         * particle ID as key and a HTMLElement as the value.\r\n         */\r\n        this.elements = new Map();\r\n        /**\r\n         * The normalized direction the light comes from.\r\n         */\r\n        this.light = new vector_1.Vector(0, 0, 1);\r\n        /**\r\n         * Whether or not the renderer should actually draw particles.\r\n         */\r\n        this.enabled = true;\r\n        // Respect that users might prefer reduced motion.\r\n        // See: https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion\r\n        this.enabled =\r\n            !__1.settings.respectReducedMotion ||\r\n                !window.matchMedia(\"(prefers-reduced-motion)\").matches;\r\n    }\r\n    /**\r\n     * Begins a new render block. During the rendering phase, a list of rendered particles\r\n     * is tracked, so that stale particles can be removed later.\r\n     */\r\n    Renderer.prototype.begin = function () {\r\n        this.renderedParticles = [];\r\n    };\r\n    /**\r\n     * Terminates an existing render block. This checks which particles were rendered\r\n     * during the block and purges all unused HTMLElements from the DOM.\r\n     *\r\n     * @returns The amount of particles that were rendered.\r\n     */\r\n    Renderer.prototype.end = function () {\r\n        var it = this.elements.keys();\r\n        var result = it.next();\r\n        while (!result.done) {\r\n            var id = result.value;\r\n            if (!this.renderedParticles.includes(id)) {\r\n                this.elements.get(id).remove();\r\n                this.elements.delete(id);\r\n            }\r\n            result = it.next();\r\n        }\r\n        return this.renderedParticles.length;\r\n    };\r\n    /**\r\n     * Renders an individual particle to the DOM. If the particle is rendered for the first\r\n     * time, a HTMLElement will be created using the emitter's render settings.\r\n     *\r\n     * @param particle The particle to be rendered.\r\n     * @param emitter The system containing the particle.\r\n     */\r\n    Renderer.prototype.renderParticle = function (particle, emitter) {\r\n        if (!this.enabled)\r\n            return;\r\n        var options = emitter.renderer;\r\n        // Ensure that an element for the particle exists.\r\n        var element = this.elements.has(particle.id)\r\n            ? this.elements.get(particle.id)\r\n            : this.createParticleElement(particle, options);\r\n        if (options.applyColor) {\r\n            // If the options offer a coloring method, apply it.\r\n            options.applyColor(particle.color, element);\r\n        }\r\n        if (options.applyOpacity) {\r\n            // If the options offer an opacity modifying method, apply it.\r\n            options.applyOpacity(particle.opacity, element);\r\n        }\r\n        if (options.applyLighting) {\r\n            // If the options offer a lighting method, apply it.\r\n            // Lighting is calculated as a combination of the particle's normal\r\n            // direction and the lighting direction.\r\n            var normal = util_1.rotationToNormal(particle.rotation);\r\n            var lightingCoefficient = normal.dot(this.light);\r\n            options.applyLighting(lightingCoefficient, element);\r\n        }\r\n        if (options.applyTransform) {\r\n            // If the options offer a transformation method, apply it.\r\n            // This ensures the particle is rendered at the correct position with the correct rotation.\r\n            options.applyTransform(particle, element);\r\n        }\r\n        // Mark the particle as rendered.\r\n        this.renderedParticles.push(particle.id);\r\n    };\r\n    /**\r\n     * Creates the HTMLElement for a particle that does not have one already.\r\n     */\r\n    Renderer.prototype.createParticleElement = function (particle, options) {\r\n        // Resolve the element returned from the factory.\r\n        var resolved = shapes_1.resolveShapeFactory(options.shapeFactory);\r\n        // Clone the node to ensure we do not break existing elements.\r\n        var element = resolved.cloneNode(true);\r\n        // Ensure that the elements can be \"stacked\" ontop of eachother.\r\n        element.style.position = \"absolute\";\r\n        // Register the new element in the map, while appending the new element to the DOM.\r\n        this.elements.set(particle.id, containers_1.particleContainer.current.appendChild(element));\r\n        return element;\r\n    };\r\n    return Renderer;\r\n}());\r\nexports.Renderer = Renderer;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.resolveShapeFactory = exports.resolvableShapes = void 0;\r\nvar variation_1 = require(\"./variation\");\r\n/**\r\n * Represents the lookup that maps resolveable element keys to their HTML strings.\r\n *\r\n * @remarks\r\n * The default shapes are made to fit inside a dimension of 10x10 pixels, except\r\n * the 'star' shape, which exceeds it slightly.\r\n */\r\nexports.resolvableShapes = {\r\n    square: \"<div style=\\\"height: 10px; width: 10px;\\\"></div>\",\r\n    rectangle: \"<div style=\\\"height: 6px; width: 10px;\\\"></div>\",\r\n    circle: \"<svg viewBox=\\\"0 0 2 2\\\" width=\\\"10\\\" height=\\\"10\\\"><circle cx=\\\"1\\\" cy=\\\"1\\\" r=\\\"1\\\" fill=\\\"currentColor\\\"/></svg>\",\r\n    roundedSquare: \"<div style=\\\"height: 10px; width: 10px; border-radius: 3px;\\\"></div>\",\r\n    roundedRectangle: \"<div style=\\\"height: 6px; width: 10px; border-radius: 3px;\\\"></div>\",\r\n    star: \"<svg viewBox=\\\"0 0 512 512\\\" width=\\\"15\\\" height=\\\"15\\\"><polygon fill=\\\"currentColor\\\" points=\\\"512,197.816 325.961,185.585 255.898,9.569 185.835,185.585 0,197.816 142.534,318.842 95.762,502.431 255.898,401.21 416.035,502.431 369.263,318.842\\\"/></svg>\",\r\n};\r\n/**\r\n * Resolves the specified element factory using the resolvable elements, if needed.\r\n */\r\nfunction resolveShapeFactory(factory) {\r\n    // Retrieve the unresolved element from the factory.\r\n    var shape = variation_1.evaluateVariation(factory);\r\n    // If a string is returned, we need to resolve the element. This means\r\n    // looking up the string in the resolver lookup. If the key was not\r\n    // resolvable, we throw an error.\r\n    if (typeof shape === \"string\") {\r\n        var resolved = exports.resolvableShapes[shape];\r\n        if (!resolved) {\r\n            throw new Error(\"Failed to resolve shape key '\" + shape + \"'. Did you forget to add it to the 'resolvableShapes' lookup?\");\r\n        }\r\n        // We're in luck, we can resolve the element! We create a dummy <div> element\r\n        // to set the innerHTML of, and return the first element child.\r\n        var dummy = document.createElement(\"div\");\r\n        dummy.innerHTML = resolved;\r\n        return dummy.firstElementChild;\r\n    }\r\n    return shape;\r\n}\r\nexports.resolveShapeFactory = resolveShapeFactory;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./confetti\"), exports);\r\n__exportStar(require(\"./sparkles\"), exports);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.confetti = void 0;\r\nvar __1 = require(\"../\");\r\nvar components_1 = require(\"../components\");\r\nvar modules_1 = require(\"../systems/modules\");\r\nvar random = require(\"../systems/random\");\r\nvar sources = require(\"../systems/sources\");\r\nvar variation = require(\"../systems/variation\");\r\nvar util = require(\"../util\");\r\n/**\r\n * The standard confetti template.\r\n *\r\n * @param source The source to emit the confetti from.\r\n * @param options The (optional) configuration overrides.\r\n */\r\nfunction confetti(source, options) {\r\n    var populated = util.overrideDefaults({\r\n        count: variation.range(20, 40),\r\n        spread: variation.range(35, 45),\r\n        speed: variation.range(300, 600),\r\n        size: variation.skew(1, 0.2),\r\n        rotation: function () { return random.randomUnitVector().scale(180); },\r\n        color: function () { return components_1.Color.fromHsl(random.randomRange(0, 360), 100, 70); },\r\n        modules: [\r\n            new modules_1.ModuleBuilder()\r\n                .drive(\"size\")\r\n                .by(function (t) { return Math.min(1, t * 3); })\r\n                .relative()\r\n                .build(),\r\n            new modules_1.ModuleBuilder()\r\n                .drive(\"rotation\")\r\n                .by(function (t) { return new components_1.Vector(140, 200, 260).scale(t); })\r\n                .relative()\r\n                .build(),\r\n        ],\r\n        shapes: [\"square\", \"circle\"],\r\n    }, options);\r\n    var emitter = __1.scene.current.createEmitter({\r\n        emitterOptions: {\r\n            loops: 1,\r\n            duration: 8,\r\n            modules: populated.modules,\r\n        },\r\n        emissionOptions: {\r\n            rate: 0,\r\n            bursts: [{ time: 0, count: populated.count }],\r\n            sourceSampler: sources.dynamicSource(source),\r\n            angle: variation.skew(-90, variation.evaluateVariation(populated.spread)),\r\n            initialLifetime: 8,\r\n            initialSpeed: populated.speed,\r\n            initialSize: populated.size,\r\n            initialRotation: populated.rotation,\r\n            initialColor: populated.color,\r\n        },\r\n        rendererOptions: {\r\n            shapeFactory: populated.shapes,\r\n        },\r\n    });\r\n    return emitter;\r\n}\r\nexports.confetti = confetti;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ModuleBuilder = void 0;\r\nvar components_1 = require(\"../components\");\r\n/**\r\n * Represents a builder for particle modules. Returns an evaluatable module\r\n * function, that can be consumed by emitters.\r\n *\r\n * @remarks\r\n * Not all properties can be driven. TypeScript will validate this at compile time,\r\n * but no internal validation is performed due to performance reasons. Also, note\r\n * that the driving factor is \"lifetime\" by default.\r\n *\r\n * @example\r\n * ```ts\r\n * new ModuleBuilder()\r\n *     .drive(\"size\")\r\n *     .by((t) => t * 2)\r\n *     .through(\"lifetime\")\r\n *     .build();\r\n * ```\r\n */\r\nvar ModuleBuilder = /** @class */ (function () {\r\n    function ModuleBuilder() {\r\n        /**\r\n         * The factor driving the built function.\r\n         *\r\n         * @defaultValue \"lifetime\"\r\n         */\r\n        this.factor = \"lifetime\";\r\n        this.isRelative = false;\r\n    }\r\n    /**\r\n     * Specifies the key in the particle that should be driven.\r\n     *\r\n     * @remarks\r\n     * Note that not all of a particle's properties are drivable through modules. If you\r\n     * need full control of a particle inside of a module, you can use a module function directly.\r\n     *\r\n     * @returns The chained builder instance.\r\n     */\r\n    ModuleBuilder.prototype.drive = function (key) {\r\n        this.driverKey = key;\r\n        return this;\r\n    };\r\n    /**\r\n     * Specifies the factor to drive the evaluated value by. Supports \"lifetime\" and \"size\".\r\n     *\r\n     * @returns The chained builder instance.\r\n     */\r\n    ModuleBuilder.prototype.through = function (factor) {\r\n        this.factor = factor;\r\n        return this;\r\n    };\r\n    /**\r\n     * Specifies the value to drive the module behaviour by. This can be a constant,\r\n     * a spline or an evaluable function. Note that in the last case, the driving\r\n     * factor is passed as a parameter.\r\n     *\r\n     * @returns The chained builder instance.\r\n     */\r\n    ModuleBuilder.prototype.by = function (driver) {\r\n        this.driverValue = driver;\r\n        return this;\r\n    };\r\n    /**\r\n     * Specifies that the module function is supposed to act relative to the\r\n     * properties initial value.\r\n     *\r\n     * @remarks\r\n     * Note that this is only possible if an \"initial*\" property exists on the\r\n     * particle object. The operation applied to the initial and new value\r\n     * is dependant on their type:\r\n     * - `Vector`: Both vectors are added.\r\n     * - `number`: Both numbers are multiplied.\r\n     *\r\n     * For more advanced relative customizations, consider using the particle\r\n     * object in the driver value function instead, like:\r\n     * ```ts\r\n     * .by((t, p) => p.initialSize + t * 2);\r\n     * ```\r\n     */\r\n    ModuleBuilder.prototype.relative = function (isRelative) {\r\n        if (isRelative === void 0) { isRelative = true; }\r\n        this.isRelative = isRelative;\r\n        return this;\r\n    };\r\n    /**\r\n     * Consumes the builder and returns an evaluatable module function.\r\n     *\r\n     * @remarks\r\n     * Note that you need to specify the driving key and value, otherwise an error\r\n     * will be thrown.\r\n     */\r\n    ModuleBuilder.prototype.build = function () {\r\n        var _this = this;\r\n        if (typeof this.driverKey === \"undefined\") {\r\n            throw new Error(\"No driving key was provided in the module builder. Did you forget a '.drive()' call?\");\r\n        }\r\n        if (typeof this.driverValue === \"undefined\") {\r\n            throw new Error(\"No driving value was provided in the module builder. Did you forget a '.through()' call?\");\r\n        }\r\n        return function (particle) {\r\n            updateDrivenProperty(particle, _this.driverKey, evaluateModuleDriver(_this.driverValue, calculateModuleFactor(_this.factor, particle), particle), _this.isRelative);\r\n        };\r\n    };\r\n    return ModuleBuilder;\r\n}());\r\nexports.ModuleBuilder = ModuleBuilder;\r\n/**\r\n * Evaluates the module driver using a specified factor.\r\n */\r\nfunction evaluateModuleDriver(driver, factor, particle) {\r\n    if (typeof driver === \"object\" && \"evaluate\" in driver) {\r\n        return driver.evaluate(factor);\r\n    }\r\n    if (typeof driver === \"function\") {\r\n        return driver(factor, particle);\r\n    }\r\n    return driver;\r\n}\r\n/**\r\n * Calculates a module factor using a specified particle as context.\r\n */\r\nfunction calculateModuleFactor(factor, particle) {\r\n    switch (factor) {\r\n        case \"lifetime\":\r\n            return particle.initialLifetime - particle.lifetime;\r\n        case \"relativeLifetime\":\r\n            return ((particle.initialLifetime - particle.lifetime) /\r\n                particle.initialLifetime);\r\n        case \"size\":\r\n            return particle.size;\r\n        default:\r\n            throw new Error(\"Invalid driving factor '\" + factor + \"'.\");\r\n    }\r\n}\r\n/**\r\n * Updates a driven property of a particle using the specified value.\r\n *\r\n * @remarks\r\n * If the operation is marked as relative, the function infers the new value\r\n * through the value's type. Note that relative properties must have a\r\n * corresponding \"initial*\" value in the particle's properties.\r\n */\r\nfunction updateDrivenProperty(particle, key, value, relative) {\r\n    if (relative === void 0) { relative = false; }\r\n    if (!relative) {\r\n        particle[key] = value;\r\n    }\r\n    else {\r\n        var initial = particle[\"initial\" + key[0].toUpperCase() + key.substr(1)];\r\n        if (typeof initial === \"undefined\") {\r\n            throw new Error(\"Unable to use relative chaining with key '\" + key + \"'; no initial value exists.\");\r\n        }\r\n        if (value instanceof components_1.Vector) {\r\n            updateDrivenProperty(particle, key, initial.add(value));\r\n        }\r\n        else if (typeof value === \"number\") {\r\n            updateDrivenProperty(particle, key, initial * value);\r\n        }\r\n        else {\r\n            throw new Error(\"Unable to use relative chaining with particle key '\" + key + \"'; no relative operation for '\" + value + \"' could be inferred.\");\r\n        }\r\n    }\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.sparkles = void 0;\r\nvar __1 = require(\"..\");\r\nvar components_1 = require(\"../components\");\r\nvar modules_1 = require(\"../systems/modules\");\r\nvar random = require(\"../systems/random\");\r\nvar sources = require(\"../systems/sources\");\r\nvar variation = require(\"../systems/variation\");\r\nvar util = require(\"../util\");\r\n/**\r\n * The standard sparkles template.\r\n *\r\n * @param source The source to emit the sparkles from.\r\n * @param options The (optional) configuration overrides.\r\n */\r\nfunction sparkles(source, options) {\r\n    var populated = util.overrideDefaults({\r\n        lifetime: variation.range(1, 2),\r\n        count: variation.range(10, 20),\r\n        speed: variation.range(100, 200),\r\n        size: variation.range(0.8, 1.8),\r\n        rotation: function () { return new components_1.Vector(0, 0, random.randomRange(0, 360)); },\r\n        color: function () { return components_1.Color.fromHsl(50, 100, random.randomRange(55, 85)); },\r\n        modules: [\r\n            new modules_1.ModuleBuilder()\r\n                .drive(\"rotation\")\r\n                .by(function (t) { return new components_1.Vector(0, 0, 200).scale(t); })\r\n                .relative()\r\n                .build(),\r\n            new modules_1.ModuleBuilder()\r\n                .drive(\"size\")\r\n                .by(new components_1.NumericSpline({ time: 0, value: 0 }, { time: 0.3, value: 1 }, { time: 0.7, value: 1 }, { time: 1, value: 0 }))\r\n                .through(\"relativeLifetime\")\r\n                .relative()\r\n                .build(),\r\n            new modules_1.ModuleBuilder()\r\n                .drive(\"opacity\")\r\n                .by(new components_1.NumericSpline({ time: 0, value: 1 }, { time: 0.5, value: 1 }, { time: 1, value: 0 }))\r\n                .through(\"relativeLifetime\")\r\n                .build(),\r\n        ],\r\n        shapes: \"star\",\r\n    }, options);\r\n    var emitter = __1.scene.current.createEmitter({\r\n        emitterOptions: {\r\n            loops: 1,\r\n            duration: 3,\r\n            useGravity: false,\r\n            modules: populated.modules,\r\n        },\r\n        emissionOptions: {\r\n            rate: 0,\r\n            bursts: [{ time: 0, count: populated.count }],\r\n            sourceSampler: sources.dynamicSource(source),\r\n            angle: variation.range(0, 360),\r\n            initialLifetime: populated.lifetime,\r\n            initialSpeed: populated.speed,\r\n            initialSize: populated.size,\r\n            initialRotation: populated.rotation,\r\n            initialColor: populated.color,\r\n        },\r\n        rendererOptions: {\r\n            applyLighting: undefined,\r\n            shapeFactory: populated.shapes,\r\n        },\r\n    });\r\n    return emitter;\r\n}\r\nexports.sparkles = sparkles;\r\n","export interface Square {\n    owner: string | null,\n    linesOwners : {\n        top: string | null,\n        left: string | null,\n        right: string | null,\n        bottom: string | null\n    }\n}\n\nexport class Board {\n    board: Array<Array<Square>>\n    height: number\n    width: number\n\n    constructor(width: number, height: number) {\n        this.board = []\n        this.height = height\n        this.width = width\n        for (let i = 0; i < height; i++) {\n            let line: Array<Square> = []\n            for (let j = 0; j < width; j++) {\n                line.push({\n                    owner: null,\n                    linesOwners : {\n                        top: null,\n                        left: null,\n                        right: null,\n                        bottom: null\n                    }\n                })\n            }\n            this.board.push(line)\n        }\n    }\n\n    setSquareOwner(x: number, y: number, name: string) {\n        this.board[y][x].owner = name\n    }\n\n    setLineOwner(x: number, y: number, direction: string, name: string) {\n        switch (direction) {\n            case \"right\":\n                this.board[y][x].linesOwners.right = name\n                if (x < this.width - 1) this.board[y][x+1].linesOwners.left = name\n                break\n            case \"left\":\n                this.board[y][x].linesOwners.left = name\n                if (x > 0) this.board[y][x-1].linesOwners.right = name\n                break\n            case \"top\":\n                this.board[y][x].linesOwners.top = name\n                if (y > 0) this.board[y-1][x].linesOwners.bottom = name\n                break\n            case \"bottom\":\n                this.board[y][x].linesOwners.bottom = name\n                if (y < this.height - 1) this.board[y+1][x].linesOwners.top = name\n                break\n        }\n    }\n\n    printBoard() {\n        let str = \"\"\n        for (let i = 0; i < this.height; i++) {\n            for (let j = 0; j < this.width; j++) {\n                if (j == 0) {\n                    str += \"□ \"\n                } else {\n                    str += \" □ \"\n                }\n            }\n            str += \"\\n\"\n        }\n        console.log(str)\n    }\n}","import party from \"party-js\"\n\nexport default class UI_End extends HTMLElement {\n\n    connectedCallback() {\n        const replayButton: HTMLButtonElement | null = document.querySelector(\".replay-button\")\n        replayButton!.addEventListener(\"click\", () => {\n            this.replay()\n        })\n        party.confetti(replayButton!, {\n            count: party.variation.range(20, 40),\n        });\n    }\n\n    constructor() {\n        super()\n\n        const overlay = document.createElement(\"div\")\n        overlay.classList.add(\"overlay\")\n\n        // Tailwind\n        overlay.classList.add(\n            \"absolute\",\n            \"top-0\",\n            \"left-0\",\n            \"flex\",\n            \"h-screen\",\n            \"w-screen\",\n            \"bg-black\",\n            \"bg-opacity-50\",\n            \"backdrop-blur-lg\",\n            \"z-0\"\n        )\n\n        const container = document.createElement(\"div\")\n        container.classList.add(\"form-container\")\n\n        // Tailwind\n        container.classList.add(\n            \"container\",\n            \"relative\",\n            \"flex\",\n            \"flex-col\",\n            \"justify-center\",\n            \"items-center\",\n            \"m-auto\",\n            \"w-full\",\n            \"sm:w-1/4\",\n            \"h-fit\",\n            \"sm:h-fit\",\n            \"p-5\",\n            \"bg-white\",\n            \"shadow-sm\",\n            \"rounded-md\"\n        )\n\n        const endText = document.createElement(\"h1\")\n        endText.classList.add(\"end-text\")\n\n        const replayButton = document.createElement(\"button\")\n        replayButton.classList.add(\"replay-button\")\n        replayButton.appendChild(document.createTextNode(\"Rejouer\"))\n\n         // Tailwind\n         replayButton.classList.add(\n            \"h-10\",\n            \"w-2/4\",\n            \"mt-5\",\n            \"bg-blue-600\",\n            \"text-white\",\n            \"rounded-md\",\n            \"hover:bg-blue-700\",\n            \"active:bg-blue-800\",\n            \"shadow-md\",\n            \"hover:shadow-lg\"\n        )\n\n        container.appendChild(endText)\n        container.appendChild(replayButton)\n\n        overlay.appendChild(container)\n        this.appendChild(overlay)\n    }\n\n    setWinner(name: string | null) {\n        const endText = document.querySelector(\".end-text\")\n        if (name == null) {\n            endText!.appendChild(document.createTextNode(\"Égalité\"))\n        } else {\n            endText!.appendChild(document.createTextNode(\"Victoire de \" + name))\n        }\n    }\n\n    replay() {\n        window.location.reload()\n    }\n\n}","import {Game} from \"../Game\"\nimport UI_Infos from \"./UI_Infos\"\nimport UI_End from \"./UI_End\"\n\nexport default class UI_Board extends HTMLElement {\n    game: Game\n\n    get board_height() {\n        if (this.hasAttribute(\"board-height\")) {\n            return parseInt(this.getAttribute(\"board-height\")!)\n        } else {\n            return 10;\n        }\n    }\n\n    get board_width() {\n        if (this.hasAttribute(\"board-width\")) {\n            return parseInt(this.getAttribute(\"board-width\")!)\n        } else {\n            return 10;\n        }\n    }\n\n    connectedCallback() {\n        const boxes = document.getElementsByTagName(\"td\") \n        for (let i = 0; i < boxes.length; i++) {\n            [\"left\", \"right\", \"top\", \"bottom\"].forEach(dir => {\n                const hitbox = boxes[i].querySelector(\".hitbox-\" + dir) \n                hitbox!.addEventListener(\"mouseenter\", () => {\n                    this.interractLine(Array.from(boxes[i].parentNode!.children).indexOf(boxes[i]), Array.from(boxes[i].parentNode!.parentNode!.children).indexOf(boxes[i].parentElement!), dir, \"select\", this.game.players[this.game.currentPlayer].color)\n                })\n                hitbox!.addEventListener(\"mouseleave\", () => {\n                    this.interractLine(Array.from(boxes[i].parentNode!.children).indexOf(boxes[i]), Array.from(boxes[i].parentNode!.parentNode!.children).indexOf(boxes[i].parentElement!), dir, \"reset\")\n                })\n                hitbox!.addEventListener(\"click\", () => {\n                    const x = Array.from(boxes[i].parentNode!.children).indexOf(boxes[i])\n                    const y = Array.from(boxes[i].parentNode!.parentNode!.children).indexOf(boxes[i].parentElement!)\n                    const currentPlayer = this.game.players[this.game.currentPlayer]\n                    this.interractLine(x, y, dir, \"click\", currentPlayer.color)\n                    const xy = this.game.playTurn(x, y, dir)\n                    \n                    const infos: UI_Infos | null = document.querySelector(\"game-infos\")\n                    infos!.updateScore()\n                    if (xy != []) {\n                        for (let k = 0; k < xy.length; k++) {\n                            this.setBgColor(xy[k][0], xy[k][1], currentPlayer.color)\n                        }\n                    }\n\n                    if (this.game.isGameFinished()) {\n                        const endScreen = document.createElement(\"end-screen\")\n                        document.querySelector(\".app\")!.appendChild(endScreen)\n                        customElements.define(\"end-screen\", UI_End)\n                        UI_End.prototype.setWinner(this.game.getWinner())\n                    }\n                    \n                })\n            })\n        }\n    }\n\n    constructor() {\n        super()\n\n        const body = document.createElement(\"tbody\")\n        for (let i = 0; i < this.board_height; i++) {\n            const line = document.createElement(\"tr\");\n            for (let j = 0; j < this.board_width; j++) {\n\n                // Create dot elements\n                const dot_top_right = document.createElement(\"span\")\n                dot_top_right.className = \"dot dot-top-right\"\n                const dot_top_left = document.createElement(\"span\")\n                dot_top_left.className = \" dot dot-top-left\"\n                const dot_bottom_right = document.createElement(\"span\")\n                dot_bottom_right.className = \"dot dot-bottom-right\"\n                const dot_bottom_left = document.createElement(\"span\")\n                dot_bottom_left.className = \"dot dot-bottom-left\"\n                \n                const square = document.createElement(\"td\")\n                square.className = \"square\"\n\n                // Append dot elements\n                square.appendChild(dot_top_left)\n                if (j == this.board_width - 1) {\n                    square.appendChild(dot_top_right)\n                }\n                if (i == this.board_height - 1) {\n                    square.appendChild(dot_bottom_left)\n                }\n                if ((i == this.board_height - 1) && (j == this.board_width - 1)) {\n                    square.appendChild(dot_bottom_right)\n                }\n\n                [\"left\", \"right\", \"top\", \"bottom\"].forEach(dir => {\n                    const hitbox = document.createElement(\"span\")\n                    hitbox.className = \"hitbox hitbox-\" + dir\n                    square.appendChild(hitbox)\n                })\n\n                line.appendChild(square)\n            }\n            body.appendChild(line)\n        }\n        const table = document.createElement(\"table\")\n        table.appendChild(body)\n        this.appendChild(table)\n    }\n\n    interractLine(x: number, y: number, direction: string, interractionType: string = \"select\", color: string = \"none\") {\n        const typeString = interractionType == \"select\" ? \"selected\" : \"clicked\"\n        const table: HTMLTableElement = this.getElementsByTagName(\"table\")[0]\n        const box = table.rows[y].cells[x]\n\n        if (interractionType == \"click\" && box.className.includes(\"selected-\" + direction)) {\n            box.classList.remove(\"selected-\" + direction)\n        }\n\n        if (!box.className.includes(\"clicked-\" + direction)) {\n            switch (direction) {\n                case \"right\":\n                    if ((x < this.board_width-1)) {\n                        const neighborBox = table.rows[y].cells[x+1]\n\n                        if (interractionType == \"click\" && neighborBox.className.includes(\"selected-left\")) {\n                            neighborBox.classList.remove(\"selected-left\")\n                        }\n\n                        interractionType == \"reset\" ? [\"selected\"].forEach(c => neighborBox.classList.remove(c + \"-left\")) :\n                        neighborBox.classList.add(typeString + \"-left\") \n\n                        if (interractionType == \"click\") {\n                            neighborBox.classList.add(color + \"-left\")\n                        }\n                    }\n                    interractionType == \"reset\" ? [\"selected\"].forEach(c => box.classList.remove(c + \"-right\")) :\n                    box.classList.add(typeString + \"-right\")\n                    break\n                case \"left\":\n                    if ((x > 0)) {\n                        const neighborBox = table.rows[y].cells[x-1]\n\n                        if (interractionType == \"click\" && neighborBox.className.includes(\"selected-right\")) {\n                            neighborBox.classList.remove(\"selected-right\")\n                        }\n\n                        interractionType == \"reset\" ? [\"selected\"].forEach(c => neighborBox.classList.remove(c + \"-right\")) :\n                        neighborBox.classList.add(typeString + \"-right\")\n\n                        if (interractionType == \"click\") {\n                            neighborBox.classList.add(color + \"-right\")\n                        }\n                    }\n                    interractionType == \"reset\" ? [\"selected\"].forEach(c => box.classList.remove(c + \"-left\")) :\n                    box.classList.add(typeString + \"-left\")\n                    break\n                case \"top\":\n                    if ((y > 0)) {\n                        const neighborBox = table.rows[y-1].cells[x]\n\n                        if (interractionType == \"click\" && neighborBox.className.includes(\"selected-bottom\")) {\n                            neighborBox.classList.remove(\"selected-bottom\")\n                        }\n\n                        interractionType == \"reset\" ? [\"selected\"].forEach(c => neighborBox.classList.remove(c + \"-bottom\")) :\n                        neighborBox.classList.add(typeString + \"-bottom\")\n\n                        if (interractionType == \"click\") {\n                            neighborBox.classList.add(color + \"-bottom\")\n                        }\n                    }\n                    interractionType == \"reset\" ? [\"selected\"].forEach(c => box.classList.remove(c + \"-top\")) :\n                    box.classList.add(typeString + \"-top\")\n                    break\n                case \"bottom\":\n                    if ((y < this.board_height-1)) {\n                        const neighborBox = table.rows[y+1].cells[x]\n\n                        if (interractionType == \"click\" && neighborBox.className.includes(\"selected-\")) {\n                            neighborBox.classList.remove(\"selected-top\")\n                        }\n\n                        interractionType == \"reset\" ? [\"selected\"].forEach(c => neighborBox.classList.remove(c + \"-top\")) :\n                        neighborBox.classList.add(typeString + \"-top\")\n\n                        if (interractionType == \"click\") {\n                            neighborBox.classList.add(color + \"-top\")\n                        }\n                    }\n                    interractionType == \"reset\" ? [\"selected\"].forEach(c => box.classList.remove(c + \"-bottom\")) :\n                    box.classList.add(typeString + \"-bottom\")\n                    break\n            }\n            if (interractionType == \"click\") {\n                box.classList.add(color + \"-\" + direction)\n            }\n        }\n    }\n\n    setBgColor(x: number, y: number, color: string) {\n        const table: HTMLTableElement = this.getElementsByTagName(\"table\")[0]\n        const box = table.rows[y].cells[x]\n        box.classList.add(\"background-\" + color)\n    }\n}\n\n","import { Board, Square } from \"./Board\";\n\nexport interface Player {\n    name: string,\n    score: number,\n    color: string\n}\n\nexport class Game {\n    board: Board\n    players: Array<Player>\n    currentPlayer: number\n\n    constructor(board: Board, ...players: string[]) {\n        this.board = board;\n        const colors = [\"blue\", \"red\"]\n        this.players = []\n        let i = 0\n        players.map(playerName => {\n            this.players.push({name: playerName, score: 0, color: colors[i]})\n            i++\n        })\n        this.currentPlayer = 0\n    }\n\n    isLinePlayed(x: number, y: number, direction: string) {\n        return this.board.board[y][x].linesOwners[direction] != null\n    }\n\n    playLine(x: number, y: number, direction: string, name: string) {\n        this.board.setLineOwner(x,y,direction,name)\n    }\n\n    nextPlayer() {\n        this.currentPlayer != this.players.length - 1 ? this.currentPlayer++ : this.currentPlayer = 0\n    }\n\n    isSquareFull(square: Square): boolean {\n        return ((square.linesOwners.left != null) &&\n        (square.linesOwners.top != null) &&\n        (square.linesOwners.right != null) &&\n        (square.linesOwners.bottom != null))\n    }\n\n    isGameFinished() {\n        const boxesCount = this.board.width * this.board.height\n        let filledBoxesCount = 0\n        for (let y = 0; y < this.board.height; y++) {\n            for (let x = 0; x < this.board.width; x++) {\n                if (this.board.board[y][x].owner != null) {\n                    filledBoxesCount++\n                } else {\n                    return false\n                }\n            }\n        }\n        return filledBoxesCount == boxesCount\n    }\n\n    getWinner(): string | null {\n        if (this.players[0].score > this.players[1].score) {\n            return this.players[0].name\n        } else if (this.players[1].score > this.players[0].score) {\n            return this.players[1].name\n        } else {\n            return null\n        }\n    }\n\n    calculateBoxes() {\n        let turnScore = 0\n        let xy_arr = []\n        for (let y = 0; y < this.board.height; y++) {\n            for (let x = 0; x < this.board.width; x++) {\n                if (this.board.board[y][x].owner == null) {\n                    if (this.isSquareFull(this.board.board[y][x])) {\n                        this.board.board[y][x].owner = this.players[this.currentPlayer].name\n                        turnScore++\n                        xy_arr.push([x,y])\n                    }\n                }\n            }\n        }\n        return {score: turnScore, xy: xy_arr}\n    }\n\n    playTurn(x: number, y: number, direction: string) {\n        if (!this.isLinePlayed(x,y,direction)) {\n            this.playLine(x, y, direction, this.players[this.currentPlayer].name)\n            let calculation = this.calculateBoxes()\n            let turnScore: number = calculation.score\n            if (turnScore <= 0) {\n                this.nextPlayer()\n            } else {\n                this.players[this.currentPlayer].score += turnScore\n            }\n            return calculation.xy\n        } else {\n            return []\n        }\n        \n    }\n}","export const truncate = (input: string, length: number) => input.length > length ? `${input.substring(0, length)}...` : input;","import {Game, Player} from \"../Game\"\nimport { truncate } from \"../helpers/truncate\"\n\nexport default class UI_Infos extends HTMLElement {\n    game: Game\n\n    constructor() {\n        super()\n        const container = document.createElement(\"div\")\n        container.classList.add(\"game-infos-container\")\n\n        //Tailwind\n        container.classList.add(\n            \"container\",\n            \"relative\",\n            \"sm:w-fit\",\n            \"w-full\",\n            \"p-5\",\n            \"pt-0\",\n            \"flex\",\n            \"flex-col\",\n            \"content-top\",\n            \"items-center\",\n            \"mx-auto\",\n            \"mt-10\",\n            \"bg-slate-200\",\n            \"rounded-md\"\n        )\n\n        const title = document.createElement(\"h1\")\n        title.classList.add(\"infos-title\")\n        title.appendChild(document.createTextNode(\"Score :\"))\n\n        //Tailwind\n        title.classList.add(\n            \"text-2xl\",\n            \"font-bold\",\n            \"mt-3\",\n            \"mb-3\"\n        )\n\n        const score1 = document.createElement(\"span\")\n        const score2 = document.createElement(\"span\")\n        score1.classList.add(\"score-1\")\n        score2.classList.add(\"score-2\")\n\n        // Tailwind\n        const attributes = [\n            \"mx-2\"\n        ]\n        score1.classList.add(...attributes)\n        score2.classList.add(...attributes)\n\n        score1.innerHTML = \"<strong>\" + truncate(this.game.players[0].name, 8) + \"</strong>\" + \" : \" + this.game.players[0].score.toString()\n        score2.innerHTML = \"<strong>\" + truncate(this.game.players[1].name, 8) + \"</strong>\" + \" : \" + this.game.players[1].score.toString()\n\n        container.appendChild(title)\n\n        const scoreDiv = document.createElement(\"div\")\n        scoreDiv.classList.add(\"scores\")\n\n        // Tailwind\n        scoreDiv.classList.add(\n            \"w-3/4\",\n            \"sm:w-fit\",\n            \"flex\",\n            \"justify-between\",\n            \"mb-2\"\n        )\n\n        scoreDiv.appendChild(score1)\n        scoreDiv.appendChild(score2)\n        container.appendChild(scoreDiv)\n\n        const currentPlayer = document.createElement(\"span\")\n        currentPlayer.classList.add(\"current-player\")\n        currentPlayer.innerHTML = \"Au tour de \" + \"<strong>\" + truncate(this.game.players[this.game.currentPlayer].name, 8) + \"</strong>\" + \" de jouer\"\n        container.appendChild(currentPlayer)\n\n        this.appendChild(container)\n    }\n\n    updateScore() {\n        const score1: HTMLSpanElement | null = document.querySelector(\".score-1\")\n        const score2: HTMLSpanElement | null = document.querySelector(\".score-2\")\n        const currentPlayer: HTMLSpanElement | null = document.querySelector(\".current-player\")\n\n        score1!.innerHTML = \"<strong>\" + truncate(this.game.players[0].name, 8) + \"</strong>\" + \" : \" + this.game.players[0].score.toString()\n        score2!.innerHTML = \"<strong>\" + truncate(this.game.players[1].name, 8) + \"</strong>\" + \" : \" + this.game.players[1].score.toString()\n        currentPlayer!.innerHTML = \"Au tour de \" + \"<strong>\" + truncate(this.game.players[this.game.currentPlayer].name, 8) + \"</strong>\" + \" de jouer\"\n    }\n}","import {Board} from \"../Board\";\nimport UI_Board from \"./UI_Board\";\nimport {Game} from \"../Game\";\nimport UI_Infos from \"./UI_Infos\";\n\nexport default class UI_Creation extends HTMLElement {\n\n    connectedCallback() {\n        const submitButton = document.querySelector(\".validate-button\")\n        submitButton!.addEventListener(\"click\", () => {\n            this.createGame()\n        })\n    }\n\n    constructor() {\n        super()\n\n        const overlay = document.createElement(\"div\")\n        overlay.classList.add(\"overlay\")\n\n        // Tailwind\n        overlay.classList.add(\n            \"flex\",\n            \"h-screen\",\n            \"w-screen\",\n            \"bg-black\",\n            \"bg-opacity-50\",\n            \"backdrop-blur-lg\",\n            \"z-0\"\n        )\n\n        const container = document.createElement(\"div\")\n        container.classList.add(\"form-container\")\n\n        // Tailwind\n        container.classList.add(\n            \"container\",\n            \"relative\",\n            \"flex\",\n            \"flex-col\",\n            \"justify-center\",\n            \"items-center\",\n            \"m-auto\",\n            \"w-full\",\n            \"sm:w-1/2\",\n            \"h-fit\",\n            \"sm:h-1/2\",\n            \"bg-white\",\n            \"shadow-sm\",\n            \"rounded-md\"\n        )\n\n        const title = document.createElement(\"h1\")\n        title.classList.add(\"creation-title\")\n        title.appendChild(document.createTextNode(\"Créer une partie\"))\n\n        //Tailwind\n        title.classList.add(\n            \"text-3xl\",\n            \"font-bold\",\n            \"absolute\",\n            \"top-3\"\n        )\n\n        const player1Input = document.createElement(\"input\")\n        player1Input.classList.add(\"player1-input\")\n        player1Input.setAttribute(\"value\", \"Joueur 1\")\n\n        // Tailwind\n        player1Input.classList.add(\n            \"pl-1\",\n            \"border\",\n            \"rounded-md\",\n            \"text-slate-600\",\n            \"border-slate-300\",\n            \"h-10\",\n            \"shadow-sm\",\n            \"w-1/2\",\n            \"mr-2\"\n        )\n\n        const player2Input = document.createElement(\"input\")\n        player2Input.classList.add(\"player2-input\")\n        player2Input.setAttribute(\"value\", \"Joueur 2\")\n\n        // Tailwind\n        player2Input.classList.add(\n            \"pl-1\",\n            \"border\",\n            \"rounded-md\",\n            \"text-slate-600\",\n            \"border-slate-300\",\n            \"h-10\",\n            \"shadow-sm\",\n            \"w-1/2\",\n            \"ml-2\"\n        )\n\n        const validateButton = document.createElement(\"button\")\n        validateButton.classList.add(\"validate-button\")\n        validateButton.appendChild(document.createTextNode(\"Valider\"))\n\n        // Tailwind\n        validateButton.classList.add(\n            \"absolute\",\n            \"bottom-5\",\n            \"h-10\",\n            \"w-2/4\",\n            \"bg-blue-600\",\n            \"text-white\",\n            \"rounded-md\",\n            \"hover:bg-blue-700\",\n            \"active:bg-blue-800\",\n            \"shadow-md\",\n            \"hover:shadow-lg\"\n        )\n        \n        const inputsContainer = document.createElement(\"div\")\n        inputsContainer.classList.add(\"inputs-container\")\n        inputsContainer.appendChild(player1Input)\n        inputsContainer.appendChild(player2Input)\n\n        // Tailwind\n        inputsContainer.classList.add(\n            \"w-3/4\",\n            \"mb-5\",\n            \"mt-16\",\n            \"sm:mt-0\",\n            \"flex\",\n            \"flex-row\",\n            \"justify-between\"\n        )\n\n        const sizeLabel = document.createElement(\"label\")\n        sizeLabel.appendChild(document.createTextNode(\"Taille de la grille :\"))\n        const sizeInput = document.createElement(\"input\")\n        sizeInput.classList.add(\"size-input\")\n        sizeInput.setAttribute(\"type\", \"number\")\n        sizeInput.setAttribute(\"value\", \"5\")\n        sizeInput.setAttribute(\"min\", \"4\")\n        sizeInput.setAttribute(\"max\", \"20\")\n\n        // Tailwind\n        sizeInput.classList.add(\n            \"h-10\",\n            \"w-1/4\",\n            \"border\",\n            \"rounded-md\",\n            \"border-slate-300\",\n            \"pl-1\",\n            \"text-slate-600\",\n            \"mb-20\",\n            \"sm:mb-0\"\n        )\n\n        container.appendChild(title)\n        container.appendChild(inputsContainer)\n        container.appendChild(sizeLabel)\n        container.appendChild(sizeInput)\n        container.appendChild(validateButton)\n\n\n        overlay.appendChild(container)\n        this.appendChild(overlay)\n    }\n\n    createGame() {\n        const sizeInput: HTMLInputElement | null = document.querySelector(\".size-input\")\n        const boardSize = parseInt(sizeInput!.value)\n        const board = new Board(boardSize, boardSize)\n\n        const player1: HTMLInputElement | null = document.querySelector(\".player1-input\")\n        const p1_name = player1!.value\n        const player2: HTMLInputElement | null = document.querySelector(\".player2-input\")\n        const p2_name = player2!.value\n\n        const overlay: HTMLDivElement | null = document.querySelector(\".overlay\")\n        overlay!.style.display = \"none\"\n\n        const ui_board = document.createElement(\"game-board\")\n        ui_board.setAttribute(\"board-width\", boardSize.toString())\n        ui_board.setAttribute(\"board-height\", boardSize.toString())\n        document.querySelector(\".app\")!.appendChild(ui_board)\n        customElements.define(\"game-board\", UI_Board)\n\n        const game = new Game(board, p1_name, p2_name);\n        UI_Board.prototype.game = game;\n\n        UI_Infos.prototype.game = game;\n\n        const ui_infos = document.createElement(\"game-infos\")\n        customElements.define(\"game-infos\", UI_Infos)\n        document.querySelector(\".app\")!.appendChild(ui_infos)\n        \n    }\n}","import UI_Creation from \"./UI/UI_Creation\"\n\ncustomElements.define(\"game-creation\", UI_Creation)\n"],"names":["$4100499228b73440$var$__createBinding","module","exports","__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","$4100499228b73440$var$__exportStar","__exportStar","p","prototype","hasOwnProperty","call","value","default","forceInit","util","math","random","sources","variation","Emitter","Particle","settings","scene","parcelRequire","Lazy","document","window","Error","$7FS7F","Scene","$giDX8","$9504u","$hTpvv","current","$59665861aa1d0693$var$Scene","this","emitters","debug","$3PydK","Debug","renderer","$d06HG","Renderer","scheduledTickId","lastTickTimestamp","performance","now","tick","bind","scheduleTick","createEmitter","options","push","emitter","clearEmitters","splice","length","clearParticles","reduce","sum","requestAnimationFrame","cancelTick","$2ca0ae0984c6786e$var$__spreadArray","__spreadArray","to","from","i","il","j","$2ca0ae0984c6786e$var$Debug","refreshRate","refreshTimer","delta","container","$76ES7","debugContainer","displayStyle","style","display","innerHTML","getDebugInformation","join","particles","acc","cur","infos","Math","round","particleContainer","rootContainer","$52c8cc455d9a1421$var$isContainerActive","isConnected","$52c8cc455d9a1421$var$makeContainer","name","styles","parent","createElement","id","assign","appendChild","$31LFg","position","left","top","height","width","pointerEvents","userSelect","zIndex","toString","body","margin","padding","border","background","color","gravity","respectReducedMotion","$23467044ab2a9467$var$__createBinding","$23467044ab2a9467$var$__exportStar","overrideDefaults","defaults","overrides","rotationToNormal","$9ee6e9c93953c218$var$__createBinding","$9ee6e9c93953c218$var$__exportStar","Circle","$4c94a3349ae67d31$var$Circle","x","y","radius","Color","$dd0c17c4cb33c479$var$Color","r","g","b","values","Float32Array","rgb","set","floor","configurable","mix","weight","$gVTF6","lerp","toHex","hex","v","padStart","$c53d2583437e0e83$var$lerp","a","t","approximately","clamp","invlerp","slerp","epsilon","rad2deg","deg2rad","PI","cos","extendStatics","$f709e09850e5d397$var$__extends","__extends","d1","b1","setPrototypeOf","__proto__","Array","d","TypeError","String","__","constructor","$f709e09850e5d397$var$__spreadArray","Gradient","$f709e09850e5d397$var$Gradient","_super","apply","arguments","interpolate","solid","time","simple","_i","colors","step","map","index","Spline","$c6f863968dd45636$var$Spline","keys","isArray","evaluate","ascendingKeys","sort","upperKeyIndex","findIndex","$15804dea62bf2069$var$__extends","NumericSpline","$15804dea62bf2069$var$NumericSpline","Rect","$a785f6424194afe4$var$Rect","fromScreen","scrollX","scrollY","innerWidth","innerHeight","fromElement","element","getBoundingClientRect","$4bb49d90a8b2319a$var$__spreadArray","Vector","z","xyz","magnitude","sqrt","sqrMagnitude","add","vector","despawningRules","lifetime","particle","$178cf851533c414e$var$Lazy","factory","exists","defaultExists","$d06b5bef59a40ddc$var$Emitter","currentLoop","durationTimer","emissionTimer","attemptedBurstIndices","$2OsQY","$6LEXJ","getDefaultEmitterOptions","emitterOptions","emission","getDefaultEmissionOptions","emissionOptions","getDefaultRendererOptions","rendererOptions","loops","duration","isExpired","burstIndex","_a","bursts","burst","includes","count","$gZIWH","evaluateVariation","emitParticle","delay","rate","_loop_1","this_1","tickParticle","some","rule","gradientSample","splineSample","skewRelative","skew","range","$eiIs5","pick","min","max","randomRange","amount","percentage","randomInsideCircle","randomInsideRect","randomUnitVector","$a6953a64e32074a1$var$randomRange","arr","theta","$dDPyP","sin","rect","$4ed6e82ace476e2e$var$__createBinding","$4ed6e82ace476e2e$var$__exportStar","useGravity","$aKD1R","bounds","modules","angle","sourceSampler","$6GJU0","rectSource","zero","initialLifetime","initialSpeed","initialSize","initialRotation","initialColor","white","circleSource","mouseSource","elementSource","dynamicSource","$4dea45958129f6aa$var$elementSource","source","$4dea45958129f6aa$var$mouseSource","clientX","clientY","$4dea45958129f6aa$var$rectSource","HTMLElement","$4dea45958129f6aa$var$circleSource","MouseEvent","$90ce1f33ee1cbbda$var$defaultApplyColor","nodeName","toLowerCase","fill","shapeFactory","applyColor","applyOpacity","$90ce1f33ee1cbbda$var$defaultApplyOpacity","applyLighting","$90ce1f33ee1cbbda$var$defaultApplyLighting","applyTransform","$90ce1f33ee1cbbda$var$defaultApplyTransform","$69c4a2d9f14bd1f7$var$Particle","populatedOptions","size","location","rotation","velocity","opacity","Symbol","$977079a1043e4fec$var$Renderer","elements","Map","light","$6uYGk","enabled","$5zZXT","matchMedia","matches","begin","renderedParticles","end","it","result","next","done","remove","delete","renderParticle","has","createParticleElement","resolveShapeFactory","resolvableShapes","square","rectangle","circle","roundedSquare","roundedRectangle","star","shape","resolved","$4fa9b802d88e7434$var$__createBinding","$4fa9b802d88e7434$var$__exportStar","confetti","populated","speed","scale","fromHsl","$8PzjS","ModuleBuilder","drive","by","relative","build","shapes","spread","$66de7be0e80844ee$var$ModuleBuilder","factor","isRelative","key","driverKey","through","driver","driverValue","sparkles","$bcd369778f872d1f$export$dc537a3a3893548e","board","line","owner","linesOwners","right","bottom","setSquareOwner","setLineOwner","direction","printBoard","str","console","log","$06eff6019c405e82$export$2e2bcd8739ae039","connectedCallback","replayButton","querySelector","addEventListener","replay","$parcel$interopDefault","super","overlay","classList","endText","createTextNode","setWinner","reload","$d759c8766534d048$export$2e2bcd8739ae039","board_height","hasAttribute","parseInt","getAttribute","board_width","boxes","getElementsByTagName","forEach","dir","hitbox","interractLine","parentNode","children","indexOf","parentElement","game","players","currentPlayer","xy","playTurn","updateScore","setBgColor","isGameFinished","endScreen","customElements","define","getWinner","dot_top_right","className","dot_top_left","dot_bottom_right","dot_bottom_left","table","interractionType","typeString","box","rows","cells","neighborBox","c","$7b066675d1aa79fa$export$985739bfa5723e08","playerName","score","isLinePlayed","playLine","nextPlayer","isSquareFull","boxesCount","filledBoxesCount","calculateBoxes","turnScore","xy_arr","calculation","$9143b7e8b13c84ea$export$6a506b36fdea397d","input","substring","$e90b79a595231448$export$2e2bcd8739ae039","title","score1","score2","attributes","scoreDiv","$7e78193218ebb0a2$export$2e2bcd8739ae039","createGame","player1Input","setAttribute","player2Input","validateButton","inputsContainer","sizeLabel","sizeInput","boardSize","p1_name","p2_name","ui_board","ui_infos"],"version":3,"file":"index.c3c3866a.js.map"}