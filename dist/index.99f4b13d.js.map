{"mappings":"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","sources":["src/Board.ts","src/UI/UI_End.ts","src/UI/UI_Board.ts","src/Game.ts","src/helpers/truncate.ts","src/UI/UI_Infos.ts","src/UI/UI_Creation.ts","src/index.ts"],"sourcesContent":["export interface Square {\r\n    owner: string | null,\r\n    linesOwners : {\r\n        top: string | null,\r\n        left: string | null,\r\n        right: string | null,\r\n        bottom: string | null\r\n    }\r\n}\r\n\r\nexport class Board {\r\n    board: Array<Array<Square>>\r\n    height: number\r\n    width: number\r\n\r\n    constructor(width: number, height: number) {\r\n        this.board = []\r\n        this.height = height\r\n        this.width = width\r\n        for (let i = 0; i < height; i++) {\r\n            let line: Array<Square> = []\r\n            for (let j = 0; j < width; j++) {\r\n                line.push({\r\n                    owner: null,\r\n                    linesOwners : {\r\n                        top: null,\r\n                        left: null,\r\n                        right: null,\r\n                        bottom: null\r\n                    }\r\n                })\r\n            }\r\n            this.board.push(line)\r\n        }\r\n    }\r\n\r\n    setSquareOwner(x: number, y: number, name: string) {\r\n        this.board[y][x].owner = name\r\n    }\r\n\r\n    setLineOwner(x: number, y: number, direction: string, name: string) {\r\n        switch (direction) {\r\n            case \"right\":\r\n                this.board[y][x].linesOwners.right = name\r\n                if (x < this.width - 1) this.board[y][x+1].linesOwners.left = name\r\n                break\r\n            case \"left\":\r\n                this.board[y][x].linesOwners.left = name\r\n                if (x > 0) this.board[y][x-1].linesOwners.right = name\r\n                break\r\n            case \"top\":\r\n                this.board[y][x].linesOwners.top = name\r\n                if (y > 0) this.board[y-1][x].linesOwners.bottom = name\r\n                break\r\n            case \"bottom\":\r\n                this.board[y][x].linesOwners.bottom = name\r\n                if (y < this.height - 1) this.board[y+1][x].linesOwners.top = name\r\n                break\r\n        }\r\n    }\r\n\r\n    printBoard() {\r\n        let str = \"\"\r\n        for (let i = 0; i < this.height; i++) {\r\n            for (let j = 0; j < this.width; j++) {\r\n                if (j == 0) {\r\n                    str += \"□ \"\r\n                } else {\r\n                    str += \" □ \"\r\n                }\r\n            }\r\n            str += \"\\n\"\r\n        }\r\n        console.log(str)\r\n    }\r\n}","import {Board} from \"../Board\";\r\nimport UI_Board from \"./UI_Board\";\r\nimport {Game} from \"../Game\";\r\nimport UI_Infos from \"./UI_Infos\";\r\n\r\nexport default class UI_End extends HTMLElement {\r\n\r\n    connectedCallback() {\r\n        const replayButton: HTMLButtonElement | null = document.querySelector(\".replay-button\")\r\n        replayButton!.addEventListener(\"click\", () => {\r\n            this.replay()\r\n        })\r\n    }\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        const overlay = document.createElement(\"div\")\r\n        overlay.classList.add(\"overlay\")\r\n\r\n        // Tailwind\r\n        overlay.classList.add(\r\n            \"absolute\",\r\n            \"top-0\",\r\n            \"left-0\",\r\n            \"flex\",\r\n            \"h-screen\",\r\n            \"w-screen\",\r\n            \"bg-black\",\r\n            \"bg-opacity-50\",\r\n            \"backdrop-blur-lg\",\r\n            \"z-0\"\r\n        )\r\n\r\n        const container = document.createElement(\"div\")\r\n        container.classList.add(\"form-container\")\r\n\r\n        // Tailwind\r\n        container.classList.add(\r\n            \"container\",\r\n            \"relative\",\r\n            \"flex\",\r\n            \"flex-col\",\r\n            \"justify-center\",\r\n            \"items-center\",\r\n            \"m-auto\",\r\n            \"w-full\",\r\n            \"sm:w-1/4\",\r\n            \"h-fit\",\r\n            \"sm:h-fit\",\r\n            \"p-5\",\r\n            \"bg-white\",\r\n            \"shadow-sm\",\r\n            \"rounded-md\"\r\n        )\r\n\r\n        const endText = document.createElement(\"h1\")\r\n        endText.classList.add(\"end-text\")\r\n\r\n        const replayButton = document.createElement(\"button\")\r\n        replayButton.classList.add(\"replay-button\")\r\n        replayButton.appendChild(document.createTextNode(\"Rejouer\"))\r\n\r\n         // Tailwind\r\n         replayButton.classList.add(\r\n            \"h-10\",\r\n            \"w-2/4\",\r\n            \"mt-5\",\r\n            \"bg-blue-600\",\r\n            \"text-white\",\r\n            \"rounded-md\",\r\n            \"hover:bg-blue-700\",\r\n            \"active:bg-blue-800\",\r\n            \"shadow-md\",\r\n            \"hover:shadow-lg\"\r\n        )\r\n\r\n        container.appendChild(endText)\r\n        container.appendChild(replayButton)\r\n\r\n        overlay.appendChild(container)\r\n        this.appendChild(overlay)\r\n    }\r\n\r\n    setWinner(name: string | null) {\r\n        const endText = document.querySelector(\".end-text\")\r\n        if (name == null) {\r\n            endText!.appendChild(document.createTextNode(\"Égalité\"))\r\n        } else {\r\n            endText!.appendChild(document.createTextNode(\"Victoire de \" + name))\r\n        }\r\n    }\r\n\r\n    replay() {\r\n        window.location.reload()\r\n    }\r\n\r\n}","import {Game} from \"../Game\"\r\nimport UI_Infos from \"./UI_Infos\"\r\nimport UI_End from \"./UI_End\"\r\n\r\nexport default class UI_Board extends HTMLElement {\r\n    game: Game\r\n\r\n    get board_height() {\r\n        if (this.hasAttribute(\"board-height\")) {\r\n            return parseInt(this.getAttribute(\"board-height\")!)\r\n        } else {\r\n            return 10;\r\n        }\r\n    }\r\n\r\n    get board_width() {\r\n        if (this.hasAttribute(\"board-width\")) {\r\n            return parseInt(this.getAttribute(\"board-width\")!)\r\n        } else {\r\n            return 10;\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        const boxes = document.getElementsByTagName(\"td\") \r\n        for (let i = 0; i < boxes.length; i++) {\r\n            [\"left\", \"right\", \"top\", \"bottom\"].forEach(dir => {\r\n                const hitbox = boxes[i].querySelector(\".hitbox-\" + dir) \r\n                hitbox!.addEventListener(\"mouseenter\", () => {\r\n                    this.interractLine(Array.from(boxes[i].parentNode!.children).indexOf(boxes[i]), Array.from(boxes[i].parentNode!.parentNode!.children).indexOf(boxes[i].parentElement!), dir, \"select\", this.game.players[this.game.currentPlayer].color)\r\n                })\r\n                hitbox!.addEventListener(\"mouseleave\", () => {\r\n                    this.interractLine(Array.from(boxes[i].parentNode!.children).indexOf(boxes[i]), Array.from(boxes[i].parentNode!.parentNode!.children).indexOf(boxes[i].parentElement!), dir, \"reset\")\r\n                })\r\n                hitbox!.addEventListener(\"click\", () => {\r\n                    const x = Array.from(boxes[i].parentNode!.children).indexOf(boxes[i])\r\n                    const y = Array.from(boxes[i].parentNode!.parentNode!.children).indexOf(boxes[i].parentElement!)\r\n                    const currentPlayer = this.game.players[this.game.currentPlayer]\r\n                    this.interractLine(x, y, dir, \"click\", currentPlayer.color)\r\n                    const xy = this.game.playTurn(x, y, dir)\r\n                    \r\n                    const infos: UI_Infos | null = document.querySelector(\"game-infos\")\r\n                    infos!.updateScore()\r\n                    if (xy != []) {\r\n                        for (let k = 0; k < xy.length; k++) {\r\n                            this.setBgColor(xy[k][0], xy[k][1], currentPlayer.color)\r\n                        }\r\n                    }\r\n\r\n                    if (this.game.isGameFinished()) {\r\n                        const endScreen = document.createElement(\"end-screen\")\r\n                        document.querySelector(\".app\")!.appendChild(endScreen)\r\n                        customElements.define(\"end-screen\", UI_End)\r\n                        UI_End.prototype.setWinner(this.game.getWinner())\r\n                    }\r\n                    \r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        const body = document.createElement(\"tbody\")\r\n        for (let i = 0; i < this.board_height; i++) {\r\n            const line = document.createElement(\"tr\");\r\n            for (let j = 0; j < this.board_width; j++) {\r\n\r\n                // Create dot elements\r\n                const dot_top_right = document.createElement(\"span\")\r\n                dot_top_right.className = \"dot dot-top-right\"\r\n                const dot_top_left = document.createElement(\"span\")\r\n                dot_top_left.className = \" dot dot-top-left\"\r\n                const dot_bottom_right = document.createElement(\"span\")\r\n                dot_bottom_right.className = \"dot dot-bottom-right\"\r\n                const dot_bottom_left = document.createElement(\"span\")\r\n                dot_bottom_left.className = \"dot dot-bottom-left\"\r\n                \r\n                const square = document.createElement(\"td\")\r\n                square.className = \"square\"\r\n\r\n                // Append dot elements\r\n                square.appendChild(dot_top_left)\r\n                if (j == this.board_width - 1) {\r\n                    square.appendChild(dot_top_right)\r\n                }\r\n                if (i == this.board_height - 1) {\r\n                    square.appendChild(dot_bottom_left)\r\n                }\r\n                if ((i == this.board_height - 1) && (j == this.board_width - 1)) {\r\n                    square.appendChild(dot_bottom_right)\r\n                }\r\n\r\n                [\"left\", \"right\", \"top\", \"bottom\"].forEach(dir => {\r\n                    const hitbox = document.createElement(\"span\")\r\n                    hitbox.className = \"hitbox hitbox-\" + dir\r\n                    square.appendChild(hitbox)\r\n                })\r\n\r\n                line.appendChild(square)\r\n            }\r\n            body.appendChild(line)\r\n        }\r\n        const table = document.createElement(\"table\")\r\n        table.appendChild(body)\r\n        this.appendChild(table)\r\n    }\r\n\r\n    interractLine(x: number, y: number, direction: string, interractionType: string = \"select\", color: string = \"none\") {\r\n        const typeString = interractionType == \"select\" ? \"selected\" : \"clicked\"\r\n        const table: HTMLTableElement = this.getElementsByTagName(\"table\")[0]\r\n        const box = table.rows[y].cells[x]\r\n\r\n        if (interractionType == \"click\" && box.className.includes(\"selected-\" + direction)) {\r\n            box.classList.remove(\"selected-\" + direction)\r\n        }\r\n\r\n        if (!box.className.includes(\"clicked-\" + direction)) {\r\n            switch (direction) {\r\n                case \"right\":\r\n                    if ((x < this.board_width-1)) {\r\n                        const neighborBox = table.rows[y].cells[x+1]\r\n\r\n                        if (interractionType == \"click\" && neighborBox.className.includes(\"selected-left\")) {\r\n                            neighborBox.classList.remove(\"selected-left\")\r\n                        }\r\n\r\n                        interractionType == \"reset\" ? [\"selected\"].forEach(c => neighborBox.classList.remove(c + \"-left\")) :\r\n                        neighborBox.classList.add(typeString + \"-left\") \r\n\r\n                        if (interractionType == \"click\") {\r\n                            neighborBox.classList.add(color + \"-left\")\r\n                        }\r\n                    }\r\n                    interractionType == \"reset\" ? [\"selected\"].forEach(c => box.classList.remove(c + \"-right\")) :\r\n                    box.classList.add(typeString + \"-right\")\r\n                    break\r\n                case \"left\":\r\n                    if ((x > 0)) {\r\n                        const neighborBox = table.rows[y].cells[x-1]\r\n\r\n                        if (interractionType == \"click\" && neighborBox.className.includes(\"selected-right\")) {\r\n                            neighborBox.classList.remove(\"selected-right\")\r\n                        }\r\n\r\n                        interractionType == \"reset\" ? [\"selected\"].forEach(c => neighborBox.classList.remove(c + \"-right\")) :\r\n                        neighborBox.classList.add(typeString + \"-right\")\r\n\r\n                        if (interractionType == \"click\") {\r\n                            neighborBox.classList.add(color + \"-right\")\r\n                        }\r\n                    }\r\n                    interractionType == \"reset\" ? [\"selected\"].forEach(c => box.classList.remove(c + \"-left\")) :\r\n                    box.classList.add(typeString + \"-left\")\r\n                    break\r\n                case \"top\":\r\n                    if ((y > 0)) {\r\n                        const neighborBox = table.rows[y-1].cells[x]\r\n\r\n                        if (interractionType == \"click\" && neighborBox.className.includes(\"selected-bottom\")) {\r\n                            neighborBox.classList.remove(\"selected-bottom\")\r\n                        }\r\n\r\n                        interractionType == \"reset\" ? [\"selected\"].forEach(c => neighborBox.classList.remove(c + \"-bottom\")) :\r\n                        neighborBox.classList.add(typeString + \"-bottom\")\r\n\r\n                        if (interractionType == \"click\") {\r\n                            neighborBox.classList.add(color + \"-bottom\")\r\n                        }\r\n                    }\r\n                    interractionType == \"reset\" ? [\"selected\"].forEach(c => box.classList.remove(c + \"-top\")) :\r\n                    box.classList.add(typeString + \"-top\")\r\n                    break\r\n                case \"bottom\":\r\n                    if ((y < this.board_height-1)) {\r\n                        const neighborBox = table.rows[y+1].cells[x]\r\n\r\n                        if (interractionType == \"click\" && neighborBox.className.includes(\"selected-\")) {\r\n                            neighborBox.classList.remove(\"selected-top\")\r\n                        }\r\n\r\n                        interractionType == \"reset\" ? [\"selected\"].forEach(c => neighborBox.classList.remove(c + \"-top\")) :\r\n                        neighborBox.classList.add(typeString + \"-top\")\r\n\r\n                        if (interractionType == \"click\") {\r\n                            neighborBox.classList.add(color + \"-top\")\r\n                        }\r\n                    }\r\n                    interractionType == \"reset\" ? [\"selected\"].forEach(c => box.classList.remove(c + \"-bottom\")) :\r\n                    box.classList.add(typeString + \"-bottom\")\r\n                    break\r\n            }\r\n            if (interractionType == \"click\") {\r\n                box.classList.add(color + \"-\" + direction)\r\n            }\r\n        }\r\n    }\r\n\r\n    setBgColor(x: number, y: number, color: string) {\r\n        const table: HTMLTableElement = this.getElementsByTagName(\"table\")[0]\r\n        const box = table.rows[y].cells[x]\r\n        box.classList.add(\"background-\" + color)\r\n    }\r\n}\r\n\r\n","import { Board, Square } from \"./Board\";\r\n\r\nexport interface Player {\r\n    name: string,\r\n    score: number,\r\n    color: string\r\n}\r\n\r\nexport class Game {\r\n    board: Board\r\n    players: Array<Player>\r\n    currentPlayer: number\r\n\r\n    constructor(board: Board, ...players: string[]) {\r\n        this.board = board;\r\n        const colors = [\"blue\", \"red\"]\r\n        this.players = []\r\n        let i = 0\r\n        players.map(playerName => {\r\n            this.players.push({name: playerName, score: 0, color: colors[i]})\r\n            i++\r\n        })\r\n        this.currentPlayer = 0\r\n    }\r\n\r\n    isLinePlayed(x: number, y: number, direction: string) {\r\n        return this.board.board[y][x].linesOwners[direction] != null\r\n    }\r\n\r\n    playLine(x: number, y: number, direction: string, name: string) {\r\n        this.board.setLineOwner(x,y,direction,name)\r\n    }\r\n\r\n    nextPlayer() {\r\n        this.currentPlayer != this.players.length - 1 ? this.currentPlayer++ : this.currentPlayer = 0\r\n    }\r\n\r\n    isSquareFull(square: Square): boolean {\r\n        return ((square.linesOwners.left != null) &&\r\n        (square.linesOwners.top != null) &&\r\n        (square.linesOwners.right != null) &&\r\n        (square.linesOwners.bottom != null))\r\n    }\r\n\r\n    isGameFinished() {\r\n        const boxesCount = this.board.width * this.board.height\r\n        let filledBoxesCount = 0\r\n        for (let y = 0; y < this.board.height; y++) {\r\n            for (let x = 0; x < this.board.width; x++) {\r\n                if (this.board.board[y][x].owner != null) {\r\n                    filledBoxesCount++\r\n                } else {\r\n                    return false\r\n                }\r\n            }\r\n        }\r\n        return filledBoxesCount == boxesCount\r\n    }\r\n\r\n    getWinner(): string | null {\r\n        if (this.players[0].score > this.players[1].score) {\r\n            return this.players[0].name\r\n        } else if (this.players[1].score > this.players[0].score) {\r\n            return this.players[1].name\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    calculateBoxes() {\r\n        let turnScore = 0\r\n        let xy_arr = []\r\n        for (let y = 0; y < this.board.height; y++) {\r\n            for (let x = 0; x < this.board.width; x++) {\r\n                if (this.board.board[y][x].owner == null) {\r\n                    if (this.isSquareFull(this.board.board[y][x])) {\r\n                        this.board.board[y][x].owner = this.players[this.currentPlayer].name\r\n                        turnScore++\r\n                        xy_arr.push([x,y])\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return {score: turnScore, xy: xy_arr}\r\n    }\r\n\r\n    playTurn(x: number, y: number, direction: string) {\r\n        if (!this.isLinePlayed(x,y,direction)) {\r\n            this.playLine(x, y, direction, this.players[this.currentPlayer].name)\r\n            let calculation = this.calculateBoxes()\r\n            let turnScore: number = calculation.score\r\n            if (turnScore <= 0) {\r\n                this.nextPlayer()\r\n            } else {\r\n                this.players[this.currentPlayer].score += turnScore\r\n            }\r\n            return calculation.xy\r\n        } else {\r\n            return []\r\n        }\r\n        \r\n    }\r\n}","export const truncate = (input: string, length: number) => input.length > length ? `${input.substring(0, length)}...` : input;","import {Game, Player} from \"../Game\"\r\nimport { truncate } from \"../helpers/truncate\"\r\n\r\nexport default class UI_Infos extends HTMLElement {\r\n    game: Game\r\n\r\n    constructor() {\r\n        super()\r\n        const container = document.createElement(\"div\")\r\n        container.classList.add(\"game-infos-container\")\r\n\r\n        //Tailwind\r\n        container.classList.add(\r\n            \"container\",\r\n            \"relative\",\r\n            \"sm:w-fit\",\r\n            \"w-full\",\r\n            \"p-5\",\r\n            \"pt-0\",\r\n            \"flex\",\r\n            \"flex-col\",\r\n            \"content-top\",\r\n            \"items-center\",\r\n            \"mx-auto\",\r\n            \"mt-10\",\r\n            \"bg-slate-200\",\r\n            \"rounded-md\"\r\n        )\r\n\r\n        const title = document.createElement(\"h1\")\r\n        title.classList.add(\"infos-title\")\r\n        title.appendChild(document.createTextNode(\"Score :\"))\r\n\r\n        //Tailwind\r\n        title.classList.add(\r\n            \"text-2xl\",\r\n            \"font-bold\",\r\n            \"mt-3\",\r\n            \"mb-3\"\r\n        )\r\n\r\n        const score1 = document.createElement(\"span\")\r\n        const score2 = document.createElement(\"span\")\r\n        score1.classList.add(\"score-1\")\r\n        score2.classList.add(\"score-2\")\r\n\r\n        // Tailwind\r\n        const attributes = [\r\n            \"mx-2\"\r\n        ]\r\n        score1.classList.add(...attributes)\r\n        score2.classList.add(...attributes)\r\n\r\n        score1.innerHTML = \"<strong>\" + truncate(this.game.players[0].name, 8) + \"</strong>\" + \" : \" + this.game.players[0].score.toString()\r\n        score2.innerHTML = \"<strong>\" + truncate(this.game.players[1].name, 8) + \"</strong>\" + \" : \" + this.game.players[1].score.toString()\r\n\r\n        container.appendChild(title)\r\n\r\n        const scoreDiv = document.createElement(\"div\")\r\n        scoreDiv.classList.add(\"scores\")\r\n\r\n        // Tailwind\r\n        scoreDiv.classList.add(\r\n            \"w-1/2\",\r\n            \"sm:w-fit\",\r\n            \"flex\",\r\n            \"justify-between\",\r\n            \"mb-2\"\r\n        )\r\n\r\n        scoreDiv.appendChild(score1)\r\n        scoreDiv.appendChild(score2)\r\n        container.appendChild(scoreDiv)\r\n\r\n        const currentPlayer = document.createElement(\"span\")\r\n        currentPlayer.classList.add(\"current-player\")\r\n        currentPlayer.innerHTML = \"Au tour de \" + \"<strong>\" + truncate(this.game.players[this.game.currentPlayer].name, 8) + \"</strong>\" + \" de jouer\"\r\n        container.appendChild(currentPlayer)\r\n\r\n        this.appendChild(container)\r\n    }\r\n\r\n    updateScore() {\r\n        const score1: HTMLSpanElement | null = document.querySelector(\".score-1\")\r\n        const score2: HTMLSpanElement | null = document.querySelector(\".score-2\")\r\n        const currentPlayer: HTMLSpanElement | null = document.querySelector(\".current-player\")\r\n\r\n        score1!.innerHTML = \"<strong>\" + truncate(this.game.players[0].name, 8) + \"</strong>\" + \" : \" + this.game.players[0].score.toString()\r\n        score2!.innerHTML = \"<strong>\" + truncate(this.game.players[1].name, 8) + \"</strong>\" + \" : \" + this.game.players[1].score.toString()\r\n        currentPlayer!.innerHTML = \"Au tour de \" + \"<strong>\" + truncate(this.game.players[this.game.currentPlayer].name, 8) + \"</strong>\" + \" de jouer\"\r\n    }\r\n}","import {Board} from \"../Board\";\r\nimport UI_Board from \"./UI_Board\";\r\nimport {Game} from \"../Game\";\r\nimport UI_Infos from \"./UI_Infos\";\r\n\r\nexport default class UI_Creation extends HTMLElement {\r\n\r\n    connectedCallback() {\r\n        const submitButton = document.querySelector(\".validate-button\")\r\n        submitButton!.addEventListener(\"click\", () => {\r\n            this.createGame()\r\n        })\r\n    }\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        const overlay = document.createElement(\"div\")\r\n        overlay.classList.add(\"overlay\")\r\n\r\n        // Tailwind\r\n        overlay.classList.add(\r\n            \"flex\",\r\n            \"h-screen\",\r\n            \"w-screen\",\r\n            \"bg-black\",\r\n            \"bg-opacity-50\",\r\n            \"backdrop-blur-lg\",\r\n            \"z-0\"\r\n        )\r\n\r\n        const container = document.createElement(\"div\")\r\n        container.classList.add(\"form-container\")\r\n\r\n        // Tailwind\r\n        container.classList.add(\r\n            \"container\",\r\n            \"relative\",\r\n            \"flex\",\r\n            \"flex-col\",\r\n            \"justify-center\",\r\n            \"items-center\",\r\n            \"m-auto\",\r\n            \"w-full\",\r\n            \"sm:w-1/2\",\r\n            \"h-2/5\",\r\n            \"sm:h-1/2\",\r\n            \"bg-white\",\r\n            \"shadow-sm\",\r\n            \"rounded-md\"\r\n        )\r\n\r\n        const title = document.createElement(\"h1\")\r\n        title.classList.add(\"creation-title\")\r\n        title.appendChild(document.createTextNode(\"Créer une partie\"))\r\n\r\n        //Tailwind\r\n        title.classList.add(\r\n            \"text-3xl\",\r\n            \"font-bold\",\r\n            \"absolute\",\r\n            \"top-3\"\r\n        )\r\n\r\n        const player1Input = document.createElement(\"input\")\r\n        player1Input.classList.add(\"player1-input\")\r\n        player1Input.setAttribute(\"value\", \"Joueur 1\")\r\n\r\n        // Tailwind\r\n        player1Input.classList.add(\r\n            \"pl-1\",\r\n            \"border\",\r\n            \"rounded-md\",\r\n            \"text-slate-600\",\r\n            \"border-slate-300\",\r\n            \"h-10\",\r\n            \"shadow-sm\",\r\n            \"w-1/2\",\r\n            \"mr-2\"\r\n        )\r\n\r\n        const player2Input = document.createElement(\"input\")\r\n        player2Input.classList.add(\"player2-input\")\r\n        player2Input.setAttribute(\"value\", \"Joueur 2\")\r\n\r\n        // Tailwind\r\n        player2Input.classList.add(\r\n            \"pl-1\",\r\n            \"border\",\r\n            \"rounded-md\",\r\n            \"text-slate-600\",\r\n            \"border-slate-300\",\r\n            \"h-10\",\r\n            \"shadow-sm\",\r\n            \"w-1/2\",\r\n            \"ml-2\"\r\n        )\r\n\r\n        const validateButton = document.createElement(\"button\")\r\n        validateButton.classList.add(\"validate-button\")\r\n        validateButton.appendChild(document.createTextNode(\"Valider\"))\r\n\r\n        // Tailwind\r\n        validateButton.classList.add(\r\n            \"absolute\",\r\n            \"bottom-5\",\r\n            \"h-10\",\r\n            \"w-2/4\",\r\n            \"bg-blue-600\",\r\n            \"text-white\",\r\n            \"rounded-md\",\r\n            \"hover:bg-blue-700\",\r\n            \"active:bg-blue-800\",\r\n            \"shadow-md\",\r\n            \"hover:shadow-lg\"\r\n        )\r\n        \r\n        const inputsContainer = document.createElement(\"div\")\r\n        inputsContainer.classList.add(\"inputs-container\")\r\n        inputsContainer.appendChild(player1Input)\r\n        inputsContainer.appendChild(player2Input)\r\n\r\n        // Tailwind\r\n        inputsContainer.classList.add(\r\n            \"w-3/4\",\r\n            \"mb-5\",\r\n            \"flex\",\r\n            \"flex-row\",\r\n            \"justify-between\"\r\n        )\r\n\r\n        const sizeLabel = document.createElement(\"label\")\r\n        sizeLabel.appendChild(document.createTextNode(\"Taille de la grille :\"))\r\n        const sizeInput = document.createElement(\"input\")\r\n        sizeInput.classList.add(\"size-input\")\r\n        sizeInput.setAttribute(\"type\", \"number\")\r\n        sizeInput.setAttribute(\"value\", \"5\")\r\n        sizeInput.setAttribute(\"min\", \"4\")\r\n        sizeInput.setAttribute(\"max\", \"20\")\r\n\r\n        // Tailwind\r\n        sizeInput.classList.add(\r\n            \"h-10\",\r\n            \"w-1/4\",\r\n            \"border\",\r\n            \"rounded-md\",\r\n            \"border-slate-300\",\r\n            \"pl-1\",\r\n            \"text-slate-600\",\r\n            \"mb-5\"\r\n        )\r\n\r\n        container.appendChild(title)\r\n        container.appendChild(inputsContainer)\r\n        container.appendChild(sizeLabel)\r\n        container.appendChild(sizeInput)\r\n        container.appendChild(validateButton)\r\n\r\n\r\n        overlay.appendChild(container)\r\n        this.appendChild(overlay)\r\n    }\r\n\r\n    createGame() {\r\n        const sizeInput: HTMLInputElement | null = document.querySelector(\".size-input\")\r\n        const boardSize = parseInt(sizeInput!.value)\r\n        const board = new Board(boardSize, boardSize)\r\n\r\n        const player1: HTMLInputElement | null = document.querySelector(\".player1-input\")\r\n        const p1_name = player1!.value\r\n        const player2: HTMLInputElement | null = document.querySelector(\".player2-input\")\r\n        const p2_name = player2!.value\r\n\r\n        const overlay: HTMLDivElement | null = document.querySelector(\".overlay\")\r\n        overlay!.style.display = \"none\"\r\n\r\n        const ui_board = document.createElement(\"game-board\")\r\n        ui_board.setAttribute(\"board-width\", boardSize.toString())\r\n        ui_board.setAttribute(\"board-height\", boardSize.toString())\r\n        document.querySelector(\".app\")!.appendChild(ui_board)\r\n        customElements.define(\"game-board\", UI_Board)\r\n\r\n        const game = new Game(board, p1_name, p2_name);\r\n        UI_Board.prototype.game = game;\r\n\r\n        UI_Infos.prototype.game = game;\r\n\r\n        const ui_infos = document.createElement(\"game-infos\")\r\n        customElements.define(\"game-infos\", UI_Infos)\r\n        document.querySelector(\".app\")!.appendChild(ui_infos)\r\n        \r\n    }\r\n}","import UI_Creation from \"./UI/UI_Creation\"\r\n\r\ncustomElements.define(\"game-creation\", UI_Creation)\r\n"],"names":["$bcd369778f872d1f$export$dc537a3a3893548e","constructor","width","height","this","board","i","line","j","push","owner","linesOwners","top","left","right","bottom","setSquareOwner","x","y","name","setLineOwner","direction","printBoard","str","console","log","$06eff6019c405e82$export$2e2bcd8739ae039","HTMLElement","connectedCallback","document","querySelector","addEventListener","replay","super","overlay","createElement","classList","add","container","endText","replayButton","appendChild","createTextNode","setWinner","window","location","reload","$d759c8766534d048$export$2e2bcd8739ae039","board_height","hasAttribute","parseInt","getAttribute","board_width","boxes","getElementsByTagName","length","forEach","dir","hitbox","interractLine","Array","from","parentNode","children","indexOf","parentElement","game","players","currentPlayer","color","xy","playTurn","updateScore","k","setBgColor","isGameFinished","endScreen","customElements","define","prototype","getWinner","body","dot_top_right","className","dot_top_left","dot_bottom_right","dot_bottom_left","square","table","interractionType","typeString","box","rows","cells","includes","remove","neighborBox","c","$7b066675d1aa79fa$export$985739bfa5723e08","colors","map","playerName","score","isLinePlayed","playLine","nextPlayer","isSquareFull","boxesCount","filledBoxesCount","calculateBoxes","turnScore","xy_arr","calculation","$9143b7e8b13c84ea$export$6a506b36fdea397d","input","substring","$e90b79a595231448$export$2e2bcd8739ae039","title","score1","score2","attributes","innerHTML","toString","scoreDiv","$7e78193218ebb0a2$export$2e2bcd8739ae039","createGame","player1Input","setAttribute","player2Input","validateButton","inputsContainer","sizeLabel","sizeInput","boardSize","value","p1_name","p2_name","style","display","ui_board","ui_infos"],"version":3,"file":"index.99f4b13d.js.map"}